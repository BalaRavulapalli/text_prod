ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.352829
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","Ancient Greek philosophy emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000397
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents3
ERROR:root:total before 0:00:02.962009
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001748
ERROR:root:output sents fb 2
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.", 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.']), ('questions', ['What civilizations did the Ancient Greeks build on?', 'What ancient Greek mathematicians helped us understand geometry?', 'Who developed some of the first astronomical models?']), ('answers', ['Egypt and Mesopotamia', 'Pythagoras, Euclid, and Archimedes', 'Ancient Greeks']), ('options', [['Persia and India', 'Greece and Rome', 'Syria and Asia Minor'], ['Plato and Archimedes', 'Euclidean geometry and Archimedes', 'Plato, Euclidean geometry, and Archimedes'], ['Chinese scholars', 'Renaissance scholars', 'Native American Indians']])])), ('Fill in the Blanks', OrderedDict([('questions', ['Greek philosophical culture is exemplified in the dialogues of  _________ , who turned the questioning style of Socrates into written form.', " _________ , Plato's student, wrote about topics as varied as biology and drama."]), ('answers', ['plato', 'aristotle'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.", 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.']), ('questions', ['What civilizations did the Ancient Greeks build on?', 'What ancient Greek mathematicians helped us understand geometry?', 'Who developed some of the first astronomical models?']), ('answers', ['Egypt and Mesopotamia', 'Pythagoras, Euclid, and Archimedes', 'Ancient Greeks']), ('options', [['Persia and India', 'Greece and Rome', 'Syria and Asia Minor'], ['Plato and Archimedes', 'Euclidean geometry and Archimedes', 'Plato, Euclidean geometry, and Archimedes'], ['Chinese scholars', 'Renaissance scholars', 'Native American Indians']])])), ('Fill in the Blanks', OrderedDict([('questions', ['Greek philosophical culture is exemplified in the dialogues of  _________ , who turned the questioning style of Socrates into written form.', " _________ , Plato's student, wrote about topics as varied as biology and drama."]), ('answers', ['plato', 'aristotle'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.760584
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value 
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.290019
ERROR:root:payload: 'The history of Greece encompasses the history of the territory of the modern nation-state of Greece as well as that of the Greek people and the areas they inhabited and ruled historically. The scope of Greek habitation and rule has varied throughout the ages and as a result, the history of Greece is similarly elastic in what it includes. Generally, the history of Greece is divided into the following periods:\n\nPaleolithic Greece starting c. 3.3 million years ago and ending in 13,000 BC. Significant geomorphological and climatic changes were noted in the modern Greek area which were definitive for the fauna and flora as well as the survival of the Homo sapiens in the region.\nMesolithic Greece starting in 13,000 BC and ending in 7000 BC, it was a period of long and slow development of the primitive human "proto-communities".\nNeolithic Greece; covering a period beginning with the establishment of agricultural societies in 7000 BC and ending in c.\u20093200 – c.\u20093100 BC. It was a vital part of the early history of Greece because it was the base for the early Bronze Age civilizations. The first organized communities were developed and basic art became more advanced.\nAncient Greece usually encompasses Greek antiquity, while part of the region\'s late prehistory (Late Bronze Age) is also considered part of it:\n\nBronze Age (Cycladic culture, Minoan and Helladic); chronology covering a period beginning with the transition to a metal-based economy in 3200/3100 BC during the Eutresis culture and Korakou culture, Cycladic culture with its special figurines, Europe\'s first real civilization (Minoan civilization), Tiryns culture, to the rise and fall of the Mycenaean Greek palaces in the Late Bronze Age collapse. Spans roughly five centuries (1600–1100'
ERROR:root:orig input: 'The history of Greece encompasses the history of the territory of the modern nation-state of Greece as well as that of the Greek people and the areas they inhabited and ruled historically. The scope of Greek habitation and rule has varied throughout the ages and as a result, the history of Greece is similarly elastic in what it includes. Generally, the history of Greece is divided into the following periods:\r\n\r\nPaleolithic Greece starting c. 3.3 million years ago and ending in 13,000 BC. Significant geomorphological and climatic changes were noted in the modern Greek area which were definitive for the fauna and flora as well as the survival of the Homo sapiens in the region.\r\nMesolithic Greece starting in 13,000 BC and ending in 7000 BC, it was a period of long and slow development of the primitive human "proto-communities".\r\nNeolithic Greece; covering a period beginning with the establishment of agricultural societies in 7000 BC and ending in c.\u20093200 – c.\u20093100 BC. It was a vital part of the early history of Greece because it was the base for the early Bronze Age civilizations. The first organized communities were developed and basic art became more advanced.\r\nAncient Greece usually encompasses Greek antiquity, while part of the region\'s late prehistory (Late Bronze Age) is also considered part of it:\r\n\r\nBronze Age (Cycladic culture, Minoan and Helladic); chronology covering a period beginning with the transition to a metal-based economy in 3200/3100 BC during the Eutresis culture and Korakou culture, Cycladic culture with its special figurines, Europe\'s first real civilization (Minoan civilization), Tiryns culture, to the rise and fall of the Mycenaean Greek palaces in the Late Bronze Age collapse. Spans roughly five centuries (1600–1100'
ERROR:root:orig selected_specific len[[["The history of Greece encompasses the history of the territory of the modern nation-state of Greece as well as that of the Greek people and the areas they inhabited and ruled historically.",{},0],["Generally, the history of Greece is divided into the following periods:  Paleolithic Greece starting c. 3.3 million years ago and ending in 13,000 BC.",{},2],["Significant geomorphological and climatic changes were noted in the modern Greek area which were definitive for the fauna and flora as well as the survival of the Homo sapiens in the region.",{},3],["Mesolithic Greece starting in 13,000 BC and ending in 7000 BC, it was a period of long and slow development of the primitive human \"proto-communities\".",{},4],["Neolithic Greece; covering a period beginning with the establishment of agricultural societies in 7000 BC and ending in c. 3200 – c. 3100 BC.",{},5],["It was a vital part of the early history of Greece because it was the base for the early Bronze Age civilizations.",{},6],["Ancient Greece usually encompasses Greek antiquity, while part of the region's late prehistory (Late Bronze Age) is also considered part of it:  Bronze Age (Cycladic culture, Minoan and Helladic); chronology covering a period beginning with the transition to a metal-based economy in 3200/3100 BC during the Eutresis culture and Korakou culture, Cycladic culture with its special figurines, Europe's first real civilization (Minoan civilization), Tiryns culture, to the rise and fall of the Mycenaean Greek palaces in the Late Bronze Age collapse.",{},8],["Spans roughly five centuries (1600–1100",{},9]],["The history of Greece encompasses the history of the territory of the modern nation-state of Greece as well as that of the Greek people and the areas the Greek people inhabited and ruled historically.","The scope of Greek habitation and rule has varied throughout the ages and as a result, the history of Greece is similarly elastic in what The history of Greece includes.","Generally, the history of Greece is divided into the following periods:  Paleolithic Greece starting c. 3.3 million years ago and ending in 13,000 BC.","Significant geomorphological and climatic changes were noted in the modern Greek area which were definitive for the fauna and flora as well as the survival of the Homo sapiens in the region.","Mesolithic Greece starting in 13,000 BC and ending in 7000 BC, it was a period of long and slow development of the primitive human \"proto-communities\".","Neolithic Greece; covering a period beginning with the establishment of agricultural societies in 7000 BC and ending in c. 3200 – c. 3100 BC.","It was a vital part of the early history of Greece because it was the base for the early Bronze Age civilizations.","The first organized communities were developed and basic art became more advanced.","Ancient Greece usually encompasses Greek antiquity, while part of the region's late prehistory (Late Bronze Age) is also considered part of it:  Bronze Age (Cycladic culture, Minoan and Helladic); chronology covering a period beginning with the transition to a metal-based economy in 3200/3100 BC during the Eutresis culture and Korakou culture, Cycladic culture with its special figurines, Europe's first real civilization (Minoan civilization), Tiryns culture, to the rise and fall of the Mycenaean Greek palaces in the Late Bronze Age collapse.","Spans roughly five centuries (1600–1100"]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:05.519922
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.007005
ERROR:root:output sents fb 3
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The history of Greece encompasses the history of the territory of the modern nation-state of Greece as well as that of the Greek people and the areas the Greek people inhabited and ruled historically.', 'Generally, the history of Greece is divided into the following periods:  Paleolithic Greece starting c. 3.3 million years ago and ending in 13,000 BC.']), ('questions', ['The history of Greece encompasses the territory of what?', 'What was the last year of Paleolithic Greece?']), ('answers', ['modern nation-state of Greece', '13,000 BC']), ('options', [['Byzantine Empire of Greece', 'Roman Empire of Greece', 'Persian Empire of Greece'], ['1000 BC', '2000 BC']])])), ('Fill in the Blanks', OrderedDict([('questions', ['Mesolithic Greece starting in 13,000 BC and ending in  _________ , it was a period of long and slow development of the primitive human "proto-communities".', 'Neolithic Greece; covering a  _________  beginning with the establishment of agricultural societies in 7000 BC and ending in c.\u20093200 – c.\u20093100 BC.', 'Significant geomorphological and climatic changes were noted in the modern Greek area which were definitive for the fauna and flora as well as the survival of the Homo sapiens in the  _________ .']), ('answers', ['7000 bc', 'period', 'region'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:06.408518
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:28.008411
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,."]]
ERROR:root:orig selected_specific len5
ERROR:root:total before 0:00:02.770477
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.000657
ERROR:root:output sents fb 5
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', ['Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the  _________ —a model that places the Sun at the center of the solar system.', "Hippocrates, another ancient Greek, established a  _________ , wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.", 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras,  _________ , and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after  _________ , another ancient Greek,.', 'Hippocrates, another ancient Greek, is the most famous physician in  _________ .']), ('answers', ['heliocentric system', 'medical school', 'euclid', 'hippocrates', 'antiquity'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.003138
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 159, in _new_conn
    conn = connection.create_connection(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/util/connection.py", line 61, in create_connection
    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/socket.py", line 918, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 670, in urlopen
    httplib_response = self._make_request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 381, in _make_request
    self._validate_conn(conn)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 978, in _validate_conn
    conn.connect()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 309, in connect
    conn = self._new_conn()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 171, in _new_conn
    raise NewConnectionError(
urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPSConnection object at 0x7f6d1001a130>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/adapters.py", line 439, in send
    resp = conn.urlopen(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 726, in urlopen
    retries = retries.increment(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/util/retry.py", line 446, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='api-inference.huggingface.co', port=443): Max retries exceeded with url: /models/gpt2 (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f6d1001a130>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 676, in query
    response = requests.request("POST", API_URL, headers=headers, data=data)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/api.py", line 61, in request
    return session.request(method=method, url=url, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/sessions.py", line 542, in request
    resp = self.send(prep, **send_kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/sessions.py", line 655, in send
    r = adapter.send(request, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPSConnectionPool(host='api-inference.huggingface.co', port=443): Max retries exceeded with url: /models/gpt2 (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f6d1001a130>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 159, in _new_conn
    conn = connection.create_connection(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/util/connection.py", line 61, in create_connection
    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/socket.py", line 918, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 670, in urlopen
    httplib_response = self._make_request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 381, in _make_request
    self._validate_conn(conn)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 978, in _validate_conn
    conn.connect()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 309, in connect
    conn = self._new_conn()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 171, in _new_conn
    raise NewConnectionError(
urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPSConnection object at 0x7f6d0ffc0610>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/adapters.py", line 439, in send
    resp = conn.urlopen(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 726, in urlopen
    retries = retries.increment(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/util/retry.py", line 446, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='api-inference.huggingface.co', port=443): Max retries exceeded with url: /models/gpt2 (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f6d0ffc0610>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 676, in query
    response = requests.request("POST", API_URL, headers=headers, data=data)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/api.py", line 61, in request
    return session.request(method=method, url=url, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/sessions.py", line 542, in request
    resp = self.send(prep, **send_kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/sessions.py", line 655, in send
    r = adapter.send(request, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPSConnectionPool(host='api-inference.huggingface.co', port=443): Max retries exceeded with url: /models/gpt2 (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f6d0ffc0610>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 159, in _new_conn
    conn = connection.create_connection(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/util/connection.py", line 61, in create_connection
    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/socket.py", line 918, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 670, in urlopen
    httplib_response = self._make_request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 381, in _make_request
    self._validate_conn(conn)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 978, in _validate_conn
    conn.connect()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 309, in connect
    conn = self._new_conn()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 171, in _new_conn
    raise NewConnectionError(
urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPSConnection object at 0x7f6d10015250>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/adapters.py", line 439, in send
    resp = conn.urlopen(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 726, in urlopen
    retries = retries.increment(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/util/retry.py", line 446, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='api-inference.huggingface.co', port=443): Max retries exceeded with url: /models/gpt2 (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f6d10015250>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 676, in query
    response = requests.request("POST", API_URL, headers=headers, data=data)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/api.py", line 61, in request
    return session.request(method=method, url=url, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/sessions.py", line 542, in request
    resp = self.send(prep, **send_kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/sessions.py", line 655, in send
    r = adapter.send(request, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPSConnectionPool(host='api-inference.huggingface.co', port=443): Max retries exceeded with url: /models/gpt2 (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f6d10015250>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 159, in _new_conn
    conn = connection.create_connection(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/util/connection.py", line 61, in create_connection
    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/socket.py", line 918, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 670, in urlopen
    httplib_response = self._make_request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 381, in _make_request
    self._validate_conn(conn)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 978, in _validate_conn
    conn.connect()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 309, in connect
    conn = self._new_conn()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 171, in _new_conn
    raise NewConnectionError(
urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPSConnection object at 0x7f6d0e6e2d60>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/adapters.py", line 439, in send
    resp = conn.urlopen(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 726, in urlopen
    retries = retries.increment(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/util/retry.py", line 446, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='api-inference.huggingface.co', port=443): Max retries exceeded with url: /models/gpt2 (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f6d0e6e2d60>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 676, in query
    response = requests.request("POST", API_URL, headers=headers, data=data)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/api.py", line 61, in request
    return session.request(method=method, url=url, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/sessions.py", line 542, in request
    resp = self.send(prep, **send_kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/sessions.py", line 655, in send
    r = adapter.send(request, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPSConnectionPool(host='api-inference.huggingface.co', port=443): Max retries exceeded with url: /models/gpt2 (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f6d0e6e2d60>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 159, in _new_conn
    conn = connection.create_connection(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/util/connection.py", line 61, in create_connection
    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/socket.py", line 918, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 670, in urlopen
    httplib_response = self._make_request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 381, in _make_request
    self._validate_conn(conn)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 978, in _validate_conn
    conn.connect()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 309, in connect
    conn = self._new_conn()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 171, in _new_conn
    raise NewConnectionError(
urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPSConnection object at 0x7f6d100623a0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/adapters.py", line 439, in send
    resp = conn.urlopen(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 726, in urlopen
    retries = retries.increment(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/util/retry.py", line 446, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='api-inference.huggingface.co', port=443): Max retries exceeded with url: /models/gpt2 (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f6d100623a0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 676, in query
    response = requests.request("POST", API_URL, headers=headers, data=data)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/api.py", line 61, in request
    return session.request(method=method, url=url, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/sessions.py", line 542, in request
    resp = self.send(prep, **send_kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/sessions.py", line 655, in send
    r = adapter.send(request, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPSConnectionPool(host='api-inference.huggingface.co', port=443): Max retries exceeded with url: /models/gpt2 (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f6d100623a0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 159, in _new_conn
    conn = connection.create_connection(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/util/connection.py", line 61, in create_connection
    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/socket.py", line 918, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 670, in urlopen
    httplib_response = self._make_request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 381, in _make_request
    self._validate_conn(conn)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 978, in _validate_conn
    conn.connect()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 309, in connect
    conn = self._new_conn()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 171, in _new_conn
    raise NewConnectionError(
urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPSConnection object at 0x7f6d0e6052e0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/adapters.py", line 439, in send
    resp = conn.urlopen(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 726, in urlopen
    retries = retries.increment(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/util/retry.py", line 446, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='api-inference.huggingface.co', port=443): Max retries exceeded with url: /models/gpt2 (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f6d0e6052e0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 676, in query
    response = requests.request("POST", API_URL, headers=headers, data=data)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/api.py", line 61, in request
    return session.request(method=method, url=url, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/sessions.py", line 542, in request
    resp = self.send(prep, **send_kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/sessions.py", line 655, in send
    r = adapter.send(request, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPSConnectionPool(host='api-inference.huggingface.co', port=443): Max retries exceeded with url: /models/gpt2 (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f6d0e6052e0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 159, in _new_conn
    conn = connection.create_connection(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/util/connection.py", line 61, in create_connection
    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/socket.py", line 918, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 670, in urlopen
    httplib_response = self._make_request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 381, in _make_request
    self._validate_conn(conn)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 978, in _validate_conn
    conn.connect()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 309, in connect
    conn = self._new_conn()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 171, in _new_conn
    raise NewConnectionError(
urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPSConnection object at 0x7f6d0e6a2070>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/adapters.py", line 439, in send
    resp = conn.urlopen(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 726, in urlopen
    retries = retries.increment(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/util/retry.py", line 446, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='api-inference.huggingface.co', port=443): Max retries exceeded with url: /models/gpt2 (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f6d0e6a2070>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 676, in query
    response = requests.request("POST", API_URL, headers=headers, data=data)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/api.py", line 61, in request
    return session.request(method=method, url=url, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/sessions.py", line 542, in request
    resp = self.send(prep, **send_kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/sessions.py", line 655, in send
    r = adapter.send(request, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPSConnectionPool(host='api-inference.huggingface.co', port=443): Max retries exceeded with url: /models/gpt2 (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f6d0e6a2070>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 159, in _new_conn
    conn = connection.create_connection(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/util/connection.py", line 61, in create_connection
    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/socket.py", line 918, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 670, in urlopen
    httplib_response = self._make_request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 381, in _make_request
    self._validate_conn(conn)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 978, in _validate_conn
    conn.connect()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 309, in connect
    conn = self._new_conn()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 171, in _new_conn
    raise NewConnectionError(
urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPSConnection object at 0x7f6d0e7196d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/adapters.py", line 439, in send
    resp = conn.urlopen(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 726, in urlopen
    retries = retries.increment(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/util/retry.py", line 446, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='api-inference.huggingface.co', port=443): Max retries exceeded with url: /models/gpt2 (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f6d0e7196d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 676, in query
    response = requests.request("POST", API_URL, headers=headers, data=data)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/api.py", line 61, in request
    return session.request(method=method, url=url, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/sessions.py", line 542, in request
    resp = self.send(prep, **send_kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/sessions.py", line 655, in send
    r = adapter.send(request, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPSConnectionPool(host='api-inference.huggingface.co', port=443): Max retries exceeded with url: /models/gpt2 (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f6d0e7196d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 159, in _new_conn
    conn = connection.create_connection(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/util/connection.py", line 61, in create_connection
    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/socket.py", line 918, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 670, in urlopen
    httplib_response = self._make_request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 381, in _make_request
    self._validate_conn(conn)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 978, in _validate_conn
    conn.connect()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 309, in connect
    conn = self._new_conn()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 171, in _new_conn
    raise NewConnectionError(
urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPSConnection object at 0x7f6d0e6c91c0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/adapters.py", line 439, in send
    resp = conn.urlopen(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 726, in urlopen
    retries = retries.increment(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/util/retry.py", line 446, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='api-inference.huggingface.co', port=443): Max retries exceeded with url: /models/gpt2 (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f6d0e6c91c0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 676, in query
    response = requests.request("POST", API_URL, headers=headers, data=data)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/api.py", line 61, in request
    return session.request(method=method, url=url, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/sessions.py", line 542, in request
    resp = self.send(prep, **send_kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/sessions.py", line 655, in send
    r = adapter.send(request, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPSConnectionPool(host='api-inference.huggingface.co', port=443): Max retries exceeded with url: /models/gpt2 (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f6d0e6c91c0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 159, in _new_conn
    conn = connection.create_connection(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/util/connection.py", line 61, in create_connection
    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/socket.py", line 918, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 670, in urlopen
    httplib_response = self._make_request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 381, in _make_request
    self._validate_conn(conn)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 978, in _validate_conn
    conn.connect()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 309, in connect
    conn = self._new_conn()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 171, in _new_conn
    raise NewConnectionError(
urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPSConnection object at 0x7f6d0de4aa60>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/adapters.py", line 439, in send
    resp = conn.urlopen(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 726, in urlopen
    retries = retries.increment(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/util/retry.py", line 446, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='api-inference.huggingface.co', port=443): Max retries exceeded with url: /models/gpt2 (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f6d0de4aa60>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 676, in query
    response = requests.request("POST", API_URL, headers=headers, data=data)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/api.py", line 61, in request
    return session.request(method=method, url=url, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/sessions.py", line 542, in request
    resp = self.send(prep, **send_kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/sessions.py", line 655, in send
    r = adapter.send(request, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPSConnectionPool(host='api-inference.huggingface.co', port=443): Max retries exceeded with url: /models/gpt2 (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f6d0de4aa60>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 159, in _new_conn
    conn = connection.create_connection(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/util/connection.py", line 61, in create_connection
    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/socket.py", line 918, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 670, in urlopen
    httplib_response = self._make_request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 381, in _make_request
    self._validate_conn(conn)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 978, in _validate_conn
    conn.connect()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 309, in connect
    conn = self._new_conn()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connection.py", line 171, in _new_conn
    raise NewConnectionError(
urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPSConnection object at 0x7f6d0e720160>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/adapters.py", line 439, in send
    resp = conn.urlopen(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/connectionpool.py", line 726, in urlopen
    retries = retries.increment(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/urllib3/util/retry.py", line 446, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='api-inference.huggingface.co', port=443): Max retries exceeded with url: /models/gpt2 (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f6d0e720160>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 676, in query
    response = requests.request("POST", API_URL, headers=headers, data=data)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/api.py", line 61, in request
    return session.request(method=method, url=url, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/sessions.py", line 542, in request
    resp = self.send(prep, **send_kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/sessions.py", line 655, in send
    r = adapter.send(request, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPSConnectionPool(host='api-inference.huggingface.co', port=443): Max retries exceeded with url: /models/gpt2 (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f6d0e720160>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.350526
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,."]]
ERROR:root:orig selected_specific len5
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents5
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.']), ('questions', ['What ancient Greek mathematicians helped us understand geometry?', 'Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'What is the medical standard for doctors called?']), ('answers', ['Pythagoras, Euclid, and Archimedes', 'Ancient Greeks', 'Hippocrates', 'The Hippocratic oath']), ('options', [['Plato and Archimedes', 'Euclidean geometry and Archimedes', 'Plato, Euclidean geometry, and Archimedes'], ['Greeks', 'Chinese', 'Romans'], ['Soranus', 'Frontinus', 'Celsus'], ['The Declaration of Independence', "The National Medical Association's code of ethics", "The American Medical Association's code of ethics"]])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:18.556734
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.349029
ERROR:root:payload: 'Hello, I\'m Hank Green and I want to teach you chemistry. But please, do not run away screaming. If you give me five minutes to try to convince you that chemistry is not torture, but instead the amazing and beautiful science of stuff, and if you give it a chance it will not only blow your mind but also give you a deeper understanding of your world. This is just my opinion here, but I think that understanding the world leads to greater ability to enjoy the world and there\'s nothing that helps you understand the world better than chemistry. Chemistry holds the secrets to how life first formed, how cancers are cured, how iPhones have bigger hard drives than 5 year old laptops, and how life on this planet might just be able to continue thriving, even ours, if we play our cards right. Chemistry is the science of how three tiny particles, the proton, the neutron, and the electron, came together in trillions of combinations to form, get this, everything. Now chemistry is a peculiar science, sometimes talked about as a bridge between the ultra abstract world of particle physics and the more visible sciences like biology. But calling chemistry a bridge is like calling Eurasia an island. Chemistry has it all, mad scientists, world changing revelations, the practical, the impractical, medicine, bombs, food, beauty, destruction, life and death, answers to questions you never knew you had. I love chemistry, and I hope I can give you a glimpse into why. So today, let\'s start out with maybe the biggest idea of all time, and move on from there: stuff is made from atoms. [Theme Music] I know, you aren\'t shocked, you aren\'t awed, you might not even be paying attention any more, but when atomic theory was first proposed, it sounded pretty crazy. And yes, we call it \'Atomic Theory\', using the scientific definition of theory, which is "a well-tested set of ideas that explains many disparate observations", not the colloquial definition of theory, which is "a guess." But luckily there\'s no-one running around any more saying "atoms are just a theory." But it wasn\'t that long ago that people were running around saying that. You wanna know who settled it for good? Einstein! Atoms had been postulated for a long time by the 20th century, but it wasn\'t until Einstein mathematically proved the existence of atoms and molecules in 1905 that the matter was truly settled. And you thought Einstein was all about relativity and E=mc2, he also proved atoms exist! Here\'s how it happened: In 1827, a botanist named Robert Brown was looking at pollen grains in water through a microscope and he noticed that they jiggled randomly even when there was no movement to cause the jiggling. It was a mystery for a long time. Until 1905 when Einstein theorized that this phenomenon was caused by as-yet-unproven atomic particles actually smacking into the grains of pollen. He wrote up some fancy math, showing that his theory predicted this motion almost perfectly, and everyone had to concede that yes, tiny discrete bits of matter were indeed smacking into the pollen, and thus molecules, and by extension atoms, must exist. Today, we remember this botanist and his discovery by calling the motion he observed Brownian motion. It\'s kinda crazy that every physical thing you\'ve ever interacted with is made up of little ball thingies. It started with people wondering what would happen if you just kept slicing something in half forever. Eventually, and of course it turns out that there\'s no knife sharp enough to do this, you end up with one, pure, unbreakable bit of that substance. The word "atom", indeed, is from the Greek for "indivisible", though, of course, as we learned in World War II, atoms can be broken as well. So all the stuff that we think of as stuff is made of atoms, tiny discrete particles that have specific properties, depending on the arrangement of three simple subatomic particles. There\'s the proton, heavy and positively charged, the neutron, about the same size as the proton but neutral, and the electron, which has the same amount of charge as the proton, just opposite, and very nearly has no mass at all, about 1800 times less massive than the proton or neutron. Protons and neutrons hang out in the nucleus, and thus are the nuclear components or nucleons; electrons hang out around the nucleus and are the parts of the atom that do all the interesting chemical stuff.'
ERROR:root:orig input: 'Hello, I\'m Hank Green and I want to teach you chemistry. But please, do not run away screaming. If you give me five minutes to try to convince you that chemistry is not torture, but instead the amazing and beautiful science of stuff, and if you give it a chance it will not only blow your mind but also give you a deeper understanding of your world. This is just my opinion here, but I think that understanding the world leads to greater ability to enjoy the world and there\'s nothing that helps you understand the world better than chemistry. Chemistry holds the secrets to how life first formed, how cancers are cured, how iPhones have bigger hard drives than 5 year old laptops, and how life on this planet might just be able to continue thriving, even ours, if we play our cards right. Chemistry is the science of how three tiny particles, the proton, the neutron, and the electron, came together in trillions of combinations to form, get this, everything. Now chemistry is a peculiar science, sometimes talked about as a bridge between the ultra abstract world of particle physics and the more visible sciences like biology. But calling chemistry a bridge is like calling Eurasia an island. Chemistry has it all, mad scientists, world changing revelations, the practical, the impractical, medicine, bombs, food, beauty, destruction, life and death, answers to questions you never knew you had. I love chemistry, and I hope I can give you a glimpse into why. So today, let\'s start out with maybe the biggest idea of all time, and move on from there: stuff is made from atoms. [Theme Music] I know, you aren\'t shocked, you aren\'t awed, you might not even be paying attention any more, but when atomic theory was first proposed, it sounded pretty crazy. And yes, we call it \'Atomic Theory\', using the scientific definition of theory, which is "a well-tested set of ideas that explains many disparate observations", not the colloquial definition of theory, which is "a guess." But luckily there\'s no-one running around any more saying "atoms are just a theory." But it wasn\'t that long ago that people were running around saying that. You wanna know who settled it for good? Einstein! Atoms had been postulated for a long time by the 20th century, but it wasn\'t until Einstein mathematically proved the existence of atoms and molecules in 1905 that the matter was truly settled. And you thought Einstein was all about relativity and E=mc2, he also proved atoms exist! Here\'s how it happened: In 1827, a botanist named Robert Brown was looking at pollen grains in water through a microscope and he noticed that they jiggled randomly even when there was no movement to cause the jiggling. It was a mystery for a long time. Until 1905 when Einstein theorized that this phenomenon was caused by as-yet-unproven atomic particles actually smacking into the grains of pollen. He wrote up some fancy math, showing that his theory predicted this motion almost perfectly, and everyone had to concede that yes, tiny discrete bits of matter were indeed smacking into the pollen, and thus molecules, and by extension atoms, must exist. Today, we remember this botanist and his discovery by calling the motion he observed Brownian motion. It\'s kinda crazy that every physical thing you\'ve ever interacted with is made up of little ball thingies. It started with people wondering what would happen if you just kept slicing something in half forever. Eventually, and of course it turns out that there\'s no knife sharp enough to do this, you end up with one, pure, unbreakable bit of that substance. The word "atom", indeed, is from the Greek for "indivisible", though, of course, as we learned in World War II, atoms can be broken as well. So all the stuff that we think of as stuff is made of atoms, tiny discrete particles that have specific properties, depending on the arrangement of three simple subatomic particles. There\'s the proton, heavy and positively charged, the neutron, about the same size as the proton but neutral, and the electron, which has the same amount of charge as the proton, just opposite, and very nearly has no mass at all, about 1800 times less massive than the proton or neutron. Protons and neutrons hang out in the nucleus, and thus are the nuclear components or nucleons; electrons hang out around the nucleus and are the parts of the atom that do all the interesting chemical stuff.'
ERROR:root:orig selected_specific len[[["Hello, I'm Hank Green and I want to teach you chemistry.",{},0],["If you give me five minutes to try to convince you that chemistry is not torture, but instead the amazing and beautiful science of stuff, and if you give it a chance it will not only blow your mind but also give you a deeper understanding of your world.",{},2],["Chemistry holds the secrets to how life first formed, how cancers are cured, how iPhones have bigger hard drives than 5 year old laptops, and how life on this planet might just be able to continue thriving, even ours, if we play our cards right.",{},4],["Chemistry is the science of how three tiny particles, the proton, the neutron, and the electron, came together in trillions of combinations to form, get this, everything.",{},5],["Chemistry has it all, mad scientists, world changing revelations, the practical, the impractical, medicine, bombs, food, beauty, destruction, life and death, answers to questions you never knew you had.",{},8],["[Theme Music] I know, you aren't shocked, you aren't awed, you might not even be paying attention any more, but when atomic theory was first proposed, it sounded pretty crazy.",{},11],["And yes, we call it 'Atomic Theory', using the scientific definition of theory, which is \"a well-tested set of ideas that explains many disparate observations\", not the colloquial definition of theory, which is \"a guess.\"",{},12],["Einstein!",{},16],["Atoms had been postulated for a long time by the 20th century, but it wasn't until Einstein mathematically proved the existence of atoms and molecules in 1905 that the matter was truly settled.",{},17],["And you thought Einstein was all about relativity and E=mc2, he also proved atoms exist!",{},18],["Here's how it happened: In 1827, a botanist named Robert Brown was looking at pollen grains in water through a microscope and he noticed that they jiggled randomly even when there was no movement to cause the jiggling.",{},19],["Until 1905 when Einstein theorized that this phenomenon was caused by as-yet-unproven atomic particles actually smacking into the grains of pollen.",{},21],["He wrote up some fancy math, showing that his theory predicted this motion almost perfectly, and everyone had to concede that yes, tiny discrete bits of matter were indeed smacking into the pollen, and thus molecules, and by extension atoms, must exist.",{},22],["Today, we remember this botanist and his discovery by calling the motion he observed Brownian motion.",{},23],["The word \"atom\", indeed, is from the Greek for \"indivisible\", though, of course, as we learned in World War II, atoms can be broken as well.",{},27],["So all the stuff that we think of as stuff is made of atoms, tiny discrete particles that have specific properties, depending on the arrangement of three simple subatomic particles.",{},28],["There's the proton, heavy and positively charged, the neutron, about the same size as the proton but neutral, and the electron, which has the same amount of charge as the proton, just opposite, and very nearly has no mass at all, about 1800 times less massive than the proton or neutron.",{},29],["Protons and neutrons hang out in the nucleus, and thus are the nuclear components or nucleons; electrons hang out around the nucleus and are the parts of the atom that do all the interesting chemical stuff.",{},30]],["Hello, I'm Hank Green and I want to teach you chemistry.","But please, do not run away screaming.","If you give me five minutes to try to convince you that chemistry is not torture, but instead the amazing and beautiful science of stuff, and if you give chemistry a chance chemistry will not only blow your mind but also give you a deeper understanding of your world.","This is just my opinion here, but I think that understanding the world leads to greater ability to enjoy the world and there's nothing that helps you understand the world better than chemistry.","Chemistry holds the secrets to how life first formed, how cancers are cured, how iPhones have bigger hard drives than 5 year old laptops, and how life on this planet might just be able to continue thriving, even ours, if we play our cards right.","Chemistry is the science of how three tiny particles, the proton, the neutron, and the electron, came together in trillions of combinations to form, get this, everything.","Now chemistry is a peculiar science, sometimes talked about as a bridge between the ultra abstract world of particle physics and the more visible sciences like biology.","But calling chemistry a bridge is like calling Eurasia an island.","Chemistry has it all, mad scientists, world changing revelations, the practical, the impractical, medicine, bombs, food, beauty, destruction, life and death, answers to questions you never knew you had.","I love chemistry, and I hope I can give you a glimpse into why.","So today, let's start out with maybe the biggest idea of all time, and move on from there: stuff is made from atoms.","[Theme Music] I know, you aren't shocked, you aren't awed, you might not even be paying attention any more, but when atomic theory was first proposed, atomic theory sounded pretty crazy.","And yes, we call atomic theory 'Atomic Theory', using the scientific definition of theory, which is \"a well-tested set of ideas that explains many disparate observations\", not the colloquial definition of theory, which is \"a guess.\"","But luckily there's no-one running around any more saying \"atoms are just a theory.\"","But it wasn't that long ago that people were running around saying that.","You wanna know who settled it for good?","Einstein!","Atoms had been postulated for a long time by the 20th century, but it wasn't until Einstein mathematically proved the existence of atoms and molecules in 1905 that the matter was truly settled.","And you thought Einstein was all about relativity and E=mc2, Einstein!","also proved atoms exist!","Here's how it happened: In 1827, a botanist named Robert Brown was looking at pollen grains in water through a microscope and a botanist named Robert Brown noticed that pollen grains in water jiggled randomly even when there was no movement to cause the jiggling.","the jiggling was a mystery for a long time.","Until 1905 when Einstein theorized that the jiggling was caused by as-yet-unproven atomic particles actually smacking into the grains of pollen.","Einstein!","wrote up some fancy math, showing that Einstein!","'s theory predicted the jiggling almost perfectly, and everyone had to concede that yes, tiny discrete bits of matter were indeed smacking into the pollen, and thus molecules, and by extension atoms, must exist.","Today, we remember a botanist named Robert Brown and a botanist named Robert Brown's discovery by calling the motion a botanist named Robert Brown observed Brownian motion.","It's kinda crazy that every physical thing you've ever interacted with is made up of little ball thingies.","It started with people wondering what would happen if you just kept slicing something in half forever.","Eventually, and of course it turns out that there's no knife sharp enough to do this, you end up with one, pure, unbreakable bit of that substance.","The word \"atom\", indeed, is from the Greek for \"indivisible\", though, of course, as we learned in World War II, atoms can be broken as well.","So all the stuff that we think of as stuff is made of atoms, tiny discrete particles that have specific properties, depending on the arrangement of three simple subatomic particles.","There's the proton, heavy and positively charged, the neutron, about the same size as the proton but neutral, and the electron, which has the same amount of charge as the proton, just opposite, and very nearly has no mass at all, about 1800 times less massive than the proton or neutron.","Protons and neutrons hang out in the nucleus, and thus are the nuclear components or nucleons; electrons hang out around the nucleus and are the parts of the atom that do all the interesting chemical stuff."]]
ERROR:root:orig selected_specific len18
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents10
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ["Hello, I'm Hank Green and I want to teach you chemistry.", 'If you give me five minutes to try to convince you that chemistry is not torture, but instead the amazing and beautiful science of stuff, and if you give chemistry a chance chemistry will not only blow your mind but also give you a deeper understanding of your world.', 'Chemistry holds the secrets to how life first formed, how cancers are cured, how iPhones have bigger hard drives than 5 year old laptops, and how life on this planet might just be able to continue thriving, even ours, if we play our cards right.', 'Chemistry is the science of how three tiny particles, the proton, the neutron, and the electron, came together in trillions of combinations to form, get this, everything.', 'Chemistry has it all, mad scientists, world changing revelations, the practical, the impractical, medicine, bombs, food, beauty, destruction, life and death, answers to questions you never knew you had.', "[Theme Music] I know, you aren't shocked, you aren't awed, you might not even be paying attention any more, but when atomic theory was first proposed, atomic theory sounded pretty crazy.", 'Einstein!', "Atoms had been postulated for a long time by the 20th century, but it wasn't until Einstein mathematically proved the existence of atoms and molecules in 1905 that the matter was truly settled.", 'And you thought Einstein was all about relativity and E=mc2, Einstein!']), ('questions', ['What do I want to teach you?', 'How long does it take me to convince you that chemistry is not torture?', 'What science holds the secrets to how life first formed?', 'What are the three tiny particles in chemistry?', 'What field has mad scientists, world changing revelations, practical, the impractical, medicine, bombs, food, beauty, destruction, life and death?', 'When was atomic theory first proposed?', 'What is the name of the person who was born in the late 19th century?', 'What proved the existence of atoms?', 'What did Einstein think relativity was about?']), ('answers', ['chemistry', 'five minutes', 'Chemistry', 'the proton, the neutron, and the electron', 'Chemistry', 'atomic theory was first proposed, it sounded pretty crazy', 'Einstein', 'Einstein mathematically proved the existence of atoms and molecules in 1905', 'atoms']), ('options', [['math', 'foreign language', 'science'], ['two hours', 'one hour'], ['geology', 'biology', 'anthropology'], ['the proton, the negatively charged particles, and the atomic nucleus', 'the negatively charged particles, the positively charged particles, and the atomic nucleus', 'the positively charged particles, the negatively charged particles, and the atomic nucleus'], ['biology', 'engineering', 'psychology'], ['atomic theory was first proposed in the 1920s', 'atomic theory was first proposed in the 1960s', 'atomic theory was first proposed in the 1930s'], ['Freud', 'James', 'Newton'], ['Planck in 1913 proved the existence of atoms', 'Rutherford in 1911 proved the existence of atoms', 'official decree of the German government in 1913'], ['time', 'space', 'the laws of motion']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:09.474644
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:10.629857
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","Ancient Greek philosophy emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,."]]
ERROR:root:orig selected_specific len6
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.006848
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents3
ERROR:root:total before 0:00:03.958437
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.000455
ERROR:root:output sents fb 1
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.", 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.']), ('questions', ['What civilizations did the Ancient Greeks build on?', 'What ancient Greek mathematicians helped us understand geometry?', 'Who developed some of the first astronomical models?']), ('answers', ['Egypt and Mesopotamia', 'Pythagoras, Euclid, and Archimedes', 'Ancient Greeks']), ('options', [['Greece and Rome', 'Persia and India', 'Syria and Asia Minor'], ['Euclidean geometry and Archimedes', 'Plato and Archimedes', 'Plato, Euclidean geometry, and Archimedes'], ['Greeks', 'Chinese', 'Romans']])])), ('Fill in the Blanks', OrderedDict([('questions', ['The Hippocratic oath, a  _________  for doctors, is named after Hippocrates, another ancient Greek,.']), ('answers', ['medical standard'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.", 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.']), ('questions', ['What civilizations did the Ancient Greeks build on?', 'What ancient Greek mathematicians helped us understand geometry?', 'Who developed some of the first astronomical models?']), ('answers', ['Egypt and Mesopotamia', 'Pythagoras, Euclid, and Archimedes', 'Ancient Greeks']), ('options', [['Greece and Rome', 'Persia and India', 'Syria and Asia Minor'], ['Euclidean geometry and Archimedes', 'Plato and Archimedes', 'Plato, Euclidean geometry, and Archimedes'], ['Greeks', 'Chinese', 'Romans']])])), ('Fill in the Blanks', OrderedDict([('questions', ['The Hippocratic oath, a  _________  for doctors, is named after Hippocrates, another ancient Greek,.']), ('answers', ['medical standard'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.502260
ERROR:root:api_check 0:00:00.345348
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","Ancient Greek philosophy emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,."]]
ERROR:root:orig selected_specific len6
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000721
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:total before 0:00:02.755063
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001170
ERROR:root:output sents fb 2
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.']), ('questions', ['What civilizations did the Ancient Greeks build on?']), ('answers', ['Egypt and Mesopotamia']), ('options', [['Greece and Rome', 'Persia and India', 'Syria and Asia Minor']])])), ('Fill in the Blanks', OrderedDict([('questions', ['Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the  _________ —a model that places the Sun at the center of the solar system.', "Hippocrates, another ancient Greek, established a  _________ , wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('answers', ['heliocentric system', 'medical school'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.']), ('questions', ['What civilizations did the Ancient Greeks build on?']), ('answers', ['Egypt and Mesopotamia']), ('options', [['Greece and Rome', 'Persia and India', 'Syria and Asia Minor']])])), ('Fill in the Blanks', OrderedDict([('questions', ['Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the  _________ —a model that places the Sun at the center of the solar system.', "Hippocrates, another ancient Greek, established a  _________ , wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('answers', ['heliocentric system', 'medical school'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:06.224458
ERROR:root:api_check 0:00:31.324952
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","Ancient Greek philosophy emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,."]]
ERROR:root:orig selected_specific len6
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents6
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.", 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.']), ('questions', ['What civilizations did the Ancient Greeks build on?', 'What ancient Greek mathematicians helped us understand geometry?', 'Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'What is the medical standard for doctors called?']), ('answers', ['Egypt and Mesopotamia', 'Pythagoras, Euclid, and Archimedes', 'Ancient Greeks', 'Hippocrates', 'The Hippocratic oath']), ('options', [['Syria and Asia Minor', 'Greece and Rome', 'Persia and India'], ['Plato, Euclidean geometry, and Archimedes', 'Plato and Archimedes', 'Euclidean geometry and Archimedes'], ['Renaissance scholars', 'Native American Indians', 'Chinese scholars'], ['Vesalius', 'Galen', 'Celsus'], ["The American Medical Association's code of ethics", "The National Medical Association's code of ethics", 'The Declaration of Independence']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:12.757913
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:31.048440
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,."]]
ERROR:root:orig selected_specific len5
ERROR:root:total before 0:00:02.890700
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001033
ERROR:root:output sents fb 5
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', ['Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the  _________ —a model that places the Sun at the center of the solar system.', "Hippocrates, another ancient Greek, established a  _________ , wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.", 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras,  _________ , and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after  _________ , another ancient Greek,.', 'Hippocrates, another ancient Greek, is the most famous physician in  _________ .']), ('answers', ['heliocentric system', 'medical school', 'euclid', 'hippocrates', 'antiquity'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.441613
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.336332
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.001785
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:total before 0:00:02.821280
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001484
ERROR:root:output sents fb 1
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.']), ('questions', ['What ancient Greek mathematicians helped us understand geometry?']), ('answers', ['Pythagoras, Euclid, and Archimedes']), ('options', [['Euclidean Geometry and Archimedes', 'Plato, Euclidean Geometry, and Archimedes', 'Plato and Archimedes']])])), ('Fill in the Blanks', OrderedDict([('questions', ["Hippocrates, another ancient Greek, established a  _________ , wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('answers', ['medical school'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.']), ('questions', ['What ancient Greek mathematicians helped us understand geometry?']), ('answers', ['Pythagoras, Euclid, and Archimedes']), ('options', [['Euclidean Geometry and Archimedes', 'Plato, Euclidean Geometry, and Archimedes', 'Plato and Archimedes']])])), ('Fill in the Blanks', OrderedDict([('questions', ["Hippocrates, another ancient Greek, established a  _________ , wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('answers', ['medical school'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.132163
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:31.369484
ERROR:root:payload: 'Economic production can cause environmental damage. This tradeoff arises for all countries, whether high-income or low-income, and whether their economies are market-oriented or command-oriented.\nAn externality, sometimes called a spillover, occurs when an exchange between a buyer and seller has an impact on a third party who is not part of the exchange. Externalities can be positive or negative.\nMarket failure is when the market does not allocate resources on its own efficiently in a way that balances social costs and benefits; externalities are one example of a market failure.\nSocial costs are costs that include both the private costs incurred by firms and also additional external costs incurred by third parties outside the production process.'
ERROR:root:orig input: 'Economic production can cause environmental damage. This tradeoff arises for all countries, whether high-income or low-income, and whether their economies are market-oriented or command-oriented.\r\nAn externality, sometimes called a spillover, occurs when an exchange between a buyer and seller has an impact on a third party who is not part of the exchange. Externalities can be positive or negative.\r\nMarket failure is when the market does not allocate resources on its own efficiently in a way that balances social costs and benefits; externalities are one example of a market failure.\r\nSocial costs are costs that include both the private costs incurred by firms and also additional external costs incurred by third parties outside the production process.'
ERROR:root:orig selected_specific len[[["An externality, sometimes called a spillover, occurs when an exchange between a buyer and seller has an impact on a third party who is not part of the exchange.",{},2]],["Economic production can cause environmental damage.","This tradeoff arises for all countries, whether high-income or low-income, and whether all countries, whether high-income or low-income's economies are market-oriented or command-oriented.","An externality, sometimes called a spillover, occurs when an exchange between a buyer and seller has an impact on a third party who is not part of the exchange.","Externalities can be positive or negative.","Market failure is when the market does not allocate resources on its own efficiently in a way that balances social costs and benefits; externalities are one example of a market failure.","Social costs are costs that include both the private costs incurred by firms and also additional external costs incurred by third parties outside the production process."]]
ERROR:root:orig selected_specific len1
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['An externality, sometimes called a spillover, occurs when an exchange between a buyer and seller has an impact on a third party who is not part of the exchange.']), ('questions', ['What occurs when an exchange between a buyer and seller has an impact on a third party who is not part of the exchange?']), ('answers', ['An externality, sometimes called a spillover']), ('options', [['A positive externality', 'A negative externality', 'An opportunity cost externality']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.636791
ERROR:root:api_check 0:00:00.365591
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","Ancient Greek philosophy emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.002793
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:total before 0:00:03.826200
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.006140
ERROR:root:output sents fb 1
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.']), ('questions', ['What civilizations did the Ancient Greeks build on?']), ('answers', ['Egypt and Mesopotamia']), ('options', [['Persia and India', 'Syria and Asia Minor', 'Greece and Rome']])])), ('Fill in the Blanks', OrderedDict([('questions', ["Hippocrates, another ancient Greek, established a  _________ , wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('answers', ['medical school'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.']), ('questions', ['What civilizations did the Ancient Greeks build on?']), ('answers', ['Egypt and Mesopotamia']), ('options', [['Persia and India', 'Syria and Asia Minor', 'Greece and Rome']])])), ('Fill in the Blanks', OrderedDict([('questions', ["Hippocrates, another ancient Greek, established a  _________ , wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('answers', ['medical school'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:09.518344
ERROR:root:api_check 0:00:00.359167
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","Ancient Greek philosophy emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:total before 0:00:02.343147
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.002048
ERROR:root:output sents fb 7
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', ['Some of the first astronomical models were developed by  _________  trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', "Hippocrates, another ancient Greek, established a  _________ , wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.", 'Greek philosophical culture is exemplified in the dialogues of  _________ , who turned the questioning style of Socrates into written form.', 'Building on the discoveries and knowledge of civilizations in  _________  and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras,  _________ , and Archimedes.", 'The Hippocratic oath, a medical standard for doctors, is named after  _________ , another ancient Greek,.', 'Hippocrates, another ancient Greek, is the most famous physician in  _________ .']), ('answers', ['ancient greeks', 'medical school', 'plato', 'egypt', 'euclid', 'hippocrates', 'antiquity'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:13.746464
ERROR:root:api_check 0:00:00.415754
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","Ancient Greek philosophy emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000560
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:total before 0:00:02.556769
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001385
ERROR:root:output sents fb 1
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.']), ('questions', ['What civilizations did the Ancient Greeks build on?']), ('answers', ['Egypt and Mesopotamia']), ('options', [['Persia and India', 'Syria and Asia Minor', 'Greece and Rome']])])), ('Fill in the Blanks', OrderedDict([('questions', ["Hippocrates, another ancient Greek, established a  _________ , wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('answers', ['medical school'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.']), ('questions', ['What civilizations did the Ancient Greeks build on?']), ('answers', ['Egypt and Mesopotamia']), ('options', [['Persia and India', 'Syria and Asia Minor', 'Greece and Rome']])])), ('Fill in the Blanks', OrderedDict([('questions', ["Hippocrates, another ancient Greek, established a  _________ , wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('answers', ['medical school'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:09.151875
ERROR:root:api_check 0:00:00.362969
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","Ancient Greek philosophy emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:total before 0:00:02.265457
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.000701
ERROR:root:output sents fb 7
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', ['Some of the first astronomical models were developed by  _________  trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', "Hippocrates, another ancient Greek, established a  _________ , wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.", 'Greek philosophical culture is exemplified in the dialogues of  _________ , who turned the questioning style of Socrates into written form.', 'Building on the discoveries and knowledge of civilizations in  _________  and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras,  _________ , and Archimedes.", 'The Hippocratic oath, a medical standard for doctors, is named after  _________ , another ancient Greek,.', 'Hippocrates, another ancient Greek, is the most famous physician in  _________ .']), ('answers', ['ancient greeks', 'medical school', 'plato', 'egypt', 'euclid', 'hippocrates', 'antiquity'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.588040
ERROR:root:api_check 0:00:00.342482
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","Ancient Greek philosophy emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:total before 0:00:02.438065
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.011132
ERROR:root:output sents fb 2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.']), ('questions', ['What civilizations did the Ancient Greeks build on?']), ('answers', ['Egypt and Mesopotamia']), ('options', [['Persia and India', 'Syria and Asia Minor', 'Greece and Rome']])])), ('Fill in the Blanks', OrderedDict([('questions', ['Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the  _________ —a model that places the Sun at the center of the solar system.', "We owe the  _________ 's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes."]), ('answers', ['heliocentric system', 'ancient greeks'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:10.452673
ERROR:root:api_check 0:00:00.342837
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","Ancient Greek philosophy emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:total before 0:00:04.655640
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.000692
ERROR:root:output sents fb 2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', ['Some of the first astronomical models were developed by  _________  trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Building on the discoveries and knowledge of civilizations in  _________  and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.']), ('answers', ['ancient greeks', 'egypt'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.072765
ERROR:root:api_check 0:00:00.382101
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","Ancient Greek philosophy emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:total before 0:00:03.685333
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.007192
ERROR:root:output sents fb 4
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', ['Some of the first astronomical models were developed by  _________  trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', "Hippocrates, another ancient Greek, established a  _________ , wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.", 'Building on the discoveries and knowledge of civilizations in  _________  and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras,  _________ , and Archimedes."]), ('answers', ['ancient greeks', 'medical school', 'egypt', 'euclid'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.742982
ERROR:root:api_check 0:00:00.342301
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","Ancient Greek philosophy emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:total before 0:00:03.593488
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001350
ERROR:root:output sents fb 1
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', ['Building on the discoveries and knowledge of civilizations in  _________  and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.']), ('answers', ['egypt'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:02.945357
ERROR:root:api_check 0:00:00.362772
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","Ancient Greek philosophy emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:total before 0:00:03.493980
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.002302
ERROR:root:output sents fb 2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', ['Some of the first astronomical models were developed by  _________  trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Building on the discoveries and knowledge of civilizations in  _________  and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.']), ('answers', ['ancient greeks', 'egypt'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.575515
ERROR:root:api_check 0:00:00.362677
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","Ancient Greek philosophy emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:total before 0:00:03.499285
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001717
ERROR:root:output sents fb 7
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', ['Some of the first astronomical models were developed by  _________  trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', "Hippocrates, another ancient Greek, established a  _________ , wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.", 'Greek philosophical culture is exemplified in the dialogues of  _________ , who turned the questioning style of Socrates into written form.', 'Building on the discoveries and knowledge of civilizations in  _________  and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras,  _________ , and Archimedes.", 'The Hippocratic oath, a medical standard for doctors, is named after  _________ , another ancient Greek,.', 'Hippocrates, another ancient Greek, is the most famous physician in  _________ .']), ('answers', ['ancient greeks', 'medical school', 'plato', 'egypt', 'euclid', 'hippocrates', 'antiquity'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:06.882012
ERROR:root:api_check 0:00:00.356341
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","Ancient Greek philosophy emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:total before 0:00:03.585200
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001882
ERROR:root:output sents fb 7
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.']), ('questions', ['What civilizations did the Ancient Greeks build on?']), ('answers', ['Egypt and Mesopotamia']), ('options', [['Syria and Asia Minor', 'Persia and India', 'Greece and Rome']])])), ('Fill in the Blanks', OrderedDict([('questions', ['Some of the first astronomical models were developed by  _________  trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', "Hippocrates, another ancient Greek, established a  _________ , wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.", 'Greek philosophical culture is exemplified in the dialogues of  _________ , who turned the questioning style of Socrates into written form.', 'The Hippocratic oath, a medical standard for doctors, is named after  _________ , another ancient Greek,.', 'Hippocrates, another ancient Greek, is the most famous physician in  _________ .', "We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras,  _________ , and Archimedes.", " _________ , Plato's student, wrote about topics as varied as biology and drama."]), ('answers', ['ancient greeks', 'medical school', 'plato', 'hippocrates', 'antiquity', 'euclid', 'aristotle'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:07.115876
ERROR:root:api_check 0:00:00.369150
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","Ancient Greek philosophy emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:total before 0:00:03.541005
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001183
ERROR:root:output sents fb 2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.']), ('questions', ['What civilizations did the Ancient Greeks build on?']), ('answers', ['Egypt and Mesopotamia']), ('options', [['Syria and Asia Minor', 'Persia and India', 'Greece and Rome']])])), ('Fill in the Blanks', OrderedDict([('questions', ['Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the  _________ —a model that places the Sun at the center of the solar system.', "We owe the  _________ 's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes."]), ('answers', ['heliocentric system', 'ancient greeks'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.730228
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:43.775180
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","Ancient Greek philosophy emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents8
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.", 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.', 'Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.', "Aristotle, Plato's student, wrote about topics as varied as biology and drama."]), ('questions', ['What civilizations did the Ancient Greeks build on?', 'What ancient Greek mathematicians helped us understand geometry?', 'Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'What is the medical standard for doctors called?', 'Who turned the questioning style of Socrates into written form?', "Who was Plato's student?"]), ('answers', ['Egypt and Mesopotamia', 'Pythagoras, Euclid, and Archimedes', 'Ancient Greeks', 'Hippocrates', 'The Hippocratic oath', 'Plato', 'Aristotle']), ('options', [['Greece and Rome', 'Syria and Asia Minor', 'Persia and India'], ['Plato, Euclidean Geometry, and Archimedes', 'Euclidean Geometry and Archimedes', 'neither the Greeks nor the Romans understood geometry'], ['Chinese', 'Greeks', 'Romans'], ['William of Ockham', 'John Calvin', 'Erasmus'], ["The National Medical Association's code of ethics", 'The Declaration of Independence', "The American Medical Association's code of ethics"], ['Virgil', 'Homer', 'Erasmus'], ['Euclidean geometry', 'Plato', 'Empiricus']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:09.101726
ERROR:root:api_check 0:00:00.341867
ERROR:root:payload: "What was the point of having colonies? Like the system of mercantilism, under which the American colonies had sent raw materials to Great Britain and purchased finished goods in return, colonialism was a system designed to benefit the imperial power, usually at the expense of the colony. Colonies not only provided sources of valuable raw materials (diamonds, gold, timber, oil, rubber, and many others) for the imperial power, their populations served as markets for the industrial products made in the home country.\nMarkets were particularly important for the United States, which had emerged as the world's leading industrial power in the wake of the Gilded Age. Capitalism could only thrive and expand as long as people purchased the products of industry, and at the end of the nineteenth century, Americans were beginning to fear that new markets within the United States were drying up now that Manifest Destiny (the belief that God intended the United States to occupy the North American continent from Atlantic to Pacific) had been achieved. In 1893, eminent historian Frederick Jackson Turner declared that the American frontier was now closed, leading many to fear that the pioneering spirit central to the American identity was in jeopardy.\nWhat would Americans do now that relentless expansion was no longer possible? Who would Americans be if they no longer had a wilderness to conquer?"
ERROR:root:orig input: "What was the point of having colonies? Like the system of mercantilism, under which the American colonies had sent raw materials to Great Britain and purchased finished goods in return, colonialism was a system designed to benefit the imperial power, usually at the expense of the colony. Colonies not only provided sources of valuable raw materials (diamonds, gold, timber, oil, rubber, and many others) for the imperial power, their populations served as markets for the industrial products made in the home country.\r\nMarkets were particularly important for the United States, which had emerged as the world's leading industrial power in the wake of the Gilded Age. Capitalism could only thrive and expand as long as people purchased the products of industry, and at the end of the nineteenth century, Americans were beginning to fear that new markets within the United States were drying up now that Manifest Destiny (the belief that God intended the United States to occupy the North American continent from Atlantic to Pacific) had been achieved. In 1893, eminent historian Frederick Jackson Turner declared that the American frontier was now closed, leading many to fear that the pioneering spirit central to the American identity was in jeopardy.\r\nWhat would Americans do now that relentless expansion was no longer possible? Who would Americans be if they no longer had a wilderness to conquer?"
ERROR:root:orig selected_specific len[[["Like the system of mercantilism, under which the American colonies had sent raw materials to Great Britain and purchased finished goods in return, colonialism was a system designed to benefit the imperial power, usually at the expense of the colony.",{},1],["Colonies not only provided sources of valuable raw materials (diamonds, gold, timber, oil, rubber, and many others) for the imperial power, their populations served as markets for the industrial products made in the home country.",{},2],["Capitalism could only thrive and expand as long as people purchased the products of industry, and at the end of the nineteenth century, Americans were beginning to fear that new markets within the United States were drying up now that Manifest Destiny (the belief that God intended the United States to occupy the North American continent from Atlantic to Pacific) had been achieved.",{},4],["In 1893, eminent historian Frederick Jackson Turner declared that the American frontier was now closed, leading many to fear that the pioneering spirit central to the American identity was in jeopardy.",{},5]],["What was the point of having colonies?","Like the system of mercantilism, under which the American colonies had sent raw materials to Great Britain and purchased finished goods in return, colonialism was a system designed to benefit the imperial power, usually at the expense of the colony.","Colonies not only provided sources of valuable raw materials (diamonds, gold, timber, oil, rubber, and many others) for the imperial power, Colonies's populations served as markets for the industrial products made in the home country.","Markets were particularly important for the United States, which had emerged as the world's leading industrial power in the wake of the Gilded Age.","Capitalism could only thrive and expand as long as people purchased the products of industry, and at the end of the nineteenth century, Americans were beginning to fear that new markets within the United States were drying up now that Manifest Destiny (the belief that God intended the United States to occupy the North American continent from Atlantic to Pacific) had been achieved.","In 1893, eminent historian Frederick Jackson Turner declared that the American frontier was now closed, leading many to fear that the pioneering spirit central to the American identity was in jeopardy.","What would Americans do now that relentless expansion was no longer possible?","Who would Americans be if they no longer had a wilderness to conquer?"]]
ERROR:root:orig selected_specific len4
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents4
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Like the system of mercantilism, under which the American colonies had sent raw materials to Great Britain and purchased finished goods in return, colonialism was a system designed to benefit the imperial power, usually at the expense of the colony.', "Colonies not only provided sources of valuable raw materials (diamonds, gold, timber, oil, rubber, and many others) for the imperial power, Colonies's populations served as markets for the industrial products made in the home country.", 'In 1893, eminent historian Frederick Jackson Turner declared that the American frontier was now closed, leading many to fear that the pioneering spirit central to the American identity was in jeopardy.']), ('questions', ['What system was used by the colonies to send raw materials to Great Britain?', 'What population served as markets for industrial products made in their home country?', 'Who declared that the American frontier was closed in 1893?']), ('answers', ['mercantilism', 'Colonies', 'Frederick Jackson Turner']), ('options', [['the Northwest Ordinance', 'the British Constitution', 'the Stamp Act Congress'], ['France', 'the United States', 'England'], ['U. S. Grant', 'Theodore Roosevelt', 'William Jennings Bryan']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.765246
ERROR:root:api_check 0:00:00.377903
ERROR:root:payload: 'In 1857, uprisings and rebellions ended the British East India Company\'s (EIC) control in India, then it became an official British colony. Historians continue to debate the nature of these uprisings.\nIn 1783, Great Britain, stinging from the American Revolution and loss of 13 promising colonies, took a closer look at the Indian subcontinent. The British East India Company (EIC) intensified its efforts to collect taxes and dominate territories in this vast, populous region. Sometimes simply called "the Company" the EIC was indeed a business that did international trade. But it also conquered and ruled over an increasing number of Mughal territories and independent princely states, so its "business" was pretty much imperialism. Under a policy called the Doctrine of Lapse, the EIC took control over more than 25 states in India in the 1800s. This policy meant that if the British deemed the rulers of those states "incompetent," or if they lacked a proper heir, the EIC could just take over the territory and rule it directly themselves. Any resistance to EIC control was met with a military response. That included British troops as well as thousands of locally recruited Indian troops called sepoys. Let\'s look at the expansion of British control on the Indian subcontinent and the differing perspectives of the 1857 uprising by Indians against "the Company."'
ERROR:root:orig input: 'In 1857, uprisings and rebellions ended the British East India Company\'s (EIC) control in India, then it became an official British colony. Historians continue to debate the nature of these uprisings.\r\nIn 1783, Great Britain, stinging from the American Revolution and loss of 13 promising colonies, took a closer look at the Indian subcontinent. The British East India Company (EIC) intensified its efforts to collect taxes and dominate territories in this vast, populous region. Sometimes simply called "the Company" the EIC was indeed a business that did international trade. But it also conquered and ruled over an increasing number of Mughal territories and independent princely states, so its "business" was pretty much imperialism. Under a policy called the Doctrine of Lapse, the EIC took control over more than 25 states in India in the 1800s. This policy meant that if the British deemed the rulers of those states "incompetent," or if they lacked a proper heir, the EIC could just take over the territory and rule it directly themselves. Any resistance to EIC control was met with a military response. That included British troops as well as thousands of locally recruited Indian troops called sepoys. Let\'s look at the expansion of British control on the Indian subcontinent and the differing perspectives of the 1857 uprising by Indians against "the Company."'
ERROR:root:orig selected_specific len[[["In 1857, uprisings and rebellions ended the British East India Company's (EIC) control in India, then it became an official British colony.",{},0],["In 1783, Great Britain, stinging from the American Revolution and loss of 13 promising colonies, took a closer look at the Indian subcontinent.",{},2],["The British East India Company (EIC) intensified its efforts to collect taxes and dominate territories in this vast, populous region.",{},3],["Under a policy called the Doctrine of Lapse, the EIC took control over more than 25 states in India in the 1800s.",{},6],["That included British troops as well as thousands of locally recruited Indian troops called sepoys.",{},9],["Let's look at the expansion of British control on the Indian subcontinent and the differing perspectives of the 1857 uprising by Indians against \"the Company.\"",{},10]],["In 1857, uprisings and rebellions ended the British East India Company's (EIC) control in India, then the British East India Company's became an official British colony.","Historians continue to debate the nature of uprisings and rebellions.","In 1783, Great Britain, stinging from the American Revolution and loss of 13 promising colonies, took a closer look at the Indian subcontinent.","The British East India Company (EIC) intensified the British East India Company's's efforts to collect taxes and dominate territories in India.","Sometimes simply called \"the Company\" the EIC was indeed a business that did international trade.","But the British East India Company's also conquered and ruled over an increasing number of Mughal territories and independent princely states, so the British East India Company's's \"business\" was pretty much imperialism.","Under a policy called the Doctrine of Lapse, the EIC took control over more than 25 states in India in the 1800s.","a policy called the Doctrine of Lapse meant that if the British deemed the rulers of more than 25 states in India \"incompetent,\" or if the rulers of those states lacked a proper heir, the EIC could just take over the territory and rule India directly the British.","Any resistance to EIC control was met with a military response.","a military response included British troops as well as thousands of locally recruited Indian troops called sepoys.","Let's look at the expansion of British control on the Indian subcontinent and the differing perspectives of the 1857 uprising by Indians against \"the Company.\""]]
ERROR:root:orig selected_specific len6
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents6
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ["In 1857, uprisings and rebellions ended the British East India Company's (EIC) control in India, then the British East India Company's became an official British colony.", 'In 1783, Great Britain, stinging from the American Revolution and loss of 13 promising colonies, took a closer look at the Indian subcontinent.', "The British East India Company (EIC) intensified the British East India Company's's efforts to collect taxes and dominate territories in India.", 'Under a policy called the Doctrine of Lapse, the EIC took control over more than 25 states in India in the 1800s.', 'a military response included British troops as well as thousands of locally recruited Indian troops called sepoys.', 'Let\'s look at the expansion of British control on the Indian subcontinent and the differing perspectives of the 1857 uprising by Indians against "the Company."']), ('questions', ["When did the British East India Company's control in India end?", 'When did Britain begin to look at the Indian subcontinent?', 'What is EIC?', 'What policy took control over 25 states in India in the 1800s?', 'What were the Indian troops called?', 'What was the name of the uprising?']), ('answers', ['1857', '1783', 'British East India Company', 'the Doctrine of Lapse', 'sepoys', '1857 uprising by Indians against "the Company']), ('options', [['today', '1876', '1947'], ['1885', '1815', '1848'], ['Indian parliament', 'East India Company', 'Indian National Congress'], ['the East India Company', 'the policy of non-alignment', 'the Salt March'], ['ghazis', 'pashas', 'sahibs'], ['1798 uprising by French peasants against their own government', 'all of these choices are correct', '1848 uprising by Irish Catholics against British rule']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:19.734905
ERROR:root:api_check 0:00:00.388953
ERROR:root:payload: 'French Indochina was the colonial name for French-occupied areas in Southeast Asia. In the late nineteenth century, the French invaded the places now called Vietnam, Laos, and Cambodia. European missionaries and merchants had already established some presence there.\nBut colonial maps can be misleading; conquering a territory is not the same as truly controlling it. Although the local royal families technically accepted colonial rule, the French were met with constant mutinies and peasant uprisings, which are easily recognizable as resistance. Others—and that was most people—just tried to survive and thrive within a difficult system.\nFor instance, many Laotian villagers pretended to collaborate with the French while resisting at the same time. The French believed they were using local leaders to control villages, a key strategy in colonial empire-building. But the villages often put fake notables forward, who had no real power. Meanwhile, the real leaders secretly ran villages according Laotian interests, rather than what the empire wanted. The French had no clue.'
ERROR:root:orig input: 'French Indochina was the colonial name for French-occupied areas in Southeast Asia. In the late nineteenth century, the French invaded the places now called Vietnam, Laos, and Cambodia. European missionaries and merchants had already established some presence there.\r\nBut colonial maps can be misleading; conquering a territory is not the same as truly controlling it. Although the local royal families technically accepted colonial rule, the French were met with constant mutinies and peasant uprisings, which are easily recognizable as resistance. Others—and that was most people—just tried to survive and thrive within a difficult system.\r\nFor instance, many Laotian villagers pretended to collaborate with the French while resisting at the same time. The French believed they were using local leaders to control villages, a key strategy in colonial empire-building. But the villages often put fake notables forward, who had no real power. Meanwhile, the real leaders secretly ran villages according Laotian interests, rather than what the empire wanted. The French had no clue.'
ERROR:root:orig selected_specific len[[["French Indochina was the colonial name for French-occupied areas in Southeast Asia.",{},0],["In the late nineteenth century, the French invaded the places now called Vietnam, Laos, and Cambodia.",{},1]],["French Indochina was the colonial name for French-occupied areas in Southeast Asia.","In the late nineteenth century, the French invaded the places now called Vietnam, Laos, and Cambodia.","European missionaries and merchants had already established some presence there.","But colonial maps can be misleading; conquering a territory is not the same as truly controlling it.","Although the local royal families technically accepted colonial rule, the French were met with constant mutinies and peasant uprisings, which are easily recognizable as resistance.","Others—and that was most people—just tried to survive and thrive within a difficult system.","For instance, many Laotian villagers pretended to collaborate with the French while resisting at the same time.","The French believed they were using local leaders to control villages, a key strategy in colonial empire-building.","But the villages often put fake notables forward, who had no real power.","Meanwhile, the real leaders secretly ran villages according Laotian interests, rather than what the empire wanted.","The French had no clue."]]
ERROR:root:orig selected_specific len2
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['French Indochina was the colonial name for French-occupied areas in Southeast Asia.']), ('questions', ['What was the colonial name for French-occupied areas in Southeast Asia?']), ('answers', ['French Indochina']), ('options', [['British India', 'German East Indies', 'Dutch Indonesia']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.310356
ERROR:root:api_check 0:00:00.358834
ERROR:root:payload: 'Before the Mauryan Empire, the Indian subcontinent was fragmented into hundreds of kingdoms that were ruled by powerful regional chiefs who engaged in warfare using their small armies.\nIn 327 BCE, Alexander of Macedon and his troops entered India and overran the existing kingdoms in the Punjab region. He left after only two years, but his destruction of the regional powers opened the opportunity for other groups to seize control. The first group, the kingdom of Magadha, used their military to gain control of trade routes through the Ganges valley and the sea routes to the Bay of Bengal.\nSoon after, however, Chandragupta Maurya, the founder of the Maurya Empire, successfully seized control of Magadha. He started on the outskirts and eventually made his way to the heart of the kingdom. Eventually, he gained control of northwestern India and Bactria—what is today Afghanistan and was at that time controlled by the Greeks. Chandragupta Maurya successfully unified the Indian subcontinent under an empire.\nChandragupta ruled from 324 to 297 BCE before voluntarily giving the throne up to his son, Bindusara, who ruled from 297 BCE until his death in 272 BCE. This led to a war in which Bindusara’s son, Ashoka, defeated his brother and rose to the throne in 268 BCE, eventually becoming the most successful and powerful ruler of the Maurya Dynasty.'
ERROR:root:orig input: 'Before the Mauryan Empire, the Indian subcontinent was fragmented into hundreds of kingdoms that were ruled by powerful regional chiefs who engaged in warfare using their small armies.\r\nIn 327 BCE, Alexander of Macedon and his troops entered India and overran the existing kingdoms in the Punjab region. He left after only two years, but his destruction of the regional powers opened the opportunity for other groups to seize control. The first group, the kingdom of Magadha, used their military to gain control of trade routes through the Ganges valley and the sea routes to the Bay of Bengal.\r\nSoon after, however, Chandragupta Maurya, the founder of the Maurya Empire, successfully seized control of Magadha. He started on the outskirts and eventually made his way to the heart of the kingdom. Eventually, he gained control of northwestern India and Bactria—what is today Afghanistan and was at that time controlled by the Greeks. Chandragupta Maurya successfully unified the Indian subcontinent under an empire.\r\nChandragupta ruled from 324 to 297 BCE before voluntarily giving the throne up to his son, Bindusara, who ruled from 297 BCE until his death in 272 BCE. This led to a war in which Bindusara’s son, Ashoka, defeated his brother and rose to the throne in 268 BCE, eventually becoming the most successful and powerful ruler of the Maurya Dynasty.'
ERROR:root:orig selected_specific len[[["Before the Mauryan Empire, the Indian subcontinent was fragmented into hundreds of kingdoms that were ruled by powerful regional chiefs who engaged in warfare using their small armies.",{},0],["In 327 BCE, Alexander of Macedon and his troops entered India and overran the existing kingdoms in the Punjab region.",{},1],["The first group, the kingdom of Magadha, used their military to gain control of trade routes through the Ganges valley and the sea routes to the Bay of Bengal.",{},3],["Soon after, however, Chandragupta Maurya, the founder of the Maurya Empire, successfully seized control of Magadha.",{},4],["Eventually, he gained control of northwestern India and Bactria—what is today Afghanistan and was at that time controlled by the Greeks.",{},6],["Chandragupta Maurya successfully unified the Indian subcontinent under an empire.",{},7],["Chandragupta ruled from 324 to 297 BCE before voluntarily giving the throne up to his son, Bindusara, who ruled from 297 BCE until his death in 272 BCE.",{},8],["This led to a war in which Bindusara’s son, Ashoka, defeated his brother and rose to the throne in 268 BCE, eventually becoming the most successful and powerful ruler of the Maurya Dynasty.",{},9]],["Before the Mauryan Empire, the Indian subcontinent was fragmented into hundreds of kingdoms that were ruled by powerful regional chiefs who engaged in warfare using powerful regional chiefs who engaged in warfare using their small armies's small armies.","In 327 BCE, Alexander of Macedon and Alexander of Macedon's troops entered India and overran the existing kingdoms in the Punjab region.","Alexander of Macedon left after only two years, but Alexander of Macedon's destruction of the regional powers opened the opportunity for other groups to seize control.","The first group, the kingdom of Magadha, used The first group, the kingdom of Magadha,'s military to gain control of trade routes through the Ganges valley and the sea routes to the Bay of Bengal.","Soon after, however, Chandragupta Maurya, the founder of the Maurya Empire, successfully seized control of Magadha.","the Mauryan Empire started on the outskirts and eventually made the Mauryan Empire's way to the heart of the kingdom.","Eventually, the Mauryan Empire gained control of northwestern India and Bactria—what is today Afghanistan and was at that time controlled by the Greeks.","Chandragupta Maurya successfully unified the Indian subcontinent under an empire.","Chandragupta ruled from 324 to 297 BCE before voluntarily giving the throne up to the Mauryan Empire's son, Bindusara, who ruled from 297 BCE until his son, Bindusara, who ruled from 297 BCE until his death in 272 BCE's death in 272 BCE.","This led to a war in which Bindusara’s son, Ashoka, defeated his son, Bindusara, who ruled from 297 BCE until his death in 272 BCE's brother and rose to the throne in 268 BCE, eventually becoming the most successful and powerful ruler of the Maurya Dynasty."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents8
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ["Before the Mauryan Empire, the Indian subcontinent was fragmented into hundreds of kingdoms that were ruled by powerful regional chiefs who engaged in warfare using powerful regional chiefs who engaged in warfare using their small armies's small armies.", "In 327 BCE, Alexander of Macedon and Alexander of Macedon's troops entered India and overran the existing kingdoms in the Punjab region.", "The first group, the kingdom of Magadha, used The first group, the kingdom of Magadha,'s military to gain control of trade routes through the Ganges valley and the sea routes to the Bay of Bengal.", 'Soon after, however, Chandragupta Maurya, the founder of the Maurya Empire, successfully seized control of Magadha.', 'Eventually, the Mauryan Empire gained control of northwestern India and Bactria—what is today Afghanistan and was at that time controlled by the Greeks.', 'Chandragupta Maurya successfully unified the Indian subcontinent under an empire.']), ('questions', ['What was the Indian subcontinent fragmented into before the Mauryan Empire?', 'When did Alexander of Macedon enter India?', 'What was the name of the first group?', 'Who founded the Maurya Empire?', 'Who controlled the Mauryan Empire?', 'Who unified the Indian subcontinent?']), ('answers', ['hundreds of kingdoms that were ruled by powerful regional chiefs', '327 BCE', 'the kingdom of Magadha', 'Chandragupta Maurya', 'the Greeks', 'Chandragupta Maurya']), ('options', [['a single empire that controlled the entire territory', 'a single group of people that lived in a single city', 'several republics that were independent of the emperor'], ['10 BCE', '50 BCE', '100 BCE'], ['the Gupta Empire', 'the people of India', 'the city-state of Ayodhya'], ['Chandragupta II', 'Vishnu II', 'Vishnu Maurya'], ['the Greeks and Romans', 'the Romans', 'the Persians'], ['Gupta Empire', 'Deccan Plateau', 'Alexander the Great']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:08.806071
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:24.036891
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","Ancient Greek philosophy emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents8
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.", 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.', 'Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.', "Aristotle, Plato's student, wrote about topics as varied as biology and drama."]), ('questions', ['What civilizations did the Ancient Greeks build on?', 'What ancient Greek mathematicians helped us understand geometry?', 'Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'What is the medical standard for doctors called?', 'Who turned the questioning style of Socrates into written form?', "Who was Plato's student?"]), ('answers', ['Egypt and Mesopotamia', 'Pythagoras, Euclid, and Archimedes', 'Ancient Greeks', 'Hippocrates', 'The Hippocratic oath', 'Plato', 'Aristotle']), ('options', [['Syria and Asia Minor', 'Persia and India', 'Greece and Rome'], ['Plato, Euclidean Geometry, and Archimedes', 'the Socratic Method and the teachings of Confucius', 'Euclidean Geometry and Archimedes'], ['Chinese', 'Romans', 'Greeks'], ['Soranus', 'Celsus', 'Frontinus'], ["The American Medical Association's code of ethics", 'The Declaration of Independence', 'The Constitution'], ['Confucius', 'Jesus', 'Buddha'], ['Alexander the Great', 'Pico della Mirandola', 'Plato']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:15.119816
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.314787
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","Ancient Greek philosophy emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents8
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.", 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.', 'Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.', "Aristotle, Plato's student, wrote about topics as varied as biology and drama."]), ('questions', ['What civilizations did the Ancient Greeks build on?', 'What ancient Greek mathematicians helped us understand geometry?', 'Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'What is the medical standard for doctors called?', 'Who turned the questioning style of Socrates into written form?', "Who was Plato's student?"]), ('answers', ['Egypt and Mesopotamia', 'Pythagoras, Euclid, and Archimedes', 'Ancient Greeks', 'Hippocrates', 'The Hippocratic oath', 'Plato', 'Aristotle']), ('options', [['Syria and Asia Minor', 'Persia and India', 'Greece and Rome'], ['Euclidean Geometry and Archimedes', 'Plato, Euclidean Geometry, and Archimedes', 'Plato and Archimedes'], ['Chinese', 'Romans', 'Greeks'], ['Sallinger', 'Galen', 'Christian'], ['The Declaration of Independence', "The American Medical Association's code of ethics", 'The Constitution'], ['Protagoras', "Plato's Republic", 'Phaedrus'], ['Desiderius Erasmus', 'Plato', 'Erasmus']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:07.551090
ERROR:root:api_check 0:00:00.349520
ERROR:root:payload: 'When the United States started passing comprehensive environmental laws in the late 1960s and early 1970s, a typical law specified how much pollution could be emitted out of a smokestack or a drainpipe. These laws also imposed penalties if pollution limits were exceeded. Other laws required the installation of certain equipment—for example, on automobile tailpipes or on smokestacks—to reduce pollution.\nBoth laws that specify allowable quantities of pollution and laws that detail which pollution-control technologies must be used fall under the category of command-and-control regulation. In effect, command-and-control regulation requires that firms increase their costs by installing anti-pollution equipment; firms are thus required to take the social costs of pollution into account.\nCommand-and-control regulation has been highly successful in protecting and cleaning up the US environment. In 1970, the Environmental Protection Agency was created to oversee all environmental laws. In the same year, the Clean Air Act was enacted to address air pollution. Just two years later, in 1972, Congress passed and the president signed the far-reaching Clean Water Act. These command-and-control environmental laws, and their amendments and updates, have been largely responsible for cleaner air and water in the United States in recent decades. However, economists have pointed out three difficulties with command-and-control environmental regulation.'
ERROR:root:orig input: 'When the United States started passing comprehensive environmental laws in the late 1960s and early 1970s, a typical law specified how much pollution could be emitted out of a smokestack or a drainpipe. These laws also imposed penalties if pollution limits were exceeded. Other laws required the installation of certain equipment—for example, on automobile tailpipes or on smokestacks—to reduce pollution.\r\nBoth laws that specify allowable quantities of pollution and laws that detail which pollution-control technologies must be used fall under the category of command-and-control regulation. In effect, command-and-control regulation requires that firms increase their costs by installing anti-pollution equipment; firms are thus required to take the social costs of pollution into account.\r\nCommand-and-control regulation has been highly successful in protecting and cleaning up the US environment. In 1970, the Environmental Protection Agency was created to oversee all environmental laws. In the same year, the Clean Air Act was enacted to address air pollution. Just two years later, in 1972, Congress passed and the president signed the far-reaching Clean Water Act. These command-and-control environmental laws, and their amendments and updates, have been largely responsible for cleaner air and water in the United States in recent decades. However, economists have pointed out three difficulties with command-and-control environmental regulation.'
ERROR:root:orig selected_specific len[[["When the United States started passing comprehensive environmental laws in the late 1960s and early 1970s, a typical law specified how much pollution could be emitted out of a smokestack or a drainpipe.",{},0],["In 1970, the Environmental Protection Agency was created to oversee all environmental laws.",{},6],["In the same year, the Clean Air Act was enacted to address air pollution.",{},7],["Just two years later, in 1972, Congress passed and the president signed the far-reaching Clean Water Act.",{},8]],["When the United States started passing comprehensive environmental laws in the late 1960s and early 1970s, a typical law specified how much pollution could be emitted out of a smokestack or a drainpipe.","comprehensive environmental laws also imposed penalties if pollution limits were exceeded.","Other laws required the installation of certain equipment—for example, on automobile tailpipes or on smokestacks—to reduce pollution.","Both laws that specify allowable quantities of pollution and laws that detail which pollution-control technologies must be used fall under the category of command-and-control regulation.","In effect, command-and-control regulation requires that firms increase firms's costs by installing anti-pollution equipment; firms are thus required to take the social costs of pollution into account.","Command-and-control regulation has been highly successful in protecting and cleaning up the US environment.","In 1970, the Environmental Protection Agency was created to oversee all environmental laws.","In the same year, the Clean Air Act was enacted to address air pollution.","Just two years later, in 1972, Congress passed and the president signed the far-reaching Clean Water Act.","These command-and-control environmental laws, and their amendments and updates, have been largely responsible for cleaner air and water in the United States in recent decades.","However, economists have pointed out three difficulties with command-and-control environmental regulation."]]
ERROR:root:orig selected_specific len4
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents4
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['In 1970, the Environmental Protection Agency was created to oversee all environmental laws.', 'In the same year, the Clean Air Act was enacted to address air pollution.']), ('questions', ['What agency was created to oversee environmental laws?', 'What act was passed in the same year?']), ('answers', ['1970, the Environmental Protection Agency', 'Clean Air Act']), ('options', [['1980, the Department of Justice', '1974, the Department of Transportation', '1972, the Department of the Interior'], ['Environmental Protection Act', 'None of the above is correct', 'Americans with Disabilities Act of 1991']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.375149
ERROR:root:api_check 0:00:00.334491
ERROR:root:payload: 'Market-oriented environmental policies create incentives to allow firms some flexibility in reducing pollution. The three main categories of market-oriented approaches to pollution control are pollution charges, marketable permits, and better-defined property rights.\nA pollution charge is a tax imposed on the quantity of pollution that a firm emits. A pollution charge gives a profit-maximizing firm an incentive to figure out ways to reduce its emissions—as long as the marginal cost of reducing the emissions is less than the tax.\nA marketable permit program is a program in which a city or state government issues permits allowing only a certain quantity of pollution. These permits to pollute can be sold or given to firms free.\nA clarified and strengthened idea of property rights can also strike a balance between economic activity and pollution. For instance, a policy that provides private landowners with an incentive to protect endangered species on their land can be an effective environmental protection tool.'
ERROR:root:orig input: 'Market-oriented environmental policies create incentives to allow firms some flexibility in reducing pollution. The three main categories of market-oriented approaches to pollution control are pollution charges, marketable permits, and better-defined property rights.\r\nA pollution charge is a tax imposed on the quantity of pollution that a firm emits. A pollution charge gives a profit-maximizing firm an incentive to figure out ways to reduce its emissions—as long as the marginal cost of reducing the emissions is less than the tax.\r\nA marketable permit program is a program in which a city or state government issues permits allowing only a certain quantity of pollution. These permits to pollute can be sold or given to firms free.\r\nA clarified and strengthened idea of property rights can also strike a balance between economic activity and pollution. For instance, a policy that provides private landowners with an incentive to protect endangered species on their land can be an effective environmental protection tool.'
ERROR:root:orig selected_specific len[[["A pollution charge is a tax imposed on the quantity of pollution that a firm emits.",{},2],["A pollution charge gives a profit-maximizing firm an incentive to figure out ways to reduce its emissions—as long as the marginal cost of reducing the emissions is less than the tax.",{},3],["A marketable permit program is a program in which a city or state government issues permits allowing only a certain quantity of pollution.",{},4]],["Market-oriented environmental policies create incentives to allow firms some flexibility in reducing pollution.","The three main categories of market-oriented approaches to pollution control are pollution charges, marketable permits, and better-defined property rights.","A pollution charge is a tax imposed on the quantity of pollution that a firm emits.","A pollution charge gives a profit-maximizing firm an incentive to figure out ways to reduce a profit-maximizing firm's emissions—as long as the marginal cost of reducing the emissions is less than the tax.","A marketable permit program is a program in which a city or state government issues permits allowing only a certain quantity of pollution.","These permits to pollute can be sold or given to firms free.","A clarified and strengthened idea of property rights can also strike a balance between economic activity and pollution.","For instance, a policy that provides private landowners with an incentive to protect endangered species on their land can be an effective environmental protection tool."]]
ERROR:root:orig selected_specific len3
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents3
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['A pollution charge is a tax imposed on the quantity of pollution that a firm emits.', "A pollution charge gives a profit-maximizing firm an incentive to figure out ways to reduce a profit-maximizing firm's emissions—as long as the marginal cost of reducing the emissions is less than the tax.", 'A marketable permit program is a program in which a city or state government issues permits allowing only a certain quantity of pollution.']), ('questions', ['What is a tax imposed on the amount of pollution that a firm emits?', 'What is the tax on a profit-maximizing firm?', 'What is it called when a city or state government issues permits allowing only a certain amount of pollution?']), ('answers', ['A pollution charge', 'A pollution charge gives a profit-maximizing firm an incentive to figure out ways to reduce its emissions—as long as the marginal cost of reducing the emissions is less than the tax', 'A marketable permit program']), ('options', [['A', 'B', 'C'], ['A pollution charge gives a profit-maximizing firm an incentive to increase its production of some goods in an attempt to reduce its emissions'], ['a pollution tax', 'an environmental permit', 'a pollution permit']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.459689
ERROR:root:api_check 0:00:00.335157
ERROR:root:payload: 'Imagine the firm now faces a pollution tax of $1,000 for every 10 pounds of particulates emitted. The firm has the choice of either polluting and paying the tax, or reducing the amount of particulates they emit and paying the cost of abatement as shown in the graph above.\nHow much will the firm pollute and how much will the firm abate? The first 10 pounds would cost the firm $300 to abate. This is substantially less than the $1,000 tax, so they will choose to abate. The second 10 pounds would cost $500 to abate, which is still less than the tax, so they will choose to abate. The third 10 pounds would cost $900 to abate, which is slightly less than the $1,000 tax. The fourth 10 pounds would cost $1,500, which is much more costly than paying the tax. As a result, the firm will decide to reduce pollutants by 30 pounds because the marginal cost of reducing pollution by this amount is less than the pollution tax. With a tax of $1,000, the firm has no incentive to reduce pollution more than 30 pounds.\nA firm that has to pay a pollution tax will have an incentive to figure out the least expensive technologies for reducing pollution. Firms that can reduce pollution cheaply and easily will do so to minimize their pollution taxes, whereas firms that will incur high costs for reducing pollution will end up paying the pollution tax instead. If the pollution tax applies to every source of pollution, then no special favoritism or loopholes are created for politically well-connected producers.'
ERROR:root:orig input: 'Imagine the firm now faces a pollution tax of $1,000 for every 10 pounds of particulates emitted. The firm has the choice of either polluting and paying the tax, or reducing the amount of particulates they emit and paying the cost of abatement as shown in the graph above.\r\nHow much will the firm pollute and how much will the firm abate? The first 10 pounds would cost the firm $300 to abate. This is substantially less than the $1,000 tax, so they will choose to abate. The second 10 pounds would cost $500 to abate, which is still less than the tax, so they will choose to abate. The third 10 pounds would cost $900 to abate, which is slightly less than the $1,000 tax. The fourth 10 pounds would cost $1,500, which is much more costly than paying the tax. As a result, the firm will decide to reduce pollutants by 30 pounds because the marginal cost of reducing pollution by this amount is less than the pollution tax. With a tax of $1,000, the firm has no incentive to reduce pollution more than 30 pounds.\r\nA firm that has to pay a pollution tax will have an incentive to figure out the least expensive technologies for reducing pollution. Firms that can reduce pollution cheaply and easily will do so to minimize their pollution taxes, whereas firms that will incur high costs for reducing pollution will end up paying the pollution tax instead. If the pollution tax applies to every source of pollution, then no special favoritism or loopholes are created for politically well-connected producers.'
ERROR:root:orig selected_specific len[[["Imagine the firm now faces a pollution tax of $1,000 for every 10 pounds of particulates emitted.",{},0],["The firm has the choice of either polluting and paying the tax, or reducing the amount of particulates they emit and paying the cost of abatement as shown in the graph above.",{},1],["The first 10 pounds would cost the firm $300 to abate.",{},3],["This is substantially less than the $1,000 tax, so they will choose to abate.",{},4],["The second 10 pounds would cost $500 to abate, which is still less than the tax, so they will choose to abate.",{},5],["The third 10 pounds would cost $900 to abate, which is slightly less than the $1,000 tax.",{},6],["The fourth 10 pounds would cost $1,500, which is much more costly than paying the tax.",{},7],["As a result, the firm will decide to reduce pollutants by 30 pounds because the marginal cost of reducing pollution by this amount is less than the pollution tax.",{},8],["With a tax of $1,000, the firm has no incentive to reduce pollution more than 30 pounds.",{},9],["Firms that can reduce pollution cheaply and easily will do so to minimize their pollution taxes, whereas firms that will incur high costs for reducing pollution will end up paying the pollution tax instead.",{},11]],["Imagine the firm now faces a pollution tax of $1,000 for every 10 pounds of particulates emitted.","The firm has the choice of either polluting and paying the tax, or reducing the amount of particulates the firm emit and paying the cost of abatement as shown in the graph above.","How much will the firm pollute and how much will the firm abate?","The first 10 pounds would cost the firm $300 to abate.","This is substantially less than the $1,000 tax, so the firm will choose to abate.","The second 10 pounds would cost $500 to abate, which is still less than the tax, so the firm will choose to abate.","The third 10 pounds would cost $900 to abate, which is slightly less than the $1,000 tax.","The fourth 10 pounds would cost $1,500, which is much more costly than paying the tax.","As a result, the firm will decide to reduce pollutants by 30 pounds because the marginal cost of reducing pollution by 30 pounds is less than the pollution tax.","With a tax of $1,000, the firm has no incentive to reduce pollution more than 30 pounds.","A firm that has to pay a pollution tax will have an incentive to figure out the least expensive technologies for reducing pollution.","Firms that can reduce pollution cheaply and easily will do so to minimize Firms that can reduce pollution cheaply and easily's pollution taxes, whereas firms that will incur high costs for reducing pollution will end up paying the pollution tax instead.","If the pollution tax applies to every source of pollution, then no special favoritism or loopholes are created for politically well-connected producers."]]
ERROR:root:orig selected_specific len10
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents10
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Imagine the firm now faces a pollution tax of $1,000 for every 10 pounds of particulates emitted.', 'The firm has the choice of either polluting and paying the tax, or reducing the amount of particulates the firm emit and paying the cost of abatement as shown in the graph above.', 'The first 10 pounds would cost the firm $300 to abate.', 'This is substantially less than the $1,000 tax, so the firm will choose to abate.', 'The second 10 pounds would cost $500 to abate, which is still less than the tax, so the firm will choose to abate.', 'The third 10 pounds would cost $900 to abate, which is slightly less than the $1,000 tax.', 'The fourth 10 pounds would cost $1,500, which is much more costly than paying the tax.', 'As a result, the firm will decide to reduce pollutants by 30 pounds because the marginal cost of reducing pollution by 30 pounds is less than the pollution tax.', 'With a tax of $1,000, the firm has no incentive to reduce pollution more than 30 pounds.']), ('questions', ['What is the pollution tax for every 10 pounds of particulates emitted?', 'What are the two options for a company?', 'How much did it cost to get rid of the first 10 pounds?', 'What is the tax rate for a firm that is not paying this amount?', 'How much would it cost to abate the second 10 pounds?', 'How much would it cost to abate the third 10 pounds?', 'What is the cost of the fourth 10 pounds?', 'How much will the firm reduce pollutants?', 'What is the tax on a company that reduces pollution?']), ('answers', ['$1,000', 'polluting and paying the tax, or reducing the amount of particulates they emit and paying the cost of abatement', '$300', '$1,000', '$500', '$900', '$1,500', '30 pounds because the marginal cost of reducing pollution by this amount is less than the pollution tax', '$1,000']), ('options', [['$30,000', '$20,000', '$10,000'], ['polluting and paying the tax, or increasing the amount of pollution they emit', 'reducing the amount of pollution they emit and paying the cost of abatement'], ['$1,000', '$2,000', '$500'], ['$30,000', '$20,000', '$10,000'], ['$2,000', '$1,000'], ['$500'], ['$2,000', '$500'], ['100 pounds because the marginal cost of reducing pollution by this amount is greater than the pollution tax', '50 pounds because the marginal cost of reducing pollution by this amount is greater than the pollution tax', '100 pounds because the marginal cost of reducing pollution by this amount is less than the pollution tax'], ['$2,000', '$1,000,000', '$3,000']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:09.468026
ERROR:root:api_check 0:00:00.338826
ERROR:root:payload: 'Although estimates of environmental benefits are not precise, they can still be revealing. For example, a study by the US Environmental Protection Agency, or EPA, looked at the costs and benefits of the Clean Air Act from 1970 to 1990. It found that total costs over that time period were roughly $500 billion—a huge amount. However, it also found that a middle-range estimate of the health and other benefits from cleaner air was $22 trillion—about 44 times higher than the costs.\nA more recent study by the EPA estimated that the environmental benefits to Americans from the Clean Air Act will exceed their costs by a margin of four to one. The EPA estimated that “in 2010 the benefits of Clean Air Act programs will total about $110 billion. This estimate represents the value of avoiding increases in illness and premature death which would have prevailed.”\nSaying that overall benefits of environmental regulation have exceeded costs in the past, however, is very different from saying that every environmental regulation makes sense. For example, studies suggest that when breaking down emission reductions by type of contaminants, the benefits of air pollution control outweigh the costs primarily for particulates and lead. When looking at other air pollutants, the costs of reducing them may be comparable to or greater than the benefits.'
ERROR:root:orig input: 'Although estimates of environmental benefits are not precise, they can still be revealing. For example, a study by the US Environmental Protection Agency, or EPA, looked at the costs and benefits of the Clean Air Act from 1970 to 1990. It found that total costs over that time period were roughly $500 billion—a huge amount. However, it also found that a middle-range estimate of the health and other benefits from cleaner air was $22 trillion—about 44 times higher than the costs.\r\nA more recent study by the EPA estimated that the environmental benefits to Americans from the Clean Air Act will exceed their costs by a margin of four to one. The EPA estimated that “in 2010 the benefits of Clean Air Act programs will total about $110 billion. This estimate represents the value of avoiding increases in illness and premature death which would have prevailed.”\r\nSaying that overall benefits of environmental regulation have exceeded costs in the past, however, is very different from saying that every environmental regulation makes sense. For example, studies suggest that when breaking down emission reductions by type of contaminants, the benefits of air pollution control outweigh the costs primarily for particulates and lead. When looking at other air pollutants, the costs of reducing them may be comparable to or greater than the benefits.'
ERROR:root:orig selected_specific len[[["For example, a study by the US Environmental Protection Agency, or EPA, looked at the costs and benefits of the Clean Air Act from 1970 to 1990.",{},1],["A more recent study by the EPA estimated that the environmental benefits to Americans from the Clean Air Act will exceed their costs by a margin of four to one.",{},4],["The EPA estimated that “in 2010 the benefits of Clean Air Act programs will total about $110 billion.",{},5],["For example, studies suggest that when breaking down emission reductions by type of contaminants, the benefits of air pollution control outweigh the costs primarily for particulates and lead.",{},7]],["Although estimates of environmental benefits are not precise, estimates of environmental benefits can still be revealing.","For example, a study by the US Environmental Protection Agency, or EPA, looked at the costs and benefits of the Clean Air Act from 1970 to 1990. a study by the US Environmental Protection Agency, or EPA, found that total costs over that time period were roughly $500 billion—a huge amount.","However, a study by the US Environmental Protection Agency, or EPA, also found that a middle-range estimate of the health and other benefits from cleaner air was $22 trillion—about 44 times higher than the costs.","A more recent study by the EPA estimated that the environmental benefits to Americans from the Clean Air Act will exceed Americans's costs by a margin of four to one.","The EPA estimated that “in 2010 the benefits of Clean Air Act programs will total about $110 billion.","This estimate represents the value of avoiding increases in illness and premature death which would have prevailed.” Saying that overall benefits of environmental regulation have exceeded costs in the past, however, is very different from saying that every environmental regulation makes sense.","For example, studies suggest that when breaking down emission reductions by type of contaminants, the benefits of air pollution control outweigh the costs primarily for particulates and lead.","When looking at other air pollutants, the costs of reducing them may be comparable to or greater than the benefits."]]
ERROR:root:orig selected_specific len4
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents4
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['For example, a study by the US Environmental Protection Agency, or EPA, looked at the costs and benefits of the Clean Air Act from 1970 to 1990. a study by the US Environmental Protection Agency, or EPA, found that total costs over that time period were roughly $500 billion—a huge amount.', 'The EPA estimated that “in 2010 the benefits of Clean Air Act programs will total about $110 billion.', 'This estimate represents the value of avoiding increases in illness and premature death which would have prevailed.” Saying that overall benefits of environmental regulation have exceeded costs in the past, however, is very different from saying that every environmental regulation makes sense.', 'When looking at other air pollutants, the costs of reducing them may be comparable to or greater than the benefits.']), ('questions', ['What years did the Clean Air Act run from?', 'How many to one does the EPA estimate the benefits of the Clean Air Act programs will be?', 'What is the estimated value of avoiding increases in illness and premature death?', 'What are two pollutants that are cost-effective to reduce?']), ('answers', ['1970 to 1990', 'four to one', '$110 billion', 'particulates and lead']), ('options', [['1970 to 1980', '1980 to 1990', '1990 to 2000'], ['two to one', 'one to one'], ['$100 billion', '$90 billion'], ['carbon monoxide and smog', 'acid rain and oil', 'lead and smog']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:06.409761
ERROR:root:api_check 0:00:00.329162
ERROR:root:payload: 'Many countries around the world have become more aware of the benefits of environmental protection. Unfortunately, even if most nations took steps individually to address their environmental issues, it would still not solve certain environmental problems which spill over national borders.\nTake global warming, for example—no one nation by itself can reduce carbon dioxide and other gas emissions enough to solve the problem. The problem is so big, nations must cooperate to effectively address it.\nAnother example is the challenge of preserving biodiversity—the spectrum of animal and plant genetic material. Although a single nation can protect biodiversity within its own borders, no nation acting alone can protect biodiversity around the world.\nGlobal warming and biodiversity both are examples of international externalities—externalities that cross national borders and cannot be resolved by a single nation acting alone.'
ERROR:root:orig input: 'Many countries around the world have become more aware of the benefits of environmental protection. Unfortunately, even if most nations took steps individually to address their environmental issues, it would still not solve certain environmental problems which spill over national borders.\r\nTake global warming, for example—no one nation by itself can reduce carbon dioxide and other gas emissions enough to solve the problem. The problem is so big, nations must cooperate to effectively address it.\r\nAnother example is the challenge of preserving biodiversity—the spectrum of animal and plant genetic material. Although a single nation can protect biodiversity within its own borders, no nation acting alone can protect biodiversity around the world.\r\nGlobal warming and biodiversity both are examples of international externalities—externalities that cross national borders and cannot be resolved by a single nation acting alone.'
ERROR:root:orig selected_specific len[[["Although a single nation can protect biodiversity within its own borders, no nation acting alone can protect biodiversity around the world.",{},5]],["Many countries around the world have become more aware of the benefits of environmental protection.","Unfortunately, even if most nations took steps individually to address most nations's environmental issues, environmental protection would still not solve certain environmental problems which spill over national borders.","Take global warming, for example—no one nation by no one nation can reduce carbon dioxide and other gas emissions enough to solve the problem.","The problem is so big, nations must cooperate to effectively address the problem.","Another example is the challenge of preserving biodiversity—the spectrum of animal and plant genetic material.","Although a single nation can protect biodiversity within a single nation's own borders, no nation acting alone can protect biodiversity around the world.","Global warming and biodiversity both are examples of international externalities—externalities that cross national borders and cannot be resolved by a single nation acting alone."]]
ERROR:root:orig selected_specific len1
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ["Although a single nation can protect biodiversity within a single nation's own borders, no nation acting alone can protect biodiversity around the world."]), ('questions', ['What is the problem with protecting biodiversity around the world?']), ('answers', ['no nation acting alone can protect biodiversity around the world']), ('options', [['too many countries have too little arable land', 'international trade will destroy many species', 'many countries have poor environmental records']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.973355
ERROR:root:api_check 0:00:00.335773
ERROR:root:payload: 'One of the tools we can use to analyze the tradeoff between economic output and environmental protection is a production possibility frontier, or PPF, like the one below.\nThe PPF shows the opportunity cost of choosing either more environmental protection or more economic output. Notice that at the far left of the graph—at point P—a country would be selecting a high level of economic output but very little environmental protection. At the other extreme—point T—a country would be selecting a high level of environmental protection but little economic output.\nCountries with low per capita gross domestic product, or GDP—such as China—tend to place a greater emphasis on economic output, which in turn helps to produce nutrition, shelter, health, education, and desirable consumer goods. Countries with higher income levels, where a greater share of people have access to the basic necessities of life, may be willing to place a relatively greater emphasis on environmental protection.\nAll choices represented by points on the PPF are productively efficient—they just represent different balances of environmental protection and economic output. A choice that is inside the PPF, however—like M—is productively inefficient.'
ERROR:root:orig input: 'One of the tools we can use to analyze the tradeoff between economic output and environmental protection is a production possibility frontier, or PPF, like the one below.\r\nThe PPF shows the opportunity cost of choosing either more environmental protection or more economic output. Notice that at the far left of the graph—at point P—a country would be selecting a high level of economic output but very little environmental protection. At the other extreme—point T—a country would be selecting a high level of environmental protection but little economic output.\r\nCountries with low per capita gross domestic product, or GDP—such as China—tend to place a greater emphasis on economic output, which in turn helps to produce nutrition, shelter, health, education, and desirable consumer goods. Countries with higher income levels, where a greater share of people have access to the basic necessities of life, may be willing to place a relatively greater emphasis on environmental protection.\r\nAll choices represented by points on the PPF are productively efficient—they just represent different balances of environmental protection and economic output. A choice that is inside the PPF, however—like M—is productively inefficient.'
ERROR:root:orig selected_specific len[[["One of the tools we can use to analyze the tradeoff between economic output and environmental protection is a production possibility frontier, or PPF, like the one below.",{},0],["Countries with low per capita gross domestic product, or GDP—such as China—tend to place a greater emphasis on economic output, which in turn helps to produce nutrition, shelter, health, education, and desirable consumer goods.",{},4]],["One of the tools we can use to analyze the tradeoff between economic output and environmental protection is a production possibility frontier, or PPF, like the one below.","The PPF shows the opportunity cost of choosing either more environmental protection or more economic output.","Notice that at the far left of the graph—at point P—a country would be selecting a high level of economic output but very little environmental protection.","At the other extreme—point T—a country would be selecting a high level of environmental protection but little economic output.","Countries with low per capita gross domestic product, or GDP—such as China—tend to place a greater emphasis on economic output, which in turn helps to produce nutrition, shelter, health, education, and desirable consumer goods.","Countries with higher income levels, where a greater share of people have access to the basic necessities of life, may be willing to place a relatively greater emphasis on environmental protection.","All choices represented by points on the PPF are productively efficient—they just represent different balances of environmental protection and economic output.","A choice that is inside the PPF, however—like M—is productively inefficient."]]
ERROR:root:orig selected_specific len2
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['One of the tools we can use to analyze the tradeoff between economic output and environmental protection is a production possibility frontier, or PPF, like the one below.']), ('questions', ['What does PPF stand for?']), ('answers', ['production possibility frontier']), ('options', [['the process of making a good', 'production possibilities frontier', 'product performance frontier']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.485559
ERROR:root:api_check 0:00:00.341536
ERROR:root:payload: 'For Grandpa Dan and his family, and many other Europeans, the Second World War began in September 1939, when Germany invaded Poland. Britain and France, Poland\'s allies, declared war on Germany in response. But for others, the war started earlier. The Second World War started because the three major expansionist "Axis" powers—Fascist Italy, Nazi Germany, and Imperial Japan—wanted to conquer other countries and build empires. In that respect, one could date the war in Asia back to 1931, when Japan invaded China. Or in Africa, it could be dated to 1935, when Italy invaded Ethiopia. For Ethiopian partisans the war started four years before Germany invaded Poland. In Europe, Italy conquered Albania earlier in 1939. Germany, too, had annexed Austria and parts of Czechoslovakia before it invaded Poland.\nBut in general, we date the beginning of the Second World War to Germany\'s September 1939 invasion of Poland. That attack finally provoked Britain and France, who had armies that could actually confront the Axis Powers. Britain and France had been reluctant to confront these expansionist states. But Poland had alliances with France, and more recently with Britain. So when Germany invaded Poland, the British had to react. So, by late 1939, Britain and France (and their colonies) were at war with Germany.'
ERROR:root:orig input: 'For Grandpa Dan and his family, and many other Europeans, the Second World War began in September 1939, when Germany invaded Poland. Britain and France, Poland\'s allies, declared war on Germany in response. But for others, the war started earlier. The Second World War started because the three major expansionist "Axis" powers—Fascist Italy, Nazi Germany, and Imperial Japan—wanted to conquer other countries and build empires. In that respect, one could date the war in Asia back to 1931, when Japan invaded China. Or in Africa, it could be dated to 1935, when Italy invaded Ethiopia. For Ethiopian partisans the war started four years before Germany invaded Poland. In Europe, Italy conquered Albania earlier in 1939. Germany, too, had annexed Austria and parts of Czechoslovakia before it invaded Poland.\r\nBut in general, we date the beginning of the Second World War to Germany\'s September 1939 invasion of Poland. That attack finally provoked Britain and France, who had armies that could actually confront the Axis Powers. Britain and France had been reluctant to confront these expansionist states. But Poland had alliances with France, and more recently with Britain. So when Germany invaded Poland, the British had to react. So, by late 1939, Britain and France (and their colonies) were at war with Germany.'
ERROR:root:orig selected_specific len[[["For Grandpa Dan and his family, and many other Europeans, the Second World War began in September 1939, when Germany invaded Poland.",{},0],["The Second World War started because the three major expansionist \"Axis\" powers—Fascist Italy, Nazi Germany, and Imperial Japan—wanted to conquer other countries and build empires.",{},3],["Or in Africa, it could be dated to 1935, when Italy invaded Ethiopia.",{},5],["For Ethiopian partisans the war started four years before Germany invaded Poland.",{},6],["In Europe, Italy conquered Albania earlier in 1939.",{},7],["Germany, too, had annexed Austria and parts of Czechoslovakia before it invaded Poland.",{},8]],["For Grandpa Dan and Grandpa Dan's family, and many other Europeans, the Second World War began in September 1939, when Germany invaded Poland.","Britain and France, Poland's allies, declared war on Germany in response.","But for others, the war started earlier.","The Second World War started because the three major expansionist \"Axis\" powers—Fascist Italy, Nazi Germany, and Imperial Japan—wanted to conquer other countries and build empires.","In that respect, one could date the war in Asia back to 1931, when Japan invaded China.","Or in Africa, the Second World War could be dated to 1935, when Italy invaded Ethiopia.","For Ethiopian partisans the war started four years before Germany invaded Poland.","In Europe, Italy conquered Albania earlier in 1939.","Germany, too, had annexed Austria and parts of Czechoslovakia before Germany invaded Poland.","But in general, we date the beginning of the Second World War to Germany's September 1939 invasion of Poland.","That attack finally provoked Britain and France, who had armies that could actually confront the Axis Powers.","Britain and France had been reluctant to confront these expansionist states.","But Poland had alliances with France, and more recently with Britain.","So when Germany invaded Poland, the British had to react.","So, by late 1939, Britain and France (and their colonies) were at war with Germany."]]
ERROR:root:orig selected_specific len6
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents6
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The Second World War started because the three major expansionist "Axis" powers—Fascist Italy, Nazi Germany, and Imperial Japan—wanted to conquer other countries and build empires.', 'Or in Africa, the Second World War could be dated to 1935, when Italy invaded Ethiopia.', 'For Ethiopian partisans the war started four years before Germany invaded Poland.', 'In Europe, Italy conquered Albania earlier in 1939.', 'Germany, too, had annexed Austria and parts of Czechoslovakia before Germany invaded Poland.']), ('questions', ['What three major expansionist powers wanted to build empires?', 'When did Italy invade Ethiopia?', 'How long did the war in Ethiopia last?', 'Who conquered Albania in 1939?', 'Who annexed Austria and Czechoslovakia before Poland invaded?']), ('answers', ['Fascist Italy, Nazi Germany, and Imperial Japan', '1935', 'four years', 'Italy', 'Germany']), ('options', [['Germany, Japan, and the Soviet Union', 'Britain, France, and the United States', 'the Soviet Union and China'], ['1980', '1991', '1967'], ['one year', 'two years', 'four months'], ['Germany', 'the United States', 'the Soviet Union'], ['Britain', 'Italy', 'France']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:08.621584
ERROR:root:api_check 0:00:00.336643
ERROR:root:payload: 'Can we all agree that war is bad? Apparently, we cannot, since along with the violence of war there is also profit. As is the case with most major conflicts, the causes of the Second World War were complicated. But it\'s clear that many of the people in power, across many of the nations involved, believed that entering the war would benefit their nation\'s economy. It wasn\'t just about sending soldiers to fight. When citizens, businesses, and the rest of a nation\'s infrastructure revolve around the war effort, a total war economy emerges.\nA look at the context will help illustrate how various nations, often very distant from each other, had similar economic motives as they mobilized (prepared) for war. For starters, the Great Depression had just caused a global crisis. Germany, still reeling from their defeat in WWI had been hit especially hard. When Adolph Hitler promised to end the economic suffering and humiliation of the German people, his political party rose to power. To create jobs—which the economy desperately needed—Hitler\'s government increased military spending, and German businesses were given profitable government contracts. One part of Hitler\'s plan was to use this new military might to invade neighboring countries for resources and industrial goods to further his vision of a Greater Germany. Of course, because his vision also demanded the racial and ethnic "purity" of this expanded realm, this plan also called for the removal or genocide of many of the populations of the conquered regions. Some of the people of these countries, along with minorities within Germany, were also forced to become unpaid laborers—essentially slaves—to the German war machine.'
ERROR:root:orig input: 'Can we all agree that war is bad? Apparently, we cannot, since along with the violence of war there is also profit. As is the case with most major conflicts, the causes of the Second World War were complicated. But it\'s clear that many of the people in power, across many of the nations involved, believed that entering the war would benefit their nation\'s economy. It wasn\'t just about sending soldiers to fight. When citizens, businesses, and the rest of a nation\'s infrastructure revolve around the war effort, a total war economy emerges.\r\nA look at the context will help illustrate how various nations, often very distant from each other, had similar economic motives as they mobilized (prepared) for war. For starters, the Great Depression had just caused a global crisis. Germany, still reeling from their defeat in WWI had been hit especially hard. When Adolph Hitler promised to end the economic suffering and humiliation of the German people, his political party rose to power. To create jobs—which the economy desperately needed—Hitler\'s government increased military spending, and German businesses were given profitable government contracts. One part of Hitler\'s plan was to use this new military might to invade neighboring countries for resources and industrial goods to further his vision of a Greater Germany. Of course, because his vision also demanded the racial and ethnic "purity" of this expanded realm, this plan also called for the removal or genocide of many of the populations of the conquered regions. Some of the people of these countries, along with minorities within Germany, were also forced to become unpaid laborers—essentially slaves—to the German war machine.'
ERROR:root:orig selected_specific len[[["When Adolph Hitler promised to end the economic suffering and humiliation of the German people, his political party rose to power.",{},9],["To create jobs—which the economy desperately needed—Hitler's government increased military spending, and German businesses were given profitable government contracts.",{},10],["One part of Hitler's plan was to use this new military might to invade neighboring countries for resources and industrial goods to further his vision of a Greater Germany.",{},11],["Of course, because his vision also demanded the racial and ethnic \"purity\" of this expanded realm, this plan also called for the removal or genocide of many of the populations of the conquered regions.",{},12]],["Can we all agree that war is bad?","Apparently, we cannot, since along with the violence of war there is also profit.","As is the case with most major conflicts, the causes of the Second World War were complicated.","But it's clear that many of the people in power, across many of the nations involved, believed that entering the war would benefit many of the people in power, across many of the nations involved's nation's economy.","It wasn't just about sending soldiers to fight.","When citizens, businesses, and the rest of a nation's infrastructure revolve around the war effort, a total war economy emerges.","A look at the context will help illustrate how various nations, often very distant from each other, had similar economic motives as various nations, often very distant from each other mobilized (prepared) for war.","For starters, the Great Depression had just caused a global crisis.","Germany, still reeling from Germany, still reeling from their defeat in WWI's defeat in WWI had been hit especially hard.","When Adolph Hitler promised to end the economic suffering and humiliation of the German people, Adolph Hitler's political party rose to power.","To create jobs—which the economy desperately needed—Hitler's government increased military spending, and German businesses were given profitable government contracts.","One part of Hitler's plan was to use this new military might to invade neighboring countries for resources and industrial goods to further Adolph Hitler's vision of a Greater Germany.","Of course, because Adolph Hitler's vision also demanded the racial and ethnic \"purity\" of this expanded realm, Hitler's plan also called for the removal or genocide of many of the populations of the conquered regions.","Some of the people of these countries, along with minorities within Germany, were also forced to become unpaid laborers—essentially slaves—to the German war machine."]]
ERROR:root:orig selected_specific len4
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents4
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ["When Adolph Hitler promised to end the economic suffering and humiliation of the German people, Adolph Hitler's political party rose to power.", "To create jobs—which the economy desperately needed—Hitler's government increased military spending, and German businesses were given profitable government contracts.", "One part of Hitler's plan was to use this new military might to invade neighboring countries for resources and industrial goods to further Adolph Hitler's vision of a Greater Germany.", 'Of course, because Adolph Hitler\'s vision also demanded the racial and ethnic "purity" of this expanded realm, Hitler\'s plan also called for the removal or genocide of many of the populations of the conquered regions.']), ('questions', ['Who promised to end the economic suffering and humiliation of the German people?', 'What did Hitler increase to create jobs?', 'What did Hitler want to do with the goods he bought?', 'What did Hitler call the removal of many of the conquered regions?']), ('answers', ['Adolph Hitler', 'military spending', 'resources and industrial goods to further his vision of a Greater Germany', 'genocide']), ('options', [['Franklin D. Roosevelt', 'Harry Truman', 'John F. Kennedy'], ['government spending on public works', 'the printing of more money', 'the number of farms'], ['weapons to enable him to overthrow the Austrian and German Embassies in France', 'the kingdom of Hawaii', 'the Suez Canal and the African slave trade'], ['colonization', 'separation', 'expropriation']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:10.124176
ERROR:root:api_check 0:00:00.337173
ERROR:root:payload: 'On June 28, 1914, Yugoslav nationalist Gavrilo Princip assassinated the heir to the throne of the Austro-Hungarian empire, Archduke Franz Ferdinand. Princip and his accomplices wanted to unite the Yugoslav people and liberate them from Austrian rule. The assassination set off a series of events that culminated in a declaration of war between Austria-Hungary and Serbia. Due to the European alliance system, all major European powers were drawn into the war, which spread around the globe and became the first world war in human history.'
ERROR:root:orig input: 'On June 28, 1914, Yugoslav nationalist Gavrilo Princip assassinated the heir to the throne of the Austro-Hungarian empire, Archduke Franz Ferdinand. Princip and his accomplices wanted to unite the Yugoslav people and liberate them from Austrian rule. The assassination set off a series of events that culminated in a declaration of war between Austria-Hungary and Serbia. Due to the European alliance system, all major European powers were drawn into the war, which spread around the globe and became the first world war in human history.'
ERROR:root:orig selected_specific len[[["On June 28, 1914, Yugoslav nationalist Gavrilo Princip assassinated the heir to the throne of the Austro-Hungarian empire, Archduke Franz Ferdinand.",{},0],["Princip and his accomplices wanted to unite the Yugoslav people and liberate them from Austrian rule.",{},1],["Due to the European alliance system, all major European powers were drawn into the war, which spread around the globe and became the first world war in human history.",{},3]],["On June 28, 1914, Yugoslav nationalist Gavrilo Princip assassinated the heir to the throne of the Austro-Hungarian empire, Archduke Franz Ferdinand.","Princip and Yugoslav nationalist Gavrilo Princip's accomplices wanted to unite the Yugoslav people and liberate the Yugoslav people from Austrian rule.","The assassination set off a series of events that culminated in a declaration of war between Austria-Hungary and Serbia.","Due to the European alliance system, all major European powers were drawn into the war, which spread around the globe and became the first world war in human history."]]
ERROR:root:orig selected_specific len3
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents3
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['On June 28, 1914, Yugoslav nationalist Gavrilo Princip assassinated the heir to the throne of the Austro-Hungarian empire, Archduke Franz Ferdinand.', "Princip and Yugoslav nationalist Gavrilo Princip's accomplices wanted to unite the Yugoslav people and liberate the Yugoslav people from Austrian rule.", 'Due to the European alliance system, all major European powers were drawn into the war, which spread around the globe and became the first world war in human history.']), ('questions', ['Who assassinated Archduke Franz Ferdinand?', 'Princip wanted to liberate the Yugoslav people from what rule?', 'What system allowed all major European powers to join the war?']), ('answers', ['Gavrilo Princip', 'Austrian', 'the European alliance system']), ('options', [["Gavrilo Principato d'Austria", 'Arthur Ransome', 'Serbian nationalist'], ['Serbian', 'German', 'Russian'], ['the League of Nations', 'the United Nations', 'the North Atlantic Treaty Organization']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:06.603529
ERROR:root:api_check 0:00:42.236385
ERROR:root:payload: 'US President Woodrow Wilson sought to maintain US neutrality but was ultimately unable to keep the United States out of the war, largely because of escalating German aggression. On May 7, 1915, the Germans sunk the British ocean liner RMS Lusitania, which had over a hundred Americans on board. Wilson warned that the United States would not permit unrestricted submarine warfare or any further violations of international law.\nIn January 1917, the Germans resumed submarine warfare. A few days after this announcement, the Wilson administration obtained a copy of the Zimmermann Telegram, which urged Mexico to join the war effort on the side of Germany and pledged that in the event of a German victory, the territories of Arizona, Texas, and New Mexico would be stripped from the United States and returned to Mexico. The publication of the Zimmermann Telegram and the escalation of German submarine attacks on US merchant vessels led the US Congress to declare war on Germany on April 6, 1917.'
ERROR:root:orig input: 'US President Woodrow Wilson sought to maintain US neutrality but was ultimately unable to keep the United States out of the war, largely because of escalating German aggression. On May 7, 1915, the Germans sunk the British ocean liner RMS Lusitania, which had over a hundred Americans on board. Wilson warned that the United States would not permit unrestricted submarine warfare or any further violations of international law.\r\nIn January 1917, the Germans resumed submarine warfare. A few days after this announcement, the Wilson administration obtained a copy of the Zimmermann Telegram, which urged Mexico to join the war effort on the side of Germany and pledged that in the event of a German victory, the territories of Arizona, Texas, and New Mexico would be stripped from the United States and returned to Mexico. The publication of the Zimmermann Telegram and the escalation of German submarine attacks on US merchant vessels led the US Congress to declare war on Germany on April 6, 1917.'
ERROR:root:orig selected_specific len[[["US President Woodrow Wilson sought to maintain US neutrality but was ultimately unable to keep the United States out of the war, largely because of escalating German aggression.",{},0],["On May 7, 1915, the Germans sunk the British ocean liner RMS Lusitania, which had over a hundred Americans on board.",{},1],["In January 1917, the Germans resumed submarine warfare.",{},3],["A few days after this announcement, the Wilson administration obtained a copy of the Zimmermann Telegram, which urged Mexico to join the war effort on the side of Germany and pledged that in the event of a German victory, the territories of Arizona, Texas, and New Mexico would be stripped from the United States and returned to Mexico.",{},4],["The publication of the Zimmermann Telegram and the escalation of German submarine attacks on US merchant vessels led the US Congress to declare war on Germany on April 6, 1917.",{},5]],["US President Woodrow Wilson sought to maintain US neutrality but was ultimately unable to keep the United States out of the war, largely because of escalating German aggression.","On May 7, 1915, the Germans sunk the British ocean liner RMS Lusitania, which had over a hundred Americans on board.","Wilson warned that the United States would not permit unrestricted submarine warfare or any further violations of international law.","In January 1917, the Germans resumed submarine warfare.","A few days after this announcement, the Wilson administration obtained a copy of the Zimmermann Telegram, which urged Mexico to join the war effort on the side of Germany and pledged that in the event of a German victory, the territories of Arizona, Texas, and New Mexico would be stripped from the United States and returned to Mexico.","The publication of the Zimmermann Telegram and the escalation of German submarine attacks on US merchant vessels led the US Congress to declare war on Germany on April 6, 1917."]]
ERROR:root:orig selected_specific len5
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents5
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['US President Woodrow Wilson sought to maintain US neutrality but was ultimately unable to keep the United States out of the war, largely because of escalating German aggression.', 'On May 7, 1915, the Germans sunk the British ocean liner RMS Lusitania, which had over a hundred Americans on board.', 'A few days after this announcement, the Wilson administration obtained a copy of the Zimmermann Telegram, which urged Mexico to join the war effort on the side of Germany and pledged that in the event of a German victory, the territories of Arizona, Texas, and New Mexico would be stripped from the United States and returned to Mexico.', 'The publication of the Zimmermann Telegram and the escalation of German submarine attacks on US merchant vessels led the US Congress to declare war on Germany on April 6, 1917.']), ('questions', ['Who was the US President in the late 19th century?', 'When did the Germans sink the British ocean liner RMS Lusitania?', 'Who did the Telegram urge Mexico to join the war effort on the side of?', 'On what date did the US declare war on Germany?']), ('answers', ['Woodrow Wilson', 'May 7, 1915', 'Germany', 'April 6, 1917']), ('options', [['Lyndon Johnson', 'Richard Nixon', 'Franklin D. Roosevelt'], ['May 9, 1915', 'May 8, 1915', 'May 10, 1915'], ['Serbia', 'France', 'Great Britain'], ['April 6, 1918', 'May 8, 1917', 'May 7, 1917']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.527021
ERROR:root:api_check 0:00:00.306726
ERROR:root:payload: 'Biome is another name for a distinct type of ecosystem. Biomes are characterized by their climate, which determines the particular plants found there. The climate and the plants in a biome determine what animals live there. This article addresses the climate and biodiversity of one of Earth’s most diverse and iconic biomes: the tropical rainforest.'
ERROR:root:orig input: 'Biome is another name for a distinct type of ecosystem. Biomes are characterized by their climate, which determines the particular plants found there. The climate and the plants in a biome determine what animals live there. This article addresses the climate and biodiversity of one of Earth’s most diverse and iconic biomes: the tropical rainforest.'
ERROR:root:orig selected_specific len[[["Biomes are characterized by their climate, which determines the particular plants found there.",{},1],["This article addresses the climate and biodiversity of one of Earth’s most diverse and iconic biomes: the tropical rainforest.",{},3]],["Biome is another name for a distinct type of ecosystem.","Biomes are characterized by Biomes's climate, which determines the particular plants found there.","The climate and the plants in a biome determine what animals live there.","This article addresses the climate and biodiversity of one of Earth’s most diverse and iconic biomes: the tropical rainforest."]]
ERROR:root:orig selected_specific len2
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ["Biomes are characterized by Biomes's climate, which determines the particular plants found there.", 'This article addresses the climate and biodiversity of one of Earth’s most diverse and iconic biomes: the tropical rainforest.']), ('questions', ['What determines the plants found in a Biome?', 'What is one of the most diverse and iconic biomes on Earth?']), ('answers', ['climate', 'the tropical rainforest']), ('options', [['elevation', 'topography', 'landforms'], ['the desert', 'the mountain wilderness', 'the savanna']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.420634
ERROR:root:api_check 0:00:00.337691
ERROR:root:payload: 'The tropical rainforest biome has four main characteristics: very high annual rainfall, high average temperatures, nutrient-poor soil, and high levels of biodiversity (species richness).\nRainfall:  The word “rainforest” implies that these are the some of the world’s wettest ecosystems. Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.  For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!) of rain in a typical year. Despite relatively consistent rain in these ecosystems, there are distinct dry seasons in some rainforests. Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe. Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.'
ERROR:root:orig input: 'The tropical rainforest biome has four main characteristics: very high annual rainfall, high average temperatures, nutrient-poor soil, and high levels of biodiversity (species richness).\r\nRainfall:  The word “rainforest” implies that these are the some of the world’s wettest ecosystems. Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.  For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!) of rain in a typical year. Despite relatively consistent rain in these ecosystems, there are distinct dry seasons in some rainforests. Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe. Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.'
ERROR:root:orig selected_specific len[[["The tropical rainforest biome has four main characteristics: very high annual rainfall, high average temperatures, nutrient-poor soil, and high levels of biodiversity (species richness).",{},0],["Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.",{},2],["For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!)",{},3],["Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe.",{},6],["Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.",{},7]],["The tropical rainforest biome has four main characteristics: very high annual rainfall, high average temperatures, nutrient-poor soil, and high levels of biodiversity (species richness).","Rainfall:  The word “rainforest” implies Rainfall these are the some of the world’s wettest ecosystems.","Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.","For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!)","of rain in a typical year.","Despite relatively consistent rain in these ecosystems, there are distinct dry seasons in some rainforests.","Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe.","Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season."]]
ERROR:root:orig selected_specific len5
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents5
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The tropical rainforest biome has four main characteristics: very high annual rainfall, high average temperatures, nutrient-poor soil, and high levels of biodiversity (species richness).', 'Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.', 'For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!)', 'Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe.']), ('questions', ['How many main characteristics does the tropical rainforest biome have?', 'What type of land receives high rainfall each year?', 'How much water do South American rainforests receive?', 'What is the difference between the seasons in tropical rainforests?']), ('answers', ['four', 'Rainforests', 'between 200 and 300 centimeters', 'Wet and dry seasons of tropical rainforests vary in their timing, duration and severity']), ('options', [['it has large, dark clouds', 'it is characterized by large, dark clouds', 'it is characterized by high, bright suns'], ['savannas', 'mountains', 'deserts'], ['between 50 and 100 centimeters', 'between 100 and 200 centimeters'], ['The length of the dry season is dependent on latitude', 'Most of the time, the rainy season is long and the dry season is short', 'Wet and dry seasons of tropical rainforests are the same as in Mediterranean climates']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:14.954649
ERROR:root:api_check 0:00:00.333140
ERROR:root:payload: 'Temperature: Tropical rainforests are found near the equator, between the Tropic of Cancer (23°27’N) and the Tropic of Capricorn (23°27’S).  The equator receives direct sunlight. This steady flow of radiation produces consistently high temperatures throughout the year. A typical daytime temperature any time of year in tropical rainforests is 29°C (85°F), although temperatures can be much higher. In the majority of tropical rainforests, there is only a 5°C (9°F) difference in temperature between the seasons.'
ERROR:root:orig input: 'Temperature: Tropical rainforests are found near the equator, between the Tropic of Cancer (23°27’N) and the Tropic of Capricorn (23°27’S).  The equator receives direct sunlight. This steady flow of radiation produces consistently high temperatures throughout the year. A typical daytime temperature any time of year in tropical rainforests is 29°C (85°F), although temperatures can be much higher. In the majority of tropical rainforests, there is only a 5°C (9°F) difference in temperature between the seasons.'
ERROR:root:orig selected_specific len[[["Temperature: Tropical rainforests are found near the equator, between the Tropic of Cancer (23°27’N) and the Tropic of Capricorn (23°27’S).",{},0],["A typical daytime temperature any time of year in tropical rainforests is 29°C (85°F), although temperatures can be much higher.",{},3],["In the majority of tropical rainforests, there is only a 5°C (9°F) difference in temperature between the seasons.",{},4]],["Temperature: Tropical rainforests are found near the equator, between the Tropic of Cancer (23°27’N) and the Tropic of Capricorn (23°27’S).","The equator receives direct sunlight.","This steady flow of radiation produces consistently high temperatures throughout the year.","A typical daytime temperature any time of year in tropical rainforests is 29°C (85°F), although temperatures can be much higher.","In the majority of tropical rainforests, there is only a 5°C (9°F) difference in temperature between the seasons."]]
ERROR:root:orig selected_specific len3
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents3
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Temperature: Tropical rainforests are found near the equator, between the Tropic of Cancer (23°27’N) and the Tropic of Capricorn (23°27’S).', 'A typical daytime temperature any time of year in tropical rainforests is 29°C (85°F), although temperatures can be much higher.', 'In the majority of tropical rainforests, there is only a 5°C (9°F) difference in temperature between the seasons.']), ('questions', ['Where are tropical rainforests located?', 'What is the typical daytime temperature in the rainforest?', 'What is the difference in temperature between seasons in most tropical rainforests?']), ('answers', ['near the equator', '29°C', '5°C (9°F)']), ('options', [['near the southern tip of South America', 'near the northern border of the Amazon rain forest', 'in the southern part of the Amazon rain forest'], ['33°C', '25°C', '30°C'], ['10°C (18°F)', '15°C (24°F)', '20°C (28°F)']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.567338
ERROR:root:api_check 0:00:00.346608
ERROR:root:payload: 'Soil Composition: Since there is a tremendous amount and diversity of foliage in tropical rainforests, you might assume that rainforest soils are rich in nutrients. In fact, rainforest soils are nutrient-poor because nutrients are not stored in them for very long. The heavy rains that occur in rainforests wash organic material from the soil. Although decomposition occurs rapidly in the hot, moist conditions, many of the dead, fallen leaves and other organic detritus are swept away before releasing all of their nutrients. In addition, rainwater seeps into the ground and leaches away nutrients. Nevertheless, the high diversity of decomposers, such as bacteria and fungi accelerates the decomposition process enough that the nutrients released by decomposition are taken up quickly by the plants, instead of being stored in the soil.\nBiodiversity: Tropical rainforests are areas of extremely high biodiversity compared to other ecosystems. In the topical rainforests of Borneo, scientists have documented more than 15,000 plant species, including 2,500 species of orchids! Biologists estimate that tropical rainforests contain about 50% of the world’s terrestrial plant and animal species, yet they encompass only about 6% of the world’s land area.\nWhile tropical rainforests around the world have many similarities in their climates and soil composition, each regional rainforest is unique. You will not find precisely the same species living in all the tropical rainforests around the world. For example, the species in African tropical rainforests are not the same as the species living in the tropical rainforests of Central America. However, the different species play similar roles within their specific regional rainforest.'
ERROR:root:orig input: 'Soil Composition: Since there is a tremendous amount and diversity of foliage in tropical rainforests, you might assume that rainforest soils are rich in nutrients. In fact, rainforest soils are nutrient-poor because nutrients are not stored in them for very long. The heavy rains that occur in rainforests wash organic material from the soil. Although decomposition occurs rapidly in the hot, moist conditions, many of the dead, fallen leaves and other organic detritus are swept away before releasing all of their nutrients. In addition, rainwater seeps into the ground and leaches away nutrients. Nevertheless, the high diversity of decomposers, such as bacteria and fungi accelerates the decomposition process enough that the nutrients released by decomposition are taken up quickly by the plants, instead of being stored in the soil.\r\nBiodiversity: Tropical rainforests are areas of extremely high biodiversity compared to other ecosystems. In the topical rainforests of Borneo, scientists have documented more than 15,000 plant species, including 2,500 species of orchids! Biologists estimate that tropical rainforests contain about 50% of the world’s terrestrial plant and animal species, yet they encompass only about 6% of the world’s land area.\r\nWhile tropical rainforests around the world have many similarities in their climates and soil composition, each regional rainforest is unique. You will not find precisely the same species living in all the tropical rainforests around the world. For example, the species in African tropical rainforests are not the same as the species living in the tropical rainforests of Central America. However, the different species play similar roles within their specific regional rainforest.'
ERROR:root:orig selected_specific len[[["Soil Composition: Since there is a tremendous amount and diversity of foliage in tropical rainforests, you might assume that rainforest soils are rich in nutrients.",{},0],["The heavy rains that occur in rainforests wash organic material from the soil.",{},2],["Although decomposition occurs rapidly in the hot, moist conditions, many of the dead, fallen leaves and other organic detritus are swept away before releasing all of their nutrients.",{},3],["Nevertheless, the high diversity of decomposers, such as bacteria and fungi accelerates the decomposition process enough that the nutrients released by decomposition are taken up quickly by the plants, instead of being stored in the soil.",{},5],["Biodiversity: Tropical rainforests are areas of extremely high biodiversity compared to other ecosystems.",{},6],["In the topical rainforests of Borneo, scientists have documented more than 15,000 plant species, including 2,500 species of orchids!",{},7],["Biologists estimate that tropical rainforests contain about 50% of the world’s terrestrial plant and animal species, yet they encompass only about 6% of the world’s land area.",{},8],["While tropical rainforests around the world have many similarities in their climates and soil composition, each regional rainforest is unique.",{},9]],["Soil Composition: Since there is a tremendous amount and diversity of foliage in tropical rainforests, you might assume that rainforest soils are rich in nutrients.","In fact, rainforest soils are nutrient-poor because nutrients are not stored in rainforest soils for very long.","The heavy rains that occur in rainforests wash organic material from the soil.","Although decomposition occurs rapidly in the hot, moist conditions, many of the dead, fallen leaves and other organic detritus are swept away before releasing all of many of the dead, fallen leaves and other organic detritus's nutrients.","In addition, rainwater seeps into the ground and leaches away nutrients.","Nevertheless, the high diversity of decomposers, such as bacteria and fungi accelerates the decomposition process enough that the nutrients released by decomposition are taken up quickly by the plants, instead of being stored in the soil.","Biodiversity: Tropical rainforests are areas of extremely high biodiversity compared to other ecosystems.","In the topical rainforests of Borneo, scientists have documented more than 15,000 plant species, including 2,500 species of orchids!","Biologists estimate that tropical rainforests contain about 50% of the world’s terrestrial plant and animal species, yet tropical rainforests encompass only about 6% of the world’s land area.","While tropical rainforests around the world have many similarities in tropical rainforests around the world's climates and soil composition, each regional rainforest is unique.","You will not find precisely the same species living in all the tropical rainforests around the world.","For example, the species in African tropical rainforests are not the same as the species living in the tropical rainforests of Central America.","However, the different species play similar roles within their specific regional rainforest."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents8
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Soil Composition: Since there is a tremendous amount and diversity of foliage in tropical rainforests, you might assume that rainforest soils are rich in nutrients.', 'The heavy rains that occur in rainforests wash organic material from the soil.', "Although decomposition occurs rapidly in the hot, moist conditions, many of the dead, fallen leaves and other organic detritus are swept away before releasing all of many of the dead, fallen leaves and other organic detritus's nutrients.", 'Nevertheless, the high diversity of decomposers, such as bacteria and fungi accelerates the decomposition process enough that the nutrients released by decomposition are taken up quickly by the plants, instead of being stored in the soil.', 'Biodiversity: Tropical rainforests are areas of extremely high biodiversity compared to other ecosystems.', 'Biologists estimate that tropical rainforests contain about 50% of the world’s terrestrial plant and animal species, yet tropical rainforests encompass only about 6% of the world’s land area.']), ('questions', ['What is the soil in a rainforest rich in?', 'What happens in rainforests to wash organic material from the soil?', 'What do the dead, fallen leaves and other organic detritus release?', 'What are two examples of decomposers?', 'What areas have high biodiversity compared to other ecosystems?', "What percentage of the world's terrestrial plant and animal species are found in tropical rainforests?"]), ('answers', ['nutrients', 'heavy rains', 'nutrients', 'bacteria and fungi', 'Tropical rainforests', '50%']), ('options', [['water holding capacity', 'organic matter', 'minerals'], ['heavy rainfall', 'flooding of low lying plains', 'high winds'], ['water vapor', 'carbon dioxide', 'H20'], ['humans and animals', 'animals and plants', 'minerals and water'], ['savanna regions', 'temperate rainforests', 'boreal forests'], ['25%']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:12.362261
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:30.508293
ERROR:root:payload: 'Soil Composition: Since there is a tremendous amount and diversity of foliage in tropical rainforests, you might assume that rainforest soils are rich in nutrients. In fact, rainforest soils are nutrient-poor because nutrients are not stored in them for very long. The heavy rains that occur in rainforests wash organic material from the soil. Although decomposition occurs rapidly in the hot, moist conditions, many of the dead, fallen leaves and other organic detritus are swept away before releasing all of their nutrients. In addition, rainwater seeps into the ground and leaches away nutrients. Nevertheless, the high diversity of decomposers, such as bacteria and fungi accelerates the decomposition process enough that the nutrients released by decomposition are taken up quickly by the plants, instead of being stored in the soil.\nBiodiversity: Tropical rainforests are areas of extremely high biodiversity compared to other ecosystems. In the topical rainforests of Borneo, scientists have documented more than 15,000 plant species, including 2,500 species of orchids! Biologists estimate that tropical rainforests contain about 50% of the world’s terrestrial plant and animal species, yet they encompass only about 6% of the world’s land area.\nWhile tropical rainforests around the world have many similarities in their climates and soil composition, each regional rainforest is unique. You will not find precisely the same species living in all the tropical rainforests around the world. For example, the species in African tropical rainforests are not the same as the species living in the tropical rainforests of Central America. However, the different species play similar roles within their specific regional rainforest.'
ERROR:root:orig input: 'Soil Composition: Since there is a tremendous amount and diversity of foliage in tropical rainforests, you might assume that rainforest soils are rich in nutrients. In fact, rainforest soils are nutrient-poor because nutrients are not stored in them for very long. The heavy rains that occur in rainforests wash organic material from the soil. Although decomposition occurs rapidly in the hot, moist conditions, many of the dead, fallen leaves and other organic detritus are swept away before releasing all of their nutrients. In addition, rainwater seeps into the ground and leaches away nutrients. Nevertheless, the high diversity of decomposers, such as bacteria and fungi accelerates the decomposition process enough that the nutrients released by decomposition are taken up quickly by the plants, instead of being stored in the soil.\r\nBiodiversity: Tropical rainforests are areas of extremely high biodiversity compared to other ecosystems. In the topical rainforests of Borneo, scientists have documented more than 15,000 plant species, including 2,500 species of orchids! Biologists estimate that tropical rainforests contain about 50% of the world’s terrestrial plant and animal species, yet they encompass only about 6% of the world’s land area.\r\nWhile tropical rainforests around the world have many similarities in their climates and soil composition, each regional rainforest is unique. You will not find precisely the same species living in all the tropical rainforests around the world. For example, the species in African tropical rainforests are not the same as the species living in the tropical rainforests of Central America. However, the different species play similar roles within their specific regional rainforest.'
ERROR:root:orig selected_specific len[[["Soil Composition: Since there is a tremendous amount and diversity of foliage in tropical rainforests, you might assume that rainforest soils are rich in nutrients.",{},0],["The heavy rains that occur in rainforests wash organic material from the soil.",{},2],["Although decomposition occurs rapidly in the hot, moist conditions, many of the dead, fallen leaves and other organic detritus are swept away before releasing all of their nutrients.",{},3],["Nevertheless, the high diversity of decomposers, such as bacteria and fungi accelerates the decomposition process enough that the nutrients released by decomposition are taken up quickly by the plants, instead of being stored in the soil.",{},5],["Biodiversity: Tropical rainforests are areas of extremely high biodiversity compared to other ecosystems.",{},6],["In the topical rainforests of Borneo, scientists have documented more than 15,000 plant species, including 2,500 species of orchids!",{},7],["Biologists estimate that tropical rainforests contain about 50% of the world’s terrestrial plant and animal species, yet they encompass only about 6% of the world’s land area.",{},8],["While tropical rainforests around the world have many similarities in their climates and soil composition, each regional rainforest is unique.",{},9]],["Soil Composition: Since there is a tremendous amount and diversity of foliage in tropical rainforests, you might assume that rainforest soils are rich in nutrients.","In fact, rainforest soils are nutrient-poor because nutrients are not stored in rainforest soils for very long.","The heavy rains that occur in rainforests wash organic material from the soil.","Although decomposition occurs rapidly in the hot, moist conditions, many of the dead, fallen leaves and other organic detritus are swept away before releasing all of many of the dead, fallen leaves and other organic detritus's nutrients.","In addition, rainwater seeps into the ground and leaches away nutrients.","Nevertheless, the high diversity of decomposers, such as bacteria and fungi accelerates the decomposition process enough that the nutrients released by decomposition are taken up quickly by the plants, instead of being stored in the soil.","Biodiversity: Tropical rainforests are areas of extremely high biodiversity compared to other ecosystems.","In the topical rainforests of Borneo, scientists have documented more than 15,000 plant species, including 2,500 species of orchids!","Biologists estimate that tropical rainforests contain about 50% of the world’s terrestrial plant and animal species, yet tropical rainforests encompass only about 6% of the world’s land area.","While tropical rainforests around the world have many similarities in tropical rainforests around the world's climates and soil composition, each regional rainforest is unique.","You will not find precisely the same species living in all the tropical rainforests around the world.","For example, the species in African tropical rainforests are not the same as the species living in the tropical rainforests of Central America.","However, the different species play similar roles within their specific regional rainforest."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents8
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Soil Composition: Since there is a tremendous amount and diversity of foliage in tropical rainforests, you might assume that rainforest soils are rich in nutrients.', 'The heavy rains that occur in rainforests wash organic material from the soil.', "Although decomposition occurs rapidly in the hot, moist conditions, many of the dead, fallen leaves and other organic detritus are swept away before releasing all of many of the dead, fallen leaves and other organic detritus's nutrients.", 'Nevertheless, the high diversity of decomposers, such as bacteria and fungi accelerates the decomposition process enough that the nutrients released by decomposition are taken up quickly by the plants, instead of being stored in the soil.', 'Biodiversity: Tropical rainforests are areas of extremely high biodiversity compared to other ecosystems.', 'Biologists estimate that tropical rainforests contain about 50% of the world’s terrestrial plant and animal species, yet tropical rainforests encompass only about 6% of the world’s land area.']), ('questions', ['What is the soil in a rainforest rich in?', 'What happens in rainforests to wash organic material from the soil?', 'What do the dead, fallen leaves and other organic detritus release?', 'What are two examples of decomposers?', 'What areas have high biodiversity compared to other ecosystems?', "What percentage of the world's terrestrial plant and animal species are found in tropical rainforests?"]), ('answers', ['nutrients', 'heavy rains', 'nutrients', 'bacteria and fungi', 'Tropical rainforests', '50%']), ('options', [['mineral resources', 'air pockets', 'water holding capacity'], ['heavy rainfall', 'flooding of low lying plains', 'high winds'], ['ions', 'phosphenes', 'water'], ['humans and animals', 'minerals and elements', 'plants and animals'], ['boreal forests', 'savanna regions', 'temperate rainforests'], ['25%']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:06.626159
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: The server is currently overloaded with other requests. Sorry about that! You can retry your request, or contact support@openai.com if the error persists.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: The server is currently overloaded with other requests. Sorry about that! You can retry your request, or contact support@openai.com if the error persists.
ERROR:root:api_check 0:00:11.704490
ERROR:root:payload: 'The Greeks were known for their sophisticated sculpture and architecture.\nGreek culture influenced the Roman Empire and many other civilizations, and it continues to influence modern cultures today.'
ERROR:root:orig input: 'The Greeks were known for their sophisticated sculpture and architecture.\r\nGreek culture influenced the Roman Empire and many other civilizations, and it continues to influence modern cultures today.'
ERROR:root:orig selected_specific len[[["Greek culture influenced the Roman Empire and many other civilizations, and it continues to influence modern cultures today.",{},1]],["The Greeks were known for The Greeks's sophisticated sculpture and architecture.","Greek culture influenced the Roman Empire and many other civilizations, and Greek culture continues to influence modern cultures today."]]
ERROR:root:orig selected_specific len1
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Greek culture influenced the Roman Empire and many other civilizations, and Greek culture continues to influence modern cultures today.']), ('questions', ['What culture influenced the Roman Empire?']), ('answers', ['Greek']), ('options', [['British', 'Mongol', 'German']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:09.656739
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: The server is currently overloaded with other requests. Sorry about that! You can retry your request, or contact support@openai.com if the error persists.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.335810
ERROR:root:payload: 'The ancient Greeks lived in many lands around the Mediterranean Sea, from Turkey to the south of France. They had close contacts with other peoples such as the Egyptians, Syrians and Persians. The Greeks lived in separate city-states, but shared the same language and religious beliefs.\nBronze Age Greece\n\nMap of Greece showing Mycenae\nDuring the Bronze Age (around 3200 – 1100 B.C.E.), a number of cultures flourished on the islands of the Cyclades, in Crete and on the Greek mainland. They were mainly farmers, but trade across the sea, particularly in raw materials such as obsidian (volcanic glass) and metals, was growing.\nMycenaean culture flourished on the Greek mainland in the Late Bronze Age, from about 1600 to 1100 B.C.E. The name comes from the site of Mycenae, where the culture was first recognized after the excavations in 1876 of Heinrich Schliemann.'
ERROR:root:orig input: '\r\nThe ancient Greeks lived in many lands around the Mediterranean Sea, from Turkey to the south of France. They had close contacts with other peoples such as the Egyptians, Syrians and Persians. The Greeks lived in separate city-states, but shared the same language and religious beliefs.\r\nBronze Age Greece\r\n\r\nMap of Greece showing Mycenae\r\nDuring the Bronze Age (around 3200 – 1100 B.C.E.), a number of cultures flourished on the islands of the Cyclades, in Crete and on the Greek mainland. They were mainly farmers, but trade across the sea, particularly in raw materials such as obsidian (volcanic glass) and metals, was growing.\r\nMycenaean culture flourished on the Greek mainland in the Late Bronze Age, from about 1600 to 1100 B.C.E. The name comes from the site of Mycenae, where the culture was first recognized after the excavations in 1876 of Heinrich Schliemann.'
ERROR:root:orig selected_specific len[[["The ancient Greeks lived in many lands around the Mediterranean Sea, from Turkey to the south of France.",{},0],["Bronze Age Greece  Map of Greece showing Mycenae During the Bronze Age (around 3200 – 1100 B.C.E.",{},3],["They were mainly farmers, but trade across the sea, particularly in raw materials such as obsidian (volcanic glass) and metals, was growing.",{},5],["Mycenaean culture flourished on the Greek mainland in the Late Bronze Age, from about 1600 to 1100 B.C.E.",{},6],["The name comes from the site of Mycenae, where the culture was first recognized after the excavations in 1876 of Heinrich Schliemann.",{},7]],["The ancient Greeks lived in many lands around the Mediterranean Sea, from Turkey to the south of France.","The ancient Greeks had close contacts with other peoples such as the Egyptians, Syrians and Persians.","The Greeks lived in separate city-states, but shared the same language and religious beliefs.","Bronze Age Greece  Map of Greece showing Mycenae During the Bronze Age (around 3200 – 1100 B.C.E.","), a number of cultures flourished on the islands of the Cyclades, in Crete and on the Greek mainland.","They were mainly farmers, but trade across the sea, particularly in raw materials such as obsidian (volcanic glass) and metals, was growing.","Mycenaean culture flourished on the Greek mainland in the Late Bronze Age, from about 1600 to 1100 B.C.E.","The name comes from the site of Mycenae, where the culture was first recognized after the excavations in 1876 of Heinrich Schliemann."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000467
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:total before 0:00:02.942985
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001174
ERROR:root:output sents fb 1
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', ['Mycenaean culture flourished on the Greek mainland in the  _________ , from about 1600 to 1100 B.C.E.']), ('answers', ['late bronze age'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', ['Mycenaean culture flourished on the Greek mainland in the  _________ , from about 1600 to 1100 B.C.E.']), ('answers', ['late bronze age'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:03.364690
ERROR:root:api_check 0:00:00.342200
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and scien'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and scien'
ERROR:root:orig selected_specific len[[["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and scien"]]
ERROR:root:orig selected_specific len1
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:total before 0:00:01.683417
ERROR:root:fitb timer0:00:00.000002
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.']), ('questions', ['What civilizations did the Ancient Greeks build on?']), ('answers', ['Egypt and Mesopotamia']), ('options', [['Greece and Rome', 'Syria and Asia Minor', 'Persia and India']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.420145
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:11.260337
ERROR:root:payload: 'The Greeks made important contributions to philosophy, mathematics, astronomy, and medicine.\nLiterature and theatre was an important aspect of Greek culture and influenced modern drama.\nThe Greeks were known for their sophisticated sculpture and architecture.\nGreek culture influenced the Roman Empire and many other civilizations, and it continues to influence modern cultures today.'
ERROR:root:orig input: 'The Greeks made important contributions to philosophy, mathematics, astronomy, and medicine.\r\nLiterature and theatre was an important aspect of Greek culture and influenced modern drama.\r\nThe Greeks were known for their sophisticated sculpture and architecture.\r\nGreek culture influenced the Roman Empire and many other civilizations, and it continues to influence modern cultures today.'
ERROR:root:orig selected_specific len[[["Greek culture influenced the Roman Empire and many other civilizations, and it continues to influence modern cultures today.",{},3]],["The Greeks made important contributions to philosophy, mathematics, astronomy, and medicine.","Literature and theatre was an important aspect of Greek culture and influenced modern drama.","The Greeks were known for The Greeks's sophisticated sculpture and architecture.","Greek culture influenced the Roman Empire and many other civilizations, and Greek culture continues to influence modern cultures today."]]
ERROR:root:orig selected_specific len1
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:total before 0:00:01.666445
ERROR:root:fitb timer0:00:00.000004
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Greek culture influenced the Roman Empire and many other civilizations, and Greek culture continues to influence modern cultures today.']), ('questions', ['What culture influenced the Roman Empire?']), ('answers', ['Greek']), ('options', [['African', 'British', 'German']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.374563
ERROR:root:api_check 0:00:00.912234
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,."]]
ERROR:root:orig selected_specific len5
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:02.339687
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001886
ERROR:root:output sents fb 2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.']), ('questions', ['What ancient Greek mathematicians helped us understand geometry?', 'Who developed some of the first astronomical models?']), ('answers', ['Pythagoras, Euclid, and Archimedes', 'Ancient Greeks']), ('options', [['Plato, Euclidean geometry, and Archimedes', 'Plato and Archimedes', 'Euclidean geometry and Archimedes'], ['Greeks', 'Romans', 'Chinese']])])), ('Fill in the Blanks', OrderedDict([('questions', ["Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and  _________  of diseases and remedies—credited with being the founder of modern medicine.", 'Hippocrates, another ancient Greek, is the most famous physician in  _________ .']), ('answers', ['empirical investigation', 'antiquity'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:07.517205
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.334676
ERROR:root:payload: "The dugong (/ˈdjuːɡɒŋ/; Dugong dugon) is a marine mammal. It is one of four living species of the order Sirenia, which also includes three species of manatees. It is the only living representative of the once-diverse family Dugongidae; its closest modern relative, Steller's sea cow (Hydrodamalis gigas), was hunted to extinction in the 18th century.\n\nThe dugong is the only sirenian in its range, which spans the waters of some 40 countries and territories throughout the Indo-West Pacific. The dugong is largely dependent on seagrass communities for subsistence and is thus restricted to the coastal habitats which support seagrass meadows, with the largest dugong concentrations typically occurring in wide, shallow, protected areas such as bays, mangrove channels, the waters of large inshore islands and inter-reefal waters. The northern waters of Australia between Shark Bay and Moreton Bay are believed to be the dugong's contemporary stronghold.\n\nLike all modern sirenians, the dugong has a fusiform body with no dorsal fin or hind limbs. The forelimbs or flippers are paddle-like. The dugong is easily distinguished from the manatees by its fluked, dolphin-like tail, but also possesses a unique skull and teeth. Its snout is sharply downturned, an adaptation for feeding in benthic seagrass communities. The molar teeth are simple and peg-like, unlike the more elaborate molar dentition of manatees.\n\nThe dugong has been hunted for thousands of years for its meat and oil. Traditional hunting still has great cultural significance in several countries in its modern range, particularly northern Australia and the Pacific Islands. The dugong's current distribution is fragmented, and many populations are believed to be close to extinction. The IUCN lists the dugong as a species vulnerable to extinction, while the Convention on International Trade in Endangered Species limits or bans the trade of derived products. Despite being legally protected in many countries, the main causes of population decline remain anthropogenic and include fishing-related fatalities, habitat degradation and hunting. With its long lifespan of 70 years or more, and slow rate of reproduction, the dugong is especially vulnerable to extinction."
ERROR:root:orig input: "The dugong (/ˈdjuːɡɒŋ/; Dugong dugon) is a marine mammal. It is one of four living species of the order Sirenia, which also includes three species of manatees. It is the only living representative of the once-diverse family Dugongidae; its closest modern relative, Steller's sea cow (Hydrodamalis gigas), was hunted to extinction in the 18th century.\r\n\r\nThe dugong is the only sirenian in its range, which spans the waters of some 40 countries and territories throughout the Indo-West Pacific. The dugong is largely dependent on seagrass communities for subsistence and is thus restricted to the coastal habitats which support seagrass meadows, with the largest dugong concentrations typically occurring in wide, shallow, protected areas such as bays, mangrove channels, the waters of large inshore islands and inter-reefal waters. The northern waters of Australia between Shark Bay and Moreton Bay are believed to be the dugong's contemporary stronghold.\r\n\r\nLike all modern sirenians, the dugong has a fusiform body with no dorsal fin or hind limbs. The forelimbs or flippers are paddle-like. The dugong is easily distinguished from the manatees by its fluked, dolphin-like tail, but also possesses a unique skull and teeth. Its snout is sharply downturned, an adaptation for feeding in benthic seagrass communities. The molar teeth are simple and peg-like, unlike the more elaborate molar dentition of manatees.\r\n\r\nThe dugong has been hunted for thousands of years for its meat and oil. Traditional hunting still has great cultural significance in several countries in its modern range, particularly northern Australia and the Pacific Islands. The dugong's current distribution is fragmented, and many populations are believed to be close to extinction. The IUCN lists the dugong as a species vulnerable to extinction, while the Convention on International Trade in Endangered Species limits or bans the trade of derived products. Despite being legally protected in many countries, the main causes of population decline remain anthropogenic and include fishing-related fatalities, habitat degradation and hunting. With its long lifespan of 70 years or more, and slow rate of reproduction, the dugong is especially vulnerable to extinction."
ERROR:root:orig selected_specific len[[["The dugong (/ˈdjuːɡɒŋ/; Dugong dugon) is a marine mammal.",{},0],["It is one of four living species of the order Sirenia, which also includes three species of manatees.",{},1],["It is the only living representative of the once-diverse family Dugongidae; its closest modern relative, Steller's sea cow (Hydrodamalis gigas), was hunted to extinction in the 18th century.",{},2],["The dugong is the only sirenian in its range, which spans the waters of some 40 countries and territories throughout the Indo-West Pacific.",{},3],["The dugong is largely dependent on seagrass communities for subsistence and is thus restricted to the coastal habitats which support seagrass meadows, with the largest dugong concentrations typically occurring in wide, shallow, protected areas such as bays, mangrove channels, the waters of large inshore islands and inter-reefal waters.",{},4],["The northern waters of Australia between Shark Bay and Moreton Bay are believed to be the dugong's contemporary stronghold.",{},5],["Like all modern sirenians, the dugong has a fusiform body with no dorsal fin or hind limbs.",{},6],["The dugong is easily distinguished from the manatees by its fluked, dolphin-like tail, but also possesses a unique skull and teeth.",{},8],["Its snout is sharply downturned, an adaptation for feeding in benthic seagrass communities.",{},9],["The molar teeth are simple and peg-like, unlike the more elaborate molar dentition of manatees.",{},10],["The dugong has been hunted for thousands of years for its meat and oil.",{},11],["The dugong's current distribution is fragmented, and many populations are believed to be close to extinction.",{},13],["The IUCN lists the dugong as a species vulnerable to extinction, while the Convention on International Trade in Endangered Species limits or bans the trade of derived products.",{},14],["Despite being legally protected in many countries, the main causes of population decline remain anthropogenic and include fishing-related fatalities, habitat degradation and hunting.",{},15],["With its long lifespan of 70 years or more, and slow rate of reproduction, the dugong is especially vulnerable to extinction.",{},16]],["The dugong (/ˈdjuːɡɒŋ/; Dugong dugon) is a marine mammal.","Dugong dugon) is one of four living species of the order Sirenia, which also includes three species of manatees.","Dugong dugon) is the only living representative of the once-diverse family Dugongidae; Dugong dugon)'s closest modern relative, Steller's sea cow (Hydrodamalis gigas), was hunted to extinction in the 18th century.","The dugong is the only sirenian in its range, which spans the waters of some 40 countries and territories throughout the Indo-West Pacific.","The dugong is largely dependent on seagrass communities for subsistence and is thus restricted to the coastal habitats which support seagrass meadows, with the largest dugong concentrations typically occurring in wide, shallow, protected areas such as bays, mangrove channels, the waters of large inshore islands and inter-reefal waters.","The northern waters of Australia between Shark Bay and Moreton Bay are believed to be the dugong's contemporary stronghold.","Like all modern sirenians, the dugong has a fusiform body with no dorsal fin or hind limbs.","The forelimbs or flippers are paddle-like.","The dugong is easily distinguished from the manatees by its fluked, dolphin-like tail, but also possesses a unique skull and teeth.","Its snout is sharply downturned, an adaptation for feeding in benthic seagrass communities.","The molar teeth are simple and peg-like, unlike the more elaborate molar dentition of manatees.","The dugong has been hunted for thousands of years for its meat and oil.","Traditional hunting still has great cultural significance in Dugong dugon) countries in its modern range, particularly northern Australia and the Pacific Islands.","The dugong's current distribution is fragmented, and many populations are believed to be close to extinction.","The IUCN lists the dugong as a species vulnerable to extinction, while the Convention on International Trade in Endangered Species limits or bans the trade of derived products.","Despite being legally protected in many countries, the main causes of population decline remain anthropogenic and include fishing-related fatalities, habitat degradation and hunting.","With its long lifespan of 70 years or more, and slow rate of reproduction, the dugong is especially vulnerable to extinction."]]
ERROR:root:orig selected_specific len15
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.001461
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents10
ERROR:root:total before 0:00:06.704497
ERROR:root:fitb timer0:00:00.000002
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['The dugong (/ˈdjuːɡɒŋ/; Dugong dugon) is a marine mammal.', 'Dugong dugon) is one of four living species of the order Sirenia, which also includes three species of manatees.', "Dugong dugon) is the only living representative of the once-diverse family Dugongidae; Dugong dugon)'s closest modern relative, Steller's sea cow (Hydrodamalis gigas), was hunted to extinction in the 18th century.", 'The dugong is largely dependent on seagrass communities for subsistence and is thus restricted to the coastal habitats which support seagrass meadows, with the largest dugong concentrations typically occurring in wide, shallow, protected areas such as bays, mangrove channels, the waters of large inshore islands and inter-reefal waters.', "The northern waters of Australia between Shark Bay and Moreton Bay are believed to be the dugong's contemporary stronghold.", 'Like all modern sirenians, the dugong has a fusiform body with no dorsal fin or hind limbs.', 'Its snout is sharply downturned, an adaptation for feeding in benthic seagrass communities.']), ('questions', ['What kind of animal is the dugong?', 'How many species of the Sirenia order exist?', 'What is the closest modern relative of Dugong dugon?', 'What do the dugong depend on for food?', 'What are the names of the two locations where the dugongs are believed to be based?', 'What shape is the body of the dugong?', 'What is the snout used for feeding?']), ('answers', ['marine mammal', 'four', "Steller's sea cow", 'seagrass communities', 'Shark Bay and Moreton Bay', 'fusiform', 'benthic seagrass communities']), ('options', [['bear', 'fish', 'cow'], ['all of them', 'one', 'two'], ['a seal', 'a sea lion', 'a walrus'], ['mangrove communities', 'coastal communities', 'mangrove forests'], ['the North Atlantic and the Caribbean', 'the Philippines and South Africa', 'Australia and New Zealand'], ['long and thin', 'triangular', 'rectangular'], ['macropluralism', 'hyperpluralism', 'epilobium']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The dugong (/ˈdjuːɡɒŋ/; Dugong dugon) is a marine mammal.', 'Dugong dugon) is one of four living species of the order Sirenia, which also includes three species of manatees.', "Dugong dugon) is the only living representative of the once-diverse family Dugongidae; Dugong dugon)'s closest modern relative, Steller's sea cow (Hydrodamalis gigas), was hunted to extinction in the 18th century.", 'The dugong is largely dependent on seagrass communities for subsistence and is thus restricted to the coastal habitats which support seagrass meadows, with the largest dugong concentrations typically occurring in wide, shallow, protected areas such as bays, mangrove channels, the waters of large inshore islands and inter-reefal waters.', "The northern waters of Australia between Shark Bay and Moreton Bay are believed to be the dugong's contemporary stronghold.", 'Like all modern sirenians, the dugong has a fusiform body with no dorsal fin or hind limbs.', 'Its snout is sharply downturned, an adaptation for feeding in benthic seagrass communities.']), ('questions', ['What kind of animal is the dugong?', 'How many species of the Sirenia order exist?', 'What is the closest modern relative of Dugong dugon?', 'What do the dugong depend on for food?', 'What are the names of the two locations where the dugongs are believed to be based?', 'What shape is the body of the dugong?', 'What is the snout used for feeding?']), ('answers', ['marine mammal', 'four', "Steller's sea cow", 'seagrass communities', 'Shark Bay and Moreton Bay', 'fusiform', 'benthic seagrass communities']), ('options', [['bear', 'fish', 'cow'], ['all of them', 'one', 'two'], ['a seal', 'a sea lion', 'a walrus'], ['mangrove communities', 'coastal communities', 'mangrove forests'], ['the North Atlantic and the Caribbean', 'the Philippines and South Africa', 'Australia and New Zealand'], ['long and thin', 'triangular', 'rectangular'], ['macropluralism', 'hyperpluralism', 'epilobium']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:09.292796
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.341998
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","Ancient Greek philosophy emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,."]]
ERROR:root:orig selected_specific len6
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents3
ERROR:root:total before 0:00:04.198778
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.002376
ERROR:root:output sents fb 2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.", 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.']), ('questions', ['What civilizations did the Ancient Greeks build on?', 'What ancient Greek mathematicians helped us understand geometry?', 'Who developed some of the first astronomical models?']), ('answers', ['Egypt and Mesopotamia', 'Pythagoras, Euclid, and Archimedes', 'Ancient Greeks']), ('options', [['Persia and India', 'Greece and Rome', 'Syria and Asia Minor'], ['the Socratic Method and the teachings of Confucius', 'Euclidean Geometry and Archimedes', 'Plato, Euclidean Geometry, and Archimedes'], ['Chinese', 'Romans', 'Greeks']])])), ('Fill in the Blanks', OrderedDict([('questions', ["Hippocrates, another ancient Greek, established a  _________ , wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.", 'Hippocrates, another ancient Greek, is the most famous physician in  _________ .']), ('answers', ['medical school', 'antiquity'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:09.984333
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:19.230272
ERROR:root:payload: 'Rainfall:  The word “rainforest” implies that these are the some of the world’s wettest ecosystems. Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.  For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!) of rain in a typical year. Despite relatively consistent rain in these ecosystems, there are distinct dry seasons in some rainforests. Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe. Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.'
ERROR:root:orig input: 'Rainfall:  The word “rainforest” implies that these are the some of the world’s wettest ecosystems. Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.  For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!) of rain in a typical year. Despite relatively consistent rain in these ecosystems, there are distinct dry seasons in some rainforests. Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe. Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.'
ERROR:root:orig selected_specific len[[["Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.",{},1],["For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!)",{},2],["Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe.",{},5],["Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.",{},6]],["Rainfall:  The word “rainforest” implies that these are the some of the world’s wettest ecosystems.","Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.","For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!)","of rain in a typical year.","Despite relatively consistent rain in these ecosystems, there are distinct dry seasons in some rainforests.","Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe.","Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season."]]
ERROR:root:orig selected_specific len4
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:02.760560
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001251
ERROR:root:output sents fb 2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.', 'For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!)']), ('questions', ['What type of land receives high rainfall each year?', 'How much water do South American rainforests receive?']), ('answers', ['Rainforests', 'between 200 and 300 centimeters']), ('options', [['mountains', 'savannas', 'deserts'], ['between 50 and 100 centimeters', 'between 100 and 200 centimeters']])])), ('Fill in the Blanks', OrderedDict([('questions', [' _________  also have high humidity; about 88% during the wet season and approximately 77% in the dry season.', ' _________  and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe.']), ('answers', ['tropical rainforests', 'wet'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:07.324522
ERROR:root:api_check 0:00:00.344293
ERROR:root:payload: 'Temperature: Tropical rainforests are found near the equator, between the Tropic of Cancer (23°27’N) and the Tropic of Capricorn (23°27’S).  The equator receives direct sunlight. This steady flow of radiation produces consistently high temperatures throughout the year. A typical daytime temperature any time of year in tropical rainforests is 29°C (85°F), although temperatures can be much higher. In the majority of tropical rainforests, there is only a 5°C (9°F) difference in temperature between the seasons.'
ERROR:root:orig input: 'Temperature: Tropical rainforests are found near the equator, between the Tropic of Cancer (23°27’N) and the Tropic of Capricorn (23°27’S).  The equator receives direct sunlight. This steady flow of radiation produces consistently high temperatures throughout the year. A typical daytime temperature any time of year in tropical rainforests is 29°C (85°F), although temperatures can be much higher. In the majority of tropical rainforests, there is only a 5°C (9°F) difference in temperature between the seasons.'
ERROR:root:orig selected_specific len[[["Temperature: Tropical rainforests are found near the equator, between the Tropic of Cancer (23°27’N) and the Tropic of Capricorn (23°27’S).",{},0],["A typical daytime temperature any time of year in tropical rainforests is 29°C (85°F), although temperatures can be much higher.",{},3],["In the majority of tropical rainforests, there is only a 5°C (9°F) difference in temperature between the seasons.",{},4]],["Temperature: Tropical rainforests are found near the equator, between the Tropic of Cancer (23°27’N) and the Tropic of Capricorn (23°27’S).","The equator receives direct sunlight.","This steady flow of radiation produces consistently high temperatures throughout the year.","A typical daytime temperature any time of year in tropical rainforests is 29°C (85°F), although temperatures can be much higher.","In the majority of tropical rainforests, there is only a 5°C (9°F) difference in temperature between the seasons."]]
ERROR:root:orig selected_specific len3
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.398510
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001800
ERROR:root:output sents fb 1
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Temperature: Tropical rainforests are found near the equator, between the Tropic of Cancer (23°27’N) and the Tropic of Capricorn (23°27’S).', 'A typical daytime temperature any time of year in tropical rainforests is 29°C (85°F), although temperatures can be much higher.']), ('questions', ['Where are tropical rainforests located?', 'What is the typical daytime temperature in the rainforest?']), ('answers', ['near the equator', '29°C']), ('options', [['near the southern tip of South America', 'in the southern part of the Amazon rain forest', 'near the northern border of the Amazon rain forest'], ['30°C', '25°C', '50°C']])])), ('Fill in the Blanks', OrderedDict([('questions', ['In the majority of tropical rainforests, there is only a 5°C (9°F) difference in  _________  between the seasons.']), ('answers', ['temperature'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.909529
ERROR:root:api_check 0:00:00.327380
ERROR:root:payload: 'Temperature: Tropical rainforests are found near the equator, between the Tropic of Cancer (23°27’N) and the Tropic of Capricorn (23°27’S).  The equator receives direct sunlight. This steady flow of radiation produces consistently high temperatures throughout the year. A typical daytime temperature any time of year in tropical rainforests is 29°C (85°F), although temperatures can be much higher. In the majority of tropical rainforests, there is only a 5°C (9°F) difference in temperature between the seasons.'
ERROR:root:orig input: 'Temperature: Tropical rainforests are found near the equator, between the Tropic of Cancer (23°27’N) and the Tropic of Capricorn (23°27’S).  The equator receives direct sunlight. This steady flow of radiation produces consistently high temperatures throughout the year. A typical daytime temperature any time of year in tropical rainforests is 29°C (85°F), although temperatures can be much higher. In the majority of tropical rainforests, there is only a 5°C (9°F) difference in temperature between the seasons.'
ERROR:root:orig selected_specific len[[["Temperature: Tropical rainforests are found near the equator, between the Tropic of Cancer (23°27’N) and the Tropic of Capricorn (23°27’S).",{},0],["A typical daytime temperature any time of year in tropical rainforests is 29°C (85°F), although temperatures can be much higher.",{},3],["In the majority of tropical rainforests, there is only a 5°C (9°F) difference in temperature between the seasons.",{},4]],["Temperature: Tropical rainforests are found near the equator, between the Tropic of Cancer (23°27’N) and the Tropic of Capricorn (23°27’S).","The equator receives direct sunlight.","This steady flow of radiation produces consistently high temperatures throughout the year.","A typical daytime temperature any time of year in tropical rainforests is 29°C (85°F), although temperatures can be much higher.","In the majority of tropical rainforests, there is only a 5°C (9°F) difference in temperature between the seasons."]]
ERROR:root:orig selected_specific len3
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.386511
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001802
ERROR:root:output sents fb 1
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Temperature: Tropical rainforests are found near the equator, between the Tropic of Cancer (23°27’N) and the Tropic of Capricorn (23°27’S).', 'A typical daytime temperature any time of year in tropical rainforests is 29°C (85°F), although temperatures can be much higher.']), ('questions', ['Where are tropical rainforests located?', 'What is the typical daytime temperature in the rainforest?']), ('answers', ['near the equator', '29°C']), ('options', [['near the southern tip of South America', 'in the southern part of the Amazon rain forest', 'near the northern border of the Amazon rain forest'], ['30°C', '25°C', '50°C']])])), ('Fill in the Blanks', OrderedDict([('questions', ['In the majority of tropical rainforests, there is only a 5°C (9°F) difference in  _________  between the seasons.']), ('answers', ['temperature'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.877561
ERROR:root:api_check 0:00:00.350377
ERROR:root:payload: 'Greek city-states developed different forms of governance with very different political structures and strengths.\nGreek colonization led to the spread of the Greek language and Greek culture, but it also resulted in tensions with the neighboring Persian empire, culminating in the Persian Wars.\nAthens developed democratic institutions and a culture of philosophy, science, and culture; it emerged as a powerful state and allied with other city-states, forming the Delian League.\nResistance to Athens’ power among the other Greek city-states, particularly Sparta, prompted the Peloponnesian War.'
ERROR:root:orig input: 'Greek city-states developed different forms of governance with very different political structures and strengths.\r\nGreek colonization led to the spread of the Greek language and Greek culture, but it also resulted in tensions with the neighboring Persian empire, culminating in the Persian Wars.\r\nAthens developed democratic institutions and a culture of philosophy, science, and culture; it emerged as a powerful state and allied with other city-states, forming the Delian League.\r\nResistance to Athens’ power among the other Greek city-states, particularly Sparta, prompted the Peloponnesian War.'
ERROR:root:orig selected_specific len[[["Greek colonization led to the spread of the Greek language and Greek culture, but it also resulted in tensions with the neighboring Persian empire, culminating in the Persian Wars.",{},1],["Athens developed democratic institutions and a culture of philosophy, science, and culture; it emerged as a powerful state and allied with other city-states, forming the Delian League.",{},2]],["Greek city-states developed different forms of governance with very different political structures and strengths.","Greek colonization led to the spread of the Greek language and Greek culture, but Greek colonization also resulted in tensions with the neighboring Persian empire, culminating in the Persian Wars.","Athens developed democratic institutions and a culture of philosophy, science, and culture; Athens emerged as a powerful state and allied with other city-states, forming the Delian League.","Resistance to Athens’ power among the other Greek city-states, particularly Sparta, prompted the Peloponnesian War."]]
ERROR:root:orig selected_specific len2
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:02.030574
ERROR:root:fitb timer0:00:00.000002
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Greek colonization led to the spread of the Greek language and Greek culture, but Greek colonization also resulted in tensions with the neighboring Persian empire, culminating in the Persian Wars.', 'Athens developed democratic institutions and a culture of philosophy, science, and culture; Athens emerged as a powerful state and allied with other city-states, forming the Delian League.']), ('questions', ['What empire did Greek colonization lead to tensions with?', 'What did Athens develop?']), ('answers', ['Persian empire', 'democratic institutions and a culture of philosophy, science, and culture; it emerged as a powerful state and allied with other city-states, forming the Delian League']), ('options', [['Egyptian empire', 'Roman empire', 'Greek city-state'], ['a strict adherence to the principles of the city-state model', 'a democratic government and a belief in one god', 'military engineers who developed new weapons and tactics']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:08.245900
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: The server is currently overloaded with other requests. Sorry about that! You can retry your request, or contact support@openai.com if the error persists.
ERROR:root:api_check 0:00:00.319012
ERROR:root:payload: 'Woodrow Wilson was the 28th president of the United States. He served two terms in office, from 1913 to 1921.\nWilson was a Progressive Democrat who believed in the power of the federal government to expose corruption, regulate the economy, eliminate unethical business practices, and improve the general condition of society.\nDuring Wilson’s years in office, the US federal government was segregated and the Ku Klux Klan experienced a major revival.\nWilson’s second term in office was dominated by the First World War. Though Wilson campaigned on the slogan “He kept us out of war,” escalating German aggression ultimately made it impossible for the United States to stay out of the conflict.'
ERROR:root:orig input: 'Woodrow Wilson was the 28th president of the United States. He served two terms in office, from 1913 to 1921.\r\nWilson was a Progressive Democrat who believed in the power of the federal government to expose corruption, regulate the economy, eliminate unethical business practices, and improve the general condition of society.\r\nDuring Wilson’s years in office, the US federal government was segregated and the Ku Klux Klan experienced a major revival.\r\nWilson’s second term in office was dominated by the First World War. Though Wilson campaigned on the slogan “He kept us out of war,” escalating German aggression ultimately made it impossible for the United States to stay out of the conflict.'
ERROR:root:orig selected_specific len[[["Woodrow Wilson was the 28th president of the United States.",{},0],["He served two terms in office, from 1913 to 1921.",{},1],["Wilson was a Progressive Democrat who believed in the power of the federal government to expose corruption, regulate the economy, eliminate unethical business practices, and improve the general condition of society.",{},2]],["Woodrow Wilson was the 28th president of the United States.","Woodrow Wilson served two terms in office, from 1913 to 1921.","Wilson was a Progressive Democrat who believed in the power of the federal government to expose corruption, regulate the economy, eliminate unethical business practices, and improve the general condition of society.","During Wilson’s years in office, the US federal government was segregated and the Ku Klux Klan experienced a major revival.","Wilson’s second term in office was dominated by the First World War.","Though Wilson campaigned on the slogan “He kept us out of war,” escalating German aggression ultimately made it impossible for the United States to stay out of the conflict."]]
ERROR:root:orig selected_specific len3
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.645414
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001206
ERROR:root:output sents fb 1
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Woodrow Wilson was the 28th president of the United States.', 'Woodrow Wilson served two terms in office, from 1913 to 1921.']), ('questions', ['Who was the 28th president of the United States?', 'How many terms did Wilson serve in office?']), ('answers', ['Woodrow Wilson', 'two']), ('options', [['Lyndon Johnson', 'John F. Kennedy', 'Ronald Reagan'], ['six', 'eight', 'four']])])), ('Fill in the Blanks', OrderedDict([('questions', ['Wilson was a Progressive Democrat who believed in the power of the  _________  to expose corruption, regulate the economy, eliminate unethical business practices, and improve the general condition of society.']), ('answers', ['federal government'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:06.049653
ERROR:root:api_check 0:00:00.314231
ERROR:root:payload: 'Woodrow Wilson was the 28th president of the United States. He served two terms in office, from 1913 to 1921.\nWilson was a Progressive Democrat who believed in the power of the federal government to expose corruption, regulate the economy, eliminate unethical business practices, and improve the general condition of society.\nDuring Wilson’s years in office, the US federal government was segregated and the Ku Klux Klan experienced a major revival.\nWilson’s second term in office was dominated by the First World War. Though Wilson campaigned on the slogan “He kept us out of war,” escalating German aggression ultimately made it impossible for the United States to stay out of the conflict.'
ERROR:root:orig input: 'Woodrow Wilson was the 28th president of the United States. He served two terms in office, from 1913 to 1921.\r\nWilson was a Progressive Democrat who believed in the power of the federal government to expose corruption, regulate the economy, eliminate unethical business practices, and improve the general condition of society.\r\nDuring Wilson’s years in office, the US federal government was segregated and the Ku Klux Klan experienced a major revival.\r\nWilson’s second term in office was dominated by the First World War. Though Wilson campaigned on the slogan “He kept us out of war,” escalating German aggression ultimately made it impossible for the United States to stay out of the conflict.'
ERROR:root:orig selected_specific len[[["Woodrow Wilson was the 28th president of the United States.",{},0],["He served two terms in office, from 1913 to 1921.",{},1],["Wilson was a Progressive Democrat who believed in the power of the federal government to expose corruption, regulate the economy, eliminate unethical business practices, and improve the general condition of society.",{},2]],["Woodrow Wilson was the 28th president of the United States.","Woodrow Wilson served two terms in office, from 1913 to 1921.","Wilson was a Progressive Democrat who believed in the power of the federal government to expose corruption, regulate the economy, eliminate unethical business practices, and improve the general condition of society.","During Wilson’s years in office, the US federal government was segregated and the Ku Klux Klan experienced a major revival.","Wilson’s second term in office was dominated by the First World War.","Though Wilson campaigned on the slogan “He kept us out of war,” escalating German aggression ultimately made it impossible for the United States to stay out of the conflict."]]
ERROR:root:orig selected_specific len3
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:00.960696
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001395
ERROR:root:output sents fb 1
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Woodrow Wilson was the 28th president of the United States.', 'Woodrow Wilson served two terms in office, from 1913 to 1921.']), ('questions', ['Who was the 28th president of the United States?', 'How many terms did Wilson serve in office?']), ('answers', ['Woodrow Wilson', 'two']), ('options', [['Lyndon Johnson', 'John F. Kennedy', 'Ronald Reagan'], ['six', 'eight', 'four']])])), ('Fill in the Blanks', OrderedDict([('questions', ['Wilson was a Progressive Democrat who believed in the power of the  _________  to expose corruption, regulate the economy, eliminate unethical business practices, and improve the general condition of society.']), ('answers', ['federal government'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:07.527641
ERROR:root:api_check 0:00:00.353460
ERROR:root:payload: 'Woodrow Wilson was the 28th president of the United States. He served two terms in office, from 1913 to 1921.\nWilson was a Progressive Democrat who believed in the power of the federal government to expose corruption, regulate the economy, eliminate unethical business practices, and improve the general condition of society.\nDuring Wilson’s years in office, the US federal government was segregated and the Ku Klux Klan experienced a major revival.\nWilson’s second term in office was dominated by the First World War. Though Wilson campaigned on the slogan “He kept us out of war,” escalating German aggression ultimately made it impossible for the United States to stay out of the conflict.'
ERROR:root:orig input: 'Woodrow Wilson was the 28th president of the United States. He served two terms in office, from 1913 to 1921.\r\nWilson was a Progressive Democrat who believed in the power of the federal government to expose corruption, regulate the economy, eliminate unethical business practices, and improve the general condition of society.\r\nDuring Wilson’s years in office, the US federal government was segregated and the Ku Klux Klan experienced a major revival.\r\nWilson’s second term in office was dominated by the First World War. Though Wilson campaigned on the slogan “He kept us out of war,” escalating German aggression ultimately made it impossible for the United States to stay out of the conflict.'
ERROR:root:orig selected_specific len[[["Woodrow Wilson was the 28th president of the United States.",{},0],["He served two terms in office, from 1913 to 1921.",{},1],["Wilson was a Progressive Democrat who believed in the power of the federal government to expose corruption, regulate the economy, eliminate unethical business practices, and improve the general condition of society.",{},2]],["Woodrow Wilson was the 28th president of the United States.","Woodrow Wilson served two terms in office, from 1913 to 1921.","Wilson was a Progressive Democrat who believed in the power of the federal government to expose corruption, regulate the economy, eliminate unethical business practices, and improve the general condition of society.","During Wilson’s years in office, the US federal government was segregated and the Ku Klux Klan experienced a major revival.","Wilson’s second term in office was dominated by the First World War.","Though Wilson campaigned on the slogan “He kept us out of war,” escalating German aggression ultimately made it impossible for the United States to stay out of the conflict."]]
ERROR:root:orig selected_specific len3
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:00.886267
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.005270
ERROR:root:output sents fb 1
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Woodrow Wilson was the 28th president of the United States.', 'Woodrow Wilson served two terms in office, from 1913 to 1921.']), ('questions', ['Who was the 28th president of the United States?', 'How many terms did Wilson serve in office?']), ('answers', ['Woodrow Wilson', 'two']), ('options', [['Lyndon Johnson', 'John F. Kennedy', 'Ronald Reagan'], ['six', 'eight', 'four']])])), ('Fill in the Blanks', OrderedDict([('questions', ['Wilson was a Progressive Democrat who believed in the power of the  _________  to expose corruption, regulate the economy, eliminate unethical business practices, and improve the general condition of society.']), ('answers', ['federal government'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:08.732989
ERROR:root:api_check 0:00:00.341093
ERROR:root:payload: 'According to the legendary poet Homer, whose historical authenticity is debated, around 1200 BCE, the Mycenaeans were involved in a conflict with the city of Troy in Anatolia, called the Trojan war. As Homer wrote in his famous work, the Iliad, at the same time as the war, various foreign “Sea Peoples” began invading Mycenaean settlements, prompting the inhabitants to migrate to islands in the Aegean, Anatolia, and Cyprus. At that time, writing seemed to have disappeared, and life in the Greek peninsula and Greek islands was characterized by conflict and instability.'
ERROR:root:orig input: 'According to the legendary poet Homer, whose historical authenticity is debated, around 1200 BCE, the Mycenaeans were involved in a conflict with the city of Troy in Anatolia, called the Trojan war. As Homer wrote in his famous work, the Iliad, at the same time as the war, various foreign “Sea Peoples” began invading Mycenaean settlements, prompting the inhabitants to migrate to islands in the Aegean, Anatolia, and Cyprus. At that time, writing seemed to have disappeared, and life in the Greek peninsula and Greek islands was characterized by conflict and instability.'
ERROR:root:orig selected_specific len[[["According to the legendary poet Homer, whose historical authenticity is debated, around 1200 BCE, the Mycenaeans were involved in a conflict with the city of Troy in Anatolia, called the Trojan war.",{},0],["As Homer wrote in his famous work, the Iliad, at the same time as the war, various foreign “Sea Peoples” began invading Mycenaean settlements, prompting the inhabitants to migrate to islands in the Aegean, Anatolia, and Cyprus.",{},1]],["According to the legendary poet Homer, whose historical authenticity is debated, around 1200 BCE, the Mycenaeans were involved in a conflict with the city of Troy in Anatolia, called the Trojan war.","As Homer wrote in the legendary poet Homer, whose historical authenticity is debated's famous work, the Iliad, at the same time as the war, various foreign “Sea Peoples” began invading Mycenaean settlements, prompting the inhabitants to migrate to islands in the Aegean, Anatolia, and Cyprus.","At that time, writing seemed to have disappeared, and life in the Greek peninsula and Greek islands was characterized by conflict and instability."]]
ERROR:root:orig selected_specific len2
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.026883
ERROR:root:fitb timer0:00:00.000002
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['According to the legendary poet Homer, whose historical authenticity is debated, around 1200 BCE, the Mycenaeans were involved in a conflict with the city of Troy in Anatolia, called the Trojan war.', "As Homer wrote in the legendary poet Homer, whose historical authenticity is debated's famous work, the Iliad, at the same time as the war, various foreign “Sea Peoples” began invading Mycenaean settlements, prompting the inhabitants to migrate to islands in the Aegean, Anatolia, and Cyprus."]), ('questions', ['Who wrote the legendary poet?', 'What famous work by Homer is debated?']), ('answers', ['Homer', 'the Iliad']), ('options', [['Homeric Chief of the Nation', 'Plato', 'Virgil'], ['the Aeneid', 'the Iliad and the Odyssey', 'the Odyssey']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:03.764539
ERROR:root:api_check 0:00:00.348700
ERROR:root:payload: 'In the Kingdom of Thrace, during the reign of Lysimachus—a successor of Alexander the Great who lived from 361 BCE to 281 BCE—an interesting coin was issued. This coin, which featured the head of Alexander the Great with ram’s horns on either side of his crown, was issued in the ancient city of Parium, in the northwestern region of modern-day Turkey. The horns were the symbol of the Egyptian god Amun—or Zeus, who is often conflated with Amun—from whom Alexander claimed descent. Flanked with these godlike horns, Alexander attained the status of a deity.'
ERROR:root:orig input: 'In the Kingdom of Thrace, during the reign of Lysimachus—a successor of Alexander the Great who lived from 361 BCE to 281 BCE—an interesting coin was issued. This coin, which featured the head of Alexander the Great with ram’s horns on either side of his crown, was issued in the ancient city of Parium, in the northwestern region of modern-day Turkey. The horns were the symbol of the Egyptian god Amun—or Zeus, who is often conflated with Amun—from whom Alexander claimed descent. Flanked with these godlike horns, Alexander attained the status of a deity.'
ERROR:root:orig selected_specific len[[["In the Kingdom of Thrace, during the reign of Lysimachus—a successor of Alexander the Great who lived from 361 BCE to 281 BCE—an interesting coin was issued.",{},0],["This coin, which featured the head of Alexander the Great with ram’s horns on either side of his crown, was issued in the ancient city of Parium, in the northwestern region of modern-day Turkey.",{},1],["The horns were the symbol of the Egyptian god Amun—or Zeus, who is often conflated with Amun—from whom Alexander claimed descent.",{},2],["Flanked with these godlike horns, Alexander attained the status of a deity.",{},3]],["In the Kingdom of Thrace, during the reign of Lysimachus—a successor of Alexander the Great who lived from 361 BCE to 281 BCE—an interesting coin was issued.","This coin, which featured the head of Alexander the Great with ram’s horns on either side of Alexander the Great's crown, was issued in the ancient city of Parium, in the northwestern region of modern-day Turkey.","The horns were the symbol of the Egyptian god Amun—or Zeus, who is often conflated with Amun—from whom Alexander claimed descent.","Flanked with ram’s horns, Alexander attained the status of a deity."]]
ERROR:root:orig selected_specific len4
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.113768
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.006614
ERROR:root:output sents fb 2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['In the Kingdom of Thrace, during the reign of Lysimachus—a successor of Alexander the Great who lived from 361 BCE to 281 BCE—an interesting coin was issued.', "This coin, which featured the head of Alexander the Great with ram’s horns on either side of Alexander the Great's crown, was issued in the ancient city of Parium, in the northwestern region of modern-day Turkey."]), ('questions', ['Who was the ruler of Thrace?', 'What was the head of Alexander the Great on the coin?']), ('answers', ['Lysimachus—a successor of Alexander the Great who lived from 361 BCE to 281 BCE', 'Alexander the Great with ram’s horns on either side of his crown, was issued in the ancient city of Parium, in the northwestern region of modern-day Turkey']), ('options', [['Alexander the Great—a famous Greek warrior and conqueror', 'Nebuchadnezzar—the first king of the Neo-Babylonian Empire', 'Phoenician—a ruler of the city of Tyre in Phoenicia'], ['Alexander the Great was crowned with the Consul’s Tiara in his presence, thus completing his reforms', 'Alexander the Great was granted leave to issue gold and silver coinage in the name of the Roman Republic', 'Alexander the Great was depicted wearing the clothing of a Roman emperor']])])), ('Fill in the Blanks', OrderedDict([('questions', ['The  _________  were the symbol of the Egyptian god Amun—or Zeus, who is often conflated with Amun—from whom Alexander claimed descent.', 'Flanked with ram’s horns,  _________  attained the status of a deity.']), ('answers', ['horns', 'alexander'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.910200
ERROR:root:api_check 0:00:16.339153
ERROR:root:payload: 'In the Kingdom of Thrace, during the reign of Lysimachus—a successor of Alexander the Great who lived from 361 BCE to 281 BCE—an interesting coin was issued. This coin, which featured the head of Alexander the Great with ram’s horns on either side of his crown, was issued in the ancient city of Parium, in the northwestern region of modern-day Turkey. The horns were the symbol of the Egyptian god Amun—or Zeus, who is often conflated with Amun—from whom Alexander claimed descent. Flanked with these godlike horns, Alexander attained the status of a deity.'
ERROR:root:orig input: 'In the Kingdom of Thrace, during the reign of Lysimachus—a successor of Alexander the Great who lived from 361 BCE to 281 BCE—an interesting coin was issued. This coin, which featured the head of Alexander the Great with ram’s horns on either side of his crown, was issued in the ancient city of Parium, in the northwestern region of modern-day Turkey. The horns were the symbol of the Egyptian god Amun—or Zeus, who is often conflated with Amun—from whom Alexander claimed descent. Flanked with these godlike horns, Alexander attained the status of a deity.'
ERROR:root:orig selected_specific len[[["In the Kingdom of Thrace, during the reign of Lysimachus—a successor of Alexander the Great who lived from 361 BCE to 281 BCE—an interesting coin was issued.",{},0],["This coin, which featured the head of Alexander the Great with ram’s horns on either side of his crown, was issued in the ancient city of Parium, in the northwestern region of modern-day Turkey.",{},1],["The horns were the symbol of the Egyptian god Amun—or Zeus, who is often conflated with Amun—from whom Alexander claimed descent.",{},2],["Flanked with these godlike horns, Alexander attained the status of a deity.",{},3]],["In the Kingdom of Thrace, during the reign of Lysimachus—a successor of Alexander the Great who lived from 361 BCE to 281 BCE—an interesting coin was issued.","This coin, which featured the head of Alexander the Great with ram’s horns on either side of Alexander the Great's crown, was issued in the ancient city of Parium, in the northwestern region of modern-day Turkey.","The horns were the symbol of the Egyptian god Amun—or Zeus, who is often conflated with Amun—from whom Alexander claimed descent.","Flanked with ram’s horns, Alexander attained the status of a deity."]]
ERROR:root:orig selected_specific len4
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:02.289284
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001153
ERROR:root:output sents fb 2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['In the Kingdom of Thrace, during the reign of Lysimachus—a successor of Alexander the Great who lived from 361 BCE to 281 BCE—an interesting coin was issued.', "This coin, which featured the head of Alexander the Great with ram’s horns on either side of Alexander the Great's crown, was issued in the ancient city of Parium, in the northwestern region of modern-day Turkey."]), ('questions', ['Who was the ruler of Thrace?', 'What was the head of Alexander the Great on the coin?']), ('answers', ['Lysimachus—a successor of Alexander the Great who lived from 361 BCE to 281 BCE', 'Alexander the Great with ram’s horns on either side of his crown, was issued in the ancient city of Parium, in the northwestern region of modern-day Turkey']), ('options', [['icus—the greatest of the Roman conquistadors', 'Ptolemy—the greatest of the Greek scientists of the ancient world', 'Alexander the Great—the father of Alexander the Great'], ['Alexander the Great was worshipped as a god after his death, when he became lord of the underworld', 'Alexander the Great was crowned with the assistance of the gods, was the first of his line', 'Alexander the Great was considered divine after his death, when he became lord of the underworld']])])), ('Fill in the Blanks', OrderedDict([('questions', ['The  _________  were the symbol of the Egyptian god Amun—or Zeus, who is often conflated with Amun—from whom Alexander claimed descent.', 'Flanked with ram’s horns,  _________  attained the status of a deity.']), ('answers', ['horns', 'alexander'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.895730
ERROR:root:api_check 0:00:00.340395
ERROR:root:payload: 'In the Kingdom of Thrace, during the reign of Lysimachus—a successor of Alexander the Great who lived from 361 BCE to 281 BCE—an interesting coin was issued. This coin, which featured the head of Alexander the Great with ram’s horns on either side of his crown, was issued in the ancient city of Parium, in the northwestern region of modern-day Turkey. The horns were the symbol of the Egyptian god Amun—or Zeus, who is often conflated with Amun—from whom Alexander claimed descent. Flanked with these godlike horns, Alexander attained the status of a deity.'
ERROR:root:orig input: 'In the Kingdom of Thrace, during the reign of Lysimachus—a successor of Alexander the Great who lived from 361 BCE to 281 BCE—an interesting coin was issued. This coin, which featured the head of Alexander the Great with ram’s horns on either side of his crown, was issued in the ancient city of Parium, in the northwestern region of modern-day Turkey. The horns were the symbol of the Egyptian god Amun—or Zeus, who is often conflated with Amun—from whom Alexander claimed descent. Flanked with these godlike horns, Alexander attained the status of a deity.'
ERROR:root:orig selected_specific len[[["In the Kingdom of Thrace, during the reign of Lysimachus—a successor of Alexander the Great who lived from 361 BCE to 281 BCE—an interesting coin was issued.",{},0],["This coin, which featured the head of Alexander the Great with ram’s horns on either side of his crown, was issued in the ancient city of Parium, in the northwestern region of modern-day Turkey.",{},1],["The horns were the symbol of the Egyptian god Amun—or Zeus, who is often conflated with Amun—from whom Alexander claimed descent.",{},2],["Flanked with these godlike horns, Alexander attained the status of a deity.",{},3]],["In the Kingdom of Thrace, during the reign of Lysimachus—a successor of Alexander the Great who lived from 361 BCE to 281 BCE—an interesting coin was issued.","This coin, which featured the head of Alexander the Great with ram’s horns on either side of Alexander the Great's crown, was issued in the ancient city of Parium, in the northwestern region of modern-day Turkey.","The horns were the symbol of the Egyptian god Amun—or Zeus, who is often conflated with Amun—from whom Alexander claimed descent.","Flanked with ram’s horns, Alexander attained the status of a deity."]]
ERROR:root:orig selected_specific len4
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.690951
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001767
ERROR:root:output sents fb 2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['In the Kingdom of Thrace, during the reign of Lysimachus—a successor of Alexander the Great who lived from 361 BCE to 281 BCE—an interesting coin was issued.', "This coin, which featured the head of Alexander the Great with ram’s horns on either side of Alexander the Great's crown, was issued in the ancient city of Parium, in the northwestern region of modern-day Turkey."]), ('questions', ['Who was the ruler of Thrace?', 'What was the head of Alexander the Great on the coin?']), ('answers', ['Lysimachus—a successor of Alexander the Great who lived from 361 BCE to 281 BCE', 'Alexander the Great with ram’s horns on either side of his crown, was issued in the ancient city of Parium, in the northwestern region of modern-day Turkey']), ('options', [['Ptolemy—the great Egyptianologist of the Hellenistic period', 'Diogenes—the Greek who coined the term "live by the sword, die by the gun."', 'Alexander the Great—the father of Alexander the Great'], ['Alexander the Great was crowned with the flower of the Lydian Empire', 'he was also known as the Great Alexander', 'he was given this title because he was the first of his line']])])), ('Fill in the Blanks', OrderedDict([('questions', ['The  _________  were the symbol of the Egyptian god Amun—or Zeus, who is often conflated with Amun—from whom Alexander claimed descent.', 'Flanked with ram’s horns,  _________  attained the status of a deity.']), ('answers', ['horns', 'alexander'])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.649567
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:root:api_check 0:00:00.346804
ERROR:root:payload: 'The word “rainforest” implies that these are the some of the world’s wettest ecosystems. Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.  For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!) of rain in a typical year. Despite relatively consistent rain in these ecosystems, there are distinct dry seasons in some rainforests. Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe. Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.'
ERROR:root:orig input: 'The word “rainforest” implies that these are the some of the world’s wettest ecosystems. Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.  For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!) of rain in a typical year. Despite relatively consistent rain in these ecosystems, there are distinct dry seasons in some rainforests. Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe. Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.'
ERROR:root:orig selected_specific len[[["Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.",{},1],["For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!)",{},2],["Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe.",{},5],["Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.",{},6]],["The word “rainforest” implies that these are the some of the world’s wettest ecosystems.","Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.","For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!)","of rain in a typical year.","Despite relatively consistent rain in these ecosystems, there are distinct dry seasons in some rainforests.","Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe.","Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season."]]
ERROR:root:orig selected_specific len4
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000462
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.', 'Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe.']), ('incorrect', [['Rainforests generally receive very high rainfall each year, although the exact amount varies depending on the type of plant.', 'Rainforests generally receive very high rainfall each year, although the exact amount varies by season.', 'Rainforests generally receive very high rainfall each year, although the exact amount varies by location.'], ['Wet and dry seasons of tropical rainforests vary in intensity, and the same is true for tropical forests.', 'Wet and dry seasons of tropical rainforests vary in intensity by several inches per year.', 'Wet and dry seasons of tropical rainforests vary in intensity from mild to extreme in both the tropics and the Pacific.']])]))])
ERROR:root:Request 0:00:04.637639
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.387831
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","Ancient Greek philosophy emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents8
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.", 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.', 'Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.', "Aristotle, Plato's student, wrote about topics as varied as biology and drama."]), ('questions', ['What civilizations did the Ancient Greeks build on?', 'What ancient Greek mathematicians helped us understand geometry?', 'Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'What is the medical standard for doctors called?', 'Who turned the questioning style of Socrates into written form?', "Who was Plato's student?"]), ('answers', ['Egypt and Mesopotamia', 'Pythagoras, Euclid, and Archimedes', 'Ancient Greeks', 'Hippocrates', 'The Hippocratic oath', 'Plato', 'Aristotle']), ('options', [['Syria and Asia Minor', 'Greece and Rome', 'Persia and India'], ['Euclidean Geometry and Archimedes', 'Plato, Euclidean Geometry, and Archimedes', 'Plato and Archimedes'], ['Chinese scholars', 'Renaissance scholars', 'Native American Indians'], ['Plato', 'Galen', 'Celsus'], ['The Declaration of Independence', "The American Medical Association's code of ethics"], ['Phaedrus', 'Protagoras', "Plato's Republic"], ['Plato', 'Zeno', 'Cicerone']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:06.876157
ERROR:root:api_check 0:00:00.356592
ERROR:root:payload: 'In the ancient Greek world, religion was personal, direct, and present in all areas of life. It revolved around myths which explained the origins of mankind and gave the gods a human face. Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek.\nIndividuals in Greek society probably had varying degrees of religious belief—and some may have been skeptics—but Greek society could only function as it did because certain fundamentals were generally accepted throughout society: the gods existed, they could influence human affairs, and they welcomed and responded to acts of piety and worship.\nThe temple was the place where, on special occasions, religion took on a more formal tone. Gods were worshipped at sacred sites and temples in all major Greek communities during ceremonies carried out by priests and their attendants.\nAt first, sacred sites were merely a simple altar in a designated area, but over time massive temples were built in honor of particular gods. These temples usually housed a cult statue of the deity being honored; two famous examples are the huge statue of Athena in the Parthenon of Athens and the statue of Zeus at Olympia.'
ERROR:root:orig input: 'In the ancient Greek world, religion was personal, direct, and present in all areas of life. It revolved around myths which explained the origins of mankind and gave the gods a human face. Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek.\r\nIndividuals in Greek society probably had varying degrees of religious belief—and some may have been skeptics—but Greek society could only function as it did because certain fundamentals were generally accepted throughout society: the gods existed, they could influence human affairs, and they welcomed and responded to acts of piety and worship.\r\nThe temple was the place where, on special occasions, religion took on a more formal tone. Gods were worshipped at sacred sites and temples in all major Greek communities during ceremonies carried out by priests and their attendants.\r\nAt first, sacred sites were merely a simple altar in a designated area, but over time massive temples were built in honor of particular gods. These temples usually housed a cult statue of the deity being honored; two famous examples are the huge statue of Athena in the Parthenon of Athens and the statue of Zeus at Olympia.'
ERROR:root:orig selected_specific len[[["Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek.",{},2],["Individuals in Greek society probably had varying degrees of religious belief—and some may have been skeptics—but Greek society could only function as it did because certain fundamentals were generally accepted throughout society: the gods existed, they could influence human affairs, and they welcomed and responded to acts of piety and worship.",{},3],["Gods were worshipped at sacred sites and temples in all major Greek communities during ceremonies carried out by priests and their attendants.",{},5],["At first, sacred sites were merely a simple altar in a designated area, but over time massive temples were built in honor of particular gods.",{},6],["These temples usually housed a cult statue of the deity being honored; two famous examples are the huge statue of Athena in the Parthenon of Athens and the statue of Zeus at Olympia.",{},7]],["In the ancient Greek world, religion was personal, direct, and present in all areas of life.","religion revolved around myths which explained the origins of mankind and gave the gods a human face.","Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek.","Individuals in Greek society probably had varying degrees of religious belief—and some may have been skeptics—but Greek society could only function as Greek society did because certain fundamentals were generally accepted throughout society: the gods existed, the gods could influence human affairs, and the gods welcomed and responded to acts of piety and worship.","The temple was the place where, on special occasions, religion took on a more formal tone.","Gods were worshipped at sacred sites and temples in all major Greek communities during ceremonies carried out by priests and priests's attendants.","At first, sacred sites were merely a simple altar in a designated area, but over time massive temples were built in honor of particular gods.","massive temples usually housed a cult statue of the deity being honored; two famous examples are the huge statue of Athena in the Parthenon of Athens and the statue of Zeus at Olympia."]]
ERROR:root:orig selected_specific len5
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents5
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek.', 'Individuals in Greek society probably had varying degrees of religious belief—and some may have been skeptics—but Greek society could only function as Greek society did because certain fundamentals were generally accepted throughout society: the gods existed, the gods could influence human affairs, and the gods welcomed and responded to acts of piety and worship.', "Gods were worshipped at sacred sites and temples in all major Greek communities during ceremonies carried out by priests and priests's attendants.", 'massive temples usually housed a cult statue of the deity being honored; two famous examples are the huge statue of Athena in the Parthenon of Athens and the statue of Zeus at Olympia.']), ('questions', ['What dominated the urban landscape?', 'Why did Greek society function as it did?', 'Who carried out the worship ceremonies?', 'What famous statue is located in the Parthenon of Athens?']), ('answers', ['Temples', 'certain fundamentals were generally accepted throughout society: the gods existed, they could influence human affairs, and they welcomed and responded to acts of piety and worship', 'priests and their attendants', 'Athena']), ('options', [['spires of medieval architecture', 'domes of Islamic architecture', 'arabesque mosques'], ['the gods were considered real and present day religious practices were generally similar to those of the ancient Greeks', 'religious beliefs were not important in daily life; they were merely considered useful for organizing social events', 'Greek society was relatively small and not well organized'], ['nobles', 'a king', 'people'], ['the Eiffel Tower', 'Nike', 'the Parthenon']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:07.503137
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.348162
ERROR:root:payload: 'The painting shows a man’s miraculous healing and was painted for the School of St. John the Evangelist (a group of lay people in Venice devoted to charitable activities) as part of a series to commemorate various miracles attributed to the relic of the cross which was held at the school itself. However, this event is not the central episode of the painting, since it takes place in the wide loggia in the upper left corner. Instead, a view of the Grand Canal fills most of the canvas, and scenes from everyday life play out.\nAt the time, the Rialto Bridge, pictured in the painting, was the only bridge connecting the two sides of the Canal. Rialto was the heart of the commercial and financial life of Venice. People from all over the world came to the prominent markets. Headquarters of foreign merchants like the Germans and the Turks were close by, and at the time of Carpaccio it was possible to bump into people from many parts of the globe. A century later, in 1581, Venetian writer Francesco Sansovino described the cosmopolitan city as “a room frequented by people of different languages and countries.”\nThe scene shows people in contemporary clothing, from Venetian senators in their red robes to elegant dandies with their striped stockings and long, curly hair (they were members of theatrical associations, known as “Compagnie della calza” or “Companies of stockings”). But the most striking aspect of the picture is the depiction of the gondolas in the middle of the canal. The gondoliers are very elegantly dressed, perhaps because of the festive occasion.'
ERROR:root:orig input: 'The painting shows a man’s miraculous healing and was painted for the School of St. John the Evangelist (a group of lay people in Venice devoted to charitable activities) as part of a series to commemorate various miracles attributed to the relic of the cross which was held at the school itself. However, this event is not the central episode of the painting, since it takes place in the wide loggia in the upper left corner. Instead, a view of the Grand Canal fills most of the canvas, and scenes from everyday life play out.\r\nAt the time, the Rialto Bridge, pictured in the painting, was the only bridge connecting the two sides of the Canal. Rialto was the heart of the commercial and financial life of Venice. People from all over the world came to the prominent markets. Headquarters of foreign merchants like the Germans and the Turks were close by, and at the time of Carpaccio it was possible to bump into people from many parts of the globe. A century later, in 1581, Venetian writer Francesco Sansovino described the cosmopolitan city as “a room frequented by people of different languages and countries.”\r\nThe scene shows people in contemporary clothing, from Venetian senators in their red robes to elegant dandies with their striped stockings and long, curly hair (they were members of theatrical associations, known as “Compagnie della calza” or “Companies of stockings”). But the most striking aspect of the picture is the depiction of the gondolas in the middle of the canal. The gondoliers are very elegantly dressed, perhaps because of the festive occasion.'
ERROR:root:orig selected_specific len[[["The painting shows a man’s miraculous healing and was painted for the School of St. John the Evangelist (a group of lay people in Venice devoted to charitable activities) as part of a series to commemorate various miracles attributed to the relic of the cross which was held at the school itself.",{},0],["At the time, the Rialto Bridge, pictured in the painting, was the only bridge connecting the two sides of the Canal.",{},3],["Headquarters of foreign merchants like the Germans and the Turks were close by, and at the time of Carpaccio it was possible to bump into people from many parts of the globe.",{},6],["A century later, in 1581, Venetian writer Francesco Sansovino described the cosmopolitan city as “a room frequented by people of different languages and countries.” The scene shows people in contemporary clothing, from Venetian senators in their red robes to elegant dandies with their striped stockings and long, curly hair (they were members of theatrical associations, known as “Compagnie della calza” or “Companies of stockings”).",{},7]],["The painting shows a man’s miraculous healing and was painted for the School of St. John the Evangelist (a group of lay people in Venice devoted to charitable activities) as part of a series to commemorate various miracles attributed to the relic of the cross which was held at the school the School of St. John the Evangelist (a group of lay people in Venice devoted to charitable activities.","However, a man’s miraculous healing is not the central episode of the painting, since a man’s miraculous healing takes place in the wide loggia in the upper left corner.","Instead, a view of the Grand Canal fills most of the canvas, and scenes from everyday life play out.","At the time, the Rialto Bridge, pictured in the painting, was the only bridge connecting the two sides of the Canal.","Rialto was the heart of the commercial and financial life of Venice.","People from all over the world came to the prominent markets.","Headquarters of foreign merchants like the Germans and the Turks were close by, and at the time of Carpaccio it was possible to bump into people from many parts of the globe.","A century later, in 1581, Venetian writer Francesco Sansovino described the cosmopolitan city as “a room frequented by people of different languages and countries.” The scene shows people in contemporary clothing, from Venetian senators in Venetian senators in their red robes's red robes to elegant dandies with elegant dandies with their striped stockings and long, curly hair's striped stockings and long, curly hair (people in contemporary clothing, from Venetian senators in their red robes to elegant dandies with their striped stockings and long, curly hair were members of theatrical associations, known as “Compagnie della calza” or “Companies of stockings”).","But the most striking aspect of the picture is the depiction of the gondolas in the middle of the canal.","The gondoliers are very elegantly dressed, perhaps because of the festive occasion."]]
ERROR:root:orig selected_specific len4
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents4
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The painting shows a man’s miraculous healing and was painted for the School of St. John the Evangelist (a group of lay people in Venice devoted to charitable activities) as part of a series to commemorate various miracles attributed to the relic of the cross which was held at the school the School of St. John the Evangelist (a group of lay people in Venice devoted to charitable activities.', 'At the time, the Rialto Bridge, pictured in the painting, was the only bridge connecting the two sides of the Canal.', 'Headquarters of foreign merchants like the Germans and the Turks were close by, and at the time of Carpaccio it was possible to bump into people from many parts of the globe.', "A century later, in 1581, Venetian writer Francesco Sansovino described the cosmopolitan city as “a room frequented by people of different languages and countries.” The scene shows people in contemporary clothing, from Venetian senators in Venetian senators in their red robes's red robes to elegant dandies with elegant dandies with their striped stockings and long, curly hair's striped stockings and long, curly hair (people in contemporary clothing, from Venetian senators in their red robes to elegant dandies with their striped stockings and long, curly hair were members of theatrical associations, known as “Compagnie della calza” or “Companies of stockings”)."]), ('questions', ['What school was the painting painted for?', 'What bridge connected the canals?', 'What foreign merchants were located near Carpaccio?', 'Who described Venice as a room frequented by people of different languages and countries?']), ('answers', ['School of St. John the Evangelist', 'Rialto Bridge', 'the Germans and the Turks', 'Francesco Sansovino']), ('options', [['School of St. Andrew the Great', 'Palace of the Holy Roman Emperor', 'School of St. George the Martyr'], ['Ponte della Pia', 'Ponte della Signora'], ['the French and the English', 'the Venetians and the Greeks', 'the Hungarians and the Turks'], ['Tommaso Campanella', 'Canaletto', 'Giambattista Vico']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:12.914416
ERROR:root:api_check 0:00:19.969297
ERROR:root:payload: 'Black boatmen also appear on the painting by Carpaccio at the Getty Museum, Hunting on the Lagoon. This painting depicts a scene of Venetian bird hunters who use clay pellets rather than arrows in order to stun the birds and not damage their plumage.\nWills and other records show that it was common in Venice for slaves to be freed at the death of an owner, or after a number of years of service. In recent research Kate Lowe has revealed that in Venice several slaves, after they were freed, worked as gondoliers or “traghettatori” (ferryman) carrying people back and forth across the canal.\nWhile studying the charters of several guilds of ferryman (known as “Mariegole”), Lowe discovered that several Black Africans were included and that some of them held the top ranks of these associations. In 1514 the “Gastaldo” (the top officer) of one of these associations of ferryman was identified as “ser Giovanni ethiops” which translates to “Mr. John from Ethiopia.” He was an African man who had previously been enslaved and was employed by the patrician Cappello household. His story traces a path from domestic slave to freed gondolier, who held a position of authority over his peers within the Guild.'
ERROR:root:orig input: 'Black boatmen also appear on the painting by Carpaccio at the Getty Museum, Hunting on the Lagoon. This painting depicts a scene of Venetian bird hunters who use clay pellets rather than arrows in order to stun the birds and not damage their plumage.\r\nWills and other records show that it was common in Venice for slaves to be freed at the death of an owner, or after a number of years of service. In recent research Kate Lowe has revealed that in Venice several slaves, after they were freed, worked as gondoliers or “traghettatori” (ferryman) carrying people back and forth across the canal.\r\nWhile studying the charters of several guilds of ferryman (known as “Mariegole”), Lowe discovered that several Black Africans were included and that some of them held the top ranks of these associations. In 1514 the “Gastaldo” (the top officer) of one of these associations of ferryman was identified as “ser Giovanni ethiops” which translates to “Mr. John from Ethiopia.” He was an African man who had previously been enslaved and was employed by the patrician Cappello household. His story traces a path from domestic slave to freed gondolier, who held a position of authority over his peers within the Guild.'
ERROR:root:orig selected_specific len[[["Black boatmen also appear on the painting by Carpaccio at the Getty Museum, Hunting on the Lagoon.",{},0],["This painting depicts a scene of Venetian bird hunters who use clay pellets rather than arrows in order to stun the birds and not damage their plumage.",{},1],["Wills and other records show that it was common in Venice for slaves to be freed at the death of an owner, or after a number of years of service.",{},2],["In recent research Kate Lowe has revealed that in Venice several slaves, after they were freed, worked as gondoliers or “traghettatori” (ferryman) carrying people back and forth across the canal.",{},3],["While studying the charters of several guilds of ferryman (known as “Mariegole”), Lowe discovered that several Black Africans were included and that some of them held the top ranks of these associations.",{},4],["In 1514 the “Gastaldo” (the top officer) of one of these associations of ferryman was identified as “ser Giovanni ethiops” which translates to “Mr.",{},5],["John from Ethiopia.” He was an African man who had previously been enslaved and was employed by the patrician Cappello household.",{},6],["His story traces a path from domestic slave to freed gondolier, who held a position of authority over his peers within the Guild.",{},7]],["Black boatmen also appear on the painting by Carpaccio at the Getty Museum, Hunting on the Lagoon.","the painting by Carpaccio at the Getty Museum, Hunting on the Lagoon depicts a scene of Venetian bird hunters who use clay pellets rather than arrows in order to stun the birds and not damage the birds's plumage.","Wills and other records show that it was common in Venice for slaves to be freed at the death of an owner, or after a number of years of service.","In recent research Kate Lowe has revealed that in Venice several slaves, after several slaves were freed, worked as gondoliers or “traghettatori” (ferryman) carrying people back and forth across the canal.","While studying the charters of several guilds of ferryman (known as “Mariegole”), Lowe discovered that several Black Africans were included and that some of several Black Africans held the top ranks of several guilds of ferryman (known as “Mariegole”.","In 1514 the “Gastaldo” (the top officer) of one of several guilds of ferryman (known as “Mariegole” was identified as “ser Giovanni ethiops” which translates to “Mr.","John from Ethiopia.” the “Gastaldo” (the top officer) of one of these associations of ferryman was an African man who had previously been enslaved and was employed by the patrician Cappello household.","the “Gastaldo” (the top officer) of one of these associations of ferryman's story traces a path from domestic slave to freed gondolier, who held a position of authority over the “Gastaldo” (the top officer) of one of these associations of ferryman's peers within the Guild."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents8
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Black boatmen also appear on the painting by Carpaccio at the Getty Museum, Hunting on the Lagoon.', "the painting by Carpaccio at the Getty Museum, Hunting on the Lagoon depicts a scene of Venetian bird hunters who use clay pellets rather than arrows in order to stun the birds and not damage the birds's plumage.", 'Wills and other records show that it was common in Venice for slaves to be freed at the death of an owner, or after a number of years of service.', 'In recent research Kate Lowe has revealed that in Venice several slaves, after several slaves were freed, worked as gondoliers or “traghettatori” (ferryman) carrying people back and forth across the canal.', 'While studying the charters of several guilds of ferryman (known as “Mariegole”), Lowe discovered that several Black Africans were included and that some of several Black Africans held the top ranks of several guilds of ferryman (known as “Mariegole”.', 'In 1514 the “Gastaldo” (the top officer) of one of several guilds of ferryman (known as “Mariegole” was identified as “ser Giovanni ethiops” which translates to “Mr.', 'John from Ethiopia.” the “Gastaldo” (the top officer) of one of these associations of ferryman was an African man who had previously been enslaved and was employed by the patrician Cappello household.']), ('questions', ['What other group of people appear in the painting by Carpaccio?', 'What do Venetian bird hunters use instead of arrows?', 'What is the common time for slaves to be freed in Venice?', 'What did the slaves work as in Venice?', 'What were the charters of several ferryman guilds known as?', 'What was the name of the top officer of the guild?', 'Where was John from?']), ('answers', ['Black boatmen', 'clay pellets', 'Wills and other records show that it was common in Venice for slaves to be freed at the death of an owner', 'gondoliers or “traghettatori” (ferryman', 'Mariegole', 'ser Giovanni ethiops', 'Ethiopia']), ('options', [['soldiers', 'nobles', 'peasants'], ['eels', 'fishhooks', 'lures'], ['Most slaves in Venice were from the southern part of Italy', 'It is difficult to tell from ancient records whether slaves were really freed or whether they were simply postponed for later sale', 'Wills and other records show that slaves in Venice were often transported from one city to another'], ['military engineers', 'personal servants', 'dockworkers'], ['Pico', 'Salerno', 'Filipino'], ['ser Andrea', 'ser Rinaldo', 'ser Filippo'], ['Kenya', 'Ghana', 'Nigeria']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:14.425312
ERROR:root:api_check 0:00:42.893044
ERROR:root:payload: 'The Indus River Valley Civilization, 3300-1300 BCE, also known as the Harappan Civilization, extended from modern-day northeast Afghanistan to Pakistan and northwest India.\nImportant innovations of this civilization include standardized weights and measures, seal carving, and metallurgy with copper, bronze, lead, and tin.\nLittle is understood about the Indus script, and as a result, little is known about the Indus River Valley Civilization’s institutions and systems of governance.\nThe civilization likely ended due to climate change and migration.\nIn 1856, British colonial officials in India were busy monitoring the construction of a railway connecting the cities of Lahore and Karachi in modern-day Pakistan along the Indus River valley.\nAs they continued to work, some of the laborers discovered many fire-baked bricks lodged in the dry terrain. There were hundreds of thousands of fairly uniform bricks, which seemed to be quite old. Nonetheless, the workers used some of them to construct the road bed, unaware that they were using ancient artifacts. They soon found among the bricks stone artifacts made of soapstone, featuring intricate artistic markings.'
ERROR:root:orig input: 'The Indus River Valley Civilization, 3300-1300 BCE, also known as the Harappan Civilization, extended from modern-day northeast Afghanistan to Pakistan and northwest India.\r\nImportant innovations of this civilization include standardized weights and measures, seal carving, and metallurgy with copper, bronze, lead, and tin.\r\nLittle is understood about the Indus script, and as a result, little is known about the Indus River Valley Civilization’s institutions and systems of governance.\r\nThe civilization likely ended due to climate change and migration.\r\nIn 1856, British colonial officials in India were busy monitoring the construction of a railway connecting the cities of Lahore and Karachi in modern-day Pakistan along the Indus River valley.\r\nAs they continued to work, some of the laborers discovered many fire-baked bricks lodged in the dry terrain. There were hundreds of thousands of fairly uniform bricks, which seemed to be quite old. Nonetheless, the workers used some of them to construct the road bed, unaware that they were using ancient artifacts. They soon found among the bricks stone artifacts made of soapstone, featuring intricate artistic markings.'
ERROR:root:orig selected_specific len[[["The Indus River Valley Civilization, 3300-1300 BCE, also known as the Harappan Civilization, extended from modern-day northeast Afghanistan to Pakistan and northwest India.",{},0],["Important innovations of this civilization include standardized weights and measures, seal carving, and metallurgy with copper, bronze, lead, and tin.",{},1],["In 1856, British colonial officials in India were busy monitoring the construction of a railway connecting the cities of Lahore and Karachi in modern-day Pakistan along the Indus River valley.",{},4],["As they continued to work, some of the laborers discovered many fire-baked bricks lodged in the dry terrain.",{},5],["They soon found among the bricks stone artifacts made of soapstone, featuring intricate artistic markings.",{},8]],["The Indus River Valley Civilization, 3300-1300 BCE, also known as the Harappan Civilization, extended from modern-day northeast Afghanistan to Pakistan and northwest India.","Important innovations of The Indus River Valley Civilization, 3300-1300 BCE, also known as the Harappan Civilization include standardized weights and measures, seal carving, and metallurgy with copper, bronze, lead, and tin.","Little is understood about the Indus script, and as a result, little is known about the Indus River Valley Civilization’s institutions and systems of governance.","The civilization likely ended due to climate change and migration.","In 1856, British colonial officials in India were busy monitoring the construction of a railway connecting the cities of Lahore and Karachi in modern-day Pakistan along the Indus River valley.","As British colonial officials in India continued to work, some of the laborers discovered many fire-baked bricks lodged in the dry terrain.","There were hundreds of thousands of fairly uniform bricks, which seemed to be quite old.","Nonetheless, the workers used some of hundreds of thousands of fairly uniform bricks, which seemed to be quite old to construct the road bed, unaware that British colonial officials in India were using ancient artifacts.","British colonial officials in India soon found among the bricks stone artifacts made of soapstone, featuring intricate artistic markings."]]
ERROR:root:orig selected_specific len5
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents5
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The Indus River Valley Civilization, 3300-1300 BCE, also known as the Harappan Civilization, extended from modern-day northeast Afghanistan to Pakistan and northwest India.', 'Important innovations of The Indus River Valley Civilization, 3300-1300 BCE, also known as the Harappan Civilization include standardized weights and measures, seal carving, and metallurgy with copper, bronze, lead, and tin.', 'In 1856, British colonial officials in India were busy monitoring the construction of a railway connecting the cities of Lahore and Karachi in modern-day Pakistan along the Indus River valley.', 'As British colonial officials in India continued to work, some of the laborers discovered many fire-baked bricks lodged in the dry terrain.', 'British colonial officials in India soon found among the bricks stone artifacts made of soapstone, featuring intricate artistic markings.']), ('questions', ['When was the Indus River Valley Civilization?', 'What are some of the innovations of the Harappan Civilization?', 'When did British officials in India begin monitoring the construction of a railway?', 'What did British colonists find in the dry terrain?', 'What material were the bricks stone artifacts made of?']), ('answers', ['3300-1300 BCE', 'standardized weights and measures, seal carving', '1856', 'fire-baked bricks', 'soapstone']), ('options', [['1300-700 BCE', '1800-700 BCE'], ['polytheistic beliefs', 'irrigation systems', 'coinage of the currency'], ['1891', '1876', '1885'], ['oil', 'iron ore', 'coal'], ['travertine', 'block of slate', 'clay']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:06.745154
ERROR:root:api_check 0:00:00.352284
ERROR:root:payload: "Malware is malicious software that's unknowingly installed onto a computer. Once installed, malware often tries to steal personal data or make money off of the user. Fortunately, there are multiple ways that users can protect their computing devices and networks.\nA trojan horse is a harmful program that masquerades as a legitimate program, and is often downloaded onto computers by unknowing users. Once the user runs the program, it can start inflicting its damage.\nA virus is self-replicating: it contains code that copies itself into other files on the system. Viruses may hide in the code of a legitimate program.\nA worm is also self-replicating, but it copies itself into entirely different computers within the network. It can travel along networked protocols such as email, file sharing, or instant messaging. Many worms don't take any harmful action besides replicate themselves, but even those worms can disrupt a network by hogging bandwidth.\nThe most dangerous malware uses all three techniques, such as the ILOVEYOU worm that infected over 10 million personal Windows computers in the year 2000."
ERROR:root:orig input: "Malware is malicious software that's unknowingly installed onto a computer. Once installed, malware often tries to steal personal data or make money off of the user. Fortunately, there are multiple ways that users can protect their computing devices and networks.\r\nA trojan horse is a harmful program that masquerades as a legitimate program, and is often downloaded onto computers by unknowing users. Once the user runs the program, it can start inflicting its damage.\r\nA virus is self-replicating: it contains code that copies itself into other files on the system. Viruses may hide in the code of a legitimate program.\r\nA worm is also self-replicating, but it copies itself into entirely different computers within the network. It can travel along networked protocols such as email, file sharing, or instant messaging. Many worms don't take any harmful action besides replicate themselves, but even those worms can disrupt a network by hogging bandwidth.\r\nThe most dangerous malware uses all three techniques, such as the ILOVEYOU worm that infected over 10 million personal Windows computers in the year 2000."
ERROR:root:orig selected_specific len[[["A trojan horse is a harmful program that masquerades as a legitimate program, and is often downloaded onto computers by unknowing users.",{},3],["The most dangerous malware uses all three techniques, such as the ILOVEYOU worm that infected over 10 million personal Windows computers in the year 2000.",{},10]],["Malware is malicious software that's unknowingly installed onto a computer.","Once installed, malware often tries to steal personal data or make money off of the user.","Fortunately, there are multiple ways that users can protect users's computing devices and networks.","A trojan horse is a harmful program that masquerades as a legitimate program, and is often downloaded onto computers by unknowing users.","Once the user runs the program, A trojan horse can start inflicting A trojan horse's damage.","A virus is self-replicating: A virus contains code that copies A virus into other files on the system.","Viruses may hide in the code of a legitimate program.","A worm is also self-replicating, but A worm copies A worm into entirely different computers within the network.","A worm can travel along networked protocols such as email, file sharing, or instant messaging.","Many worms don't take any harmful action besides replicate Many worms, but even those worms can disrupt a network by hogging bandwidth.","The most dangerous malware uses all three techniques, such as the ILOVEYOU worm that infected over 10 million personal Windows computers in the year 2000."]]
ERROR:root:orig selected_specific len2
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['A trojan horse is a harmful program that masquerades as a legitimate program, and is often downloaded onto computers by unknowing users.', 'The most dangerous malware uses all three techniques, such as the ILOVEYOU worm that infected over 10 million personal Windows computers in the year 2000.']), ('questions', ['What is a harmful program that masquerades as legitimate?', 'How many Windows computers were infected by the ILOVEYOU worm?']), ('answers', ['trojan horse', 'over 10 million']), ('options', [['eavesdropping', 'computer viruses', 'phishing'], ['5 million', '1 million', '100,000']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:06.688511
ERROR:root:api_check 0:00:00.371641
ERROR:root:payload: 'When the United States started passing comprehensive environmental laws in the late 1960s and early 1970s, a typical law specified how much pollution could be emitted out of a smokestack or a drainpipe. These laws also imposed penalties if pollution limits were exceeded. Other laws required the installation of certain equipment—for example, on automobile tailpipes or on smokestacks—to reduce pollution.\nBoth laws that specify allowable quantities of pollution and laws that detail which pollution-control technologies must be used fall under the category of command-and-control regulation. In effect, command-and-control regulation requires that firms increase their costs by installing anti-pollution equipment; firms are thus required to take the social costs of pollution into account.\nCommand-and-control regulation has been highly successful in protecting and cleaning up the US environment. In 1970, the Environmental Protection Agency was created to oversee all environmental laws. In the same year, the Clean Air Act was enacted to address air pollution. Just two years later, in 1972, Congress passed and the president signed the far-reaching Clean Water Act. These command-and-control environmental laws, and their amendments and updates, have been largely responsible for cleaner air and water in the United States in recent decades. However, economists have pointed out three difficulties with command-and-control environmental regulation.'
ERROR:root:orig input: 'When the United States started passing comprehensive environmental laws in the late 1960s and early 1970s, a typical law specified how much pollution could be emitted out of a smokestack or a drainpipe. These laws also imposed penalties if pollution limits were exceeded. Other laws required the installation of certain equipment—for example, on automobile tailpipes or on smokestacks—to reduce pollution.\r\nBoth laws that specify allowable quantities of pollution and laws that detail which pollution-control technologies must be used fall under the category of command-and-control regulation. In effect, command-and-control regulation requires that firms increase their costs by installing anti-pollution equipment; firms are thus required to take the social costs of pollution into account.\r\nCommand-and-control regulation has been highly successful in protecting and cleaning up the US environment. In 1970, the Environmental Protection Agency was created to oversee all environmental laws. In the same year, the Clean Air Act was enacted to address air pollution. Just two years later, in 1972, Congress passed and the president signed the far-reaching Clean Water Act. These command-and-control environmental laws, and their amendments and updates, have been largely responsible for cleaner air and water in the United States in recent decades. However, economists have pointed out three difficulties with command-and-control environmental regulation.'
ERROR:root:orig selected_specific len[[["When the United States started passing comprehensive environmental laws in the late 1960s and early 1970s, a typical law specified how much pollution could be emitted out of a smokestack or a drainpipe.",{},0],["In 1970, the Environmental Protection Agency was created to oversee all environmental laws.",{},6],["In the same year, the Clean Air Act was enacted to address air pollution.",{},7],["Just two years later, in 1972, Congress passed and the president signed the far-reaching Clean Water Act.",{},8]],["When the United States started passing comprehensive environmental laws in the late 1960s and early 1970s, a typical law specified how much pollution could be emitted out of a smokestack or a drainpipe.","comprehensive environmental laws also imposed penalties if pollution limits were exceeded.","Other laws required the installation of certain equipment—for example, on automobile tailpipes or on smokestacks—to reduce pollution.","Both laws that specify allowable quantities of pollution and laws that detail which pollution-control technologies must be used fall under the category of command-and-control regulation.","In effect, command-and-control regulation requires that firms increase firms's costs by installing anti-pollution equipment; firms are thus required to take the social costs of pollution into account.","Command-and-control regulation has been highly successful in protecting and cleaning up the US environment.","In 1970, the Environmental Protection Agency was created to oversee all environmental laws.","In the same year, the Clean Air Act was enacted to address air pollution.","Just two years later, in 1972, Congress passed and the president signed the far-reaching Clean Water Act.","These command-and-control environmental laws, and their amendments and updates, have been largely responsible for cleaner air and water in the United States in recent decades.","However, economists have pointed out three difficulties with command-and-control environmental regulation."]]
ERROR:root:orig selected_specific len4
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents4
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['In 1970, the Environmental Protection Agency was created to oversee all environmental laws.', 'In the same year, the Clean Air Act was enacted to address air pollution.']), ('questions', ['What agency was created to oversee environmental laws?', 'What act was passed in the same year?']), ('answers', ['1970, the Environmental Protection Agency', 'Clean Air Act']), ('options', [['1980, the Department of Transportation', '1980, the Department of Energy', '1970, the Department of the Interior'], ['Environmental Protection Act', 'None of the above is correct', 'Wagner Act']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.490048
ERROR:root:api_check 0:00:00.346019
ERROR:root:payload: 'Cricket is a bat-and-ball game played between two teams of eleven players each on a field at the centre of which is a 22-yard (20-metre) pitch with a wicket at each end, each comprising two bails balanced on three stumps. The game proceeds when a player on the fielding team, called the bowler, "bowls" (propels) the ball from one end of the pitch towards the wicket at the other end, with an "over" being completed once they have legally done so six times. The batting side has one player at each end of the pitch, with the player at the opposite end of the pitch from the bowler aiming to strike the ball with a bat. The batting side scores runs either when the ball reaches the boundary of the field, or when the two batters swap ends of the pitch, which results in one run. The fielding side\'s aim is to prevent run-scoring and dismiss each batter (so they are "out", and are said to have "lost their wicket"). Means of dismissal include being bowled, when the bowled ball hits the stumps and dislodges the bails, and by the fielding side either catching a hit ball before it touches the ground, or hitting a wicket with the ball before a batter can cross the crease line in front of the wicket to complete a run. When ten batters have been dismissed, the innings ends and the teams swap roles. The game is adjudicated by two umpires, aided by a third umpire and match referee in international matches.'
ERROR:root:orig input: 'Cricket is a bat-and-ball game played between two teams of eleven players each on a field at the centre of which is a 22-yard (20-metre) pitch with a wicket at each end, each comprising two bails balanced on three stumps. The game proceeds when a player on the fielding team, called the bowler, "bowls" (propels) the ball from one end of the pitch towards the wicket at the other end, with an "over" being completed once they have legally done so six times. The batting side has one player at each end of the pitch, with the player at the opposite end of the pitch from the bowler aiming to strike the ball with a bat. The batting side scores runs either when the ball reaches the boundary of the field, or when the two batters swap ends of the pitch, which results in one run. The fielding side\'s aim is to prevent run-scoring and dismiss each batter (so they are "out", and are said to have "lost their wicket"). Means of dismissal include being bowled, when the bowled ball hits the stumps and dislodges the bails, and by the fielding side either catching a hit ball before it touches the ground, or hitting a wicket with the ball before a batter can cross the crease line in front of the wicket to complete a run. When ten batters have been dismissed, the innings ends and the teams swap roles. The game is adjudicated by two umpires, aided by a third umpire and match referee in international matches.'
ERROR:root:orig selected_specific len[[["Cricket is a bat-and-ball game played between two teams of eleven players each on a field at the centre of which is a 22-yard (20-metre) pitch with a wicket at each end, each comprising two bails balanced on three stumps.",{},0],["The game proceeds when a player on the fielding team, called the bowler, \"bowls\" (propels) the ball from one end of the pitch towards the wicket at the other end, with an \"over\" being completed once they have legally done so six times.",{},1],["The batting side has one player at each end of the pitch, with the player at the opposite end of the pitch from the bowler aiming to strike the ball with a bat.",{},2],["The batting side scores runs either when the ball reaches the boundary of the field, or when the two batters swap ends of the pitch, which results in one run.",{},3],["The fielding side's aim is to prevent run-scoring and dismiss each batter (so they are \"out\", and are said to have \"lost their wicket\").",{},4],["Means of dismissal include being bowled, when the bowled ball hits the stumps and dislodges the bails, and by the fielding side either catching a hit ball before it touches the ground, or hitting a wicket with the ball before a batter can cross the crease line in front of the wicket to complete a run.",{},5]],["Cricket is a bat-and-ball game played between two teams of eleven players each on a field at the centre of which is a 22-yard (20-metre) pitch with a wicket at each end, each comprising two bails balanced on three stumps.","The game proceeds when a player on the fielding team, called the bowler, \"bowls\" (propels) the ball from one end of the pitch towards the wicket at the other end, with an \"over\" being completed once two teams of eleven players each have legally done so six times.","The batting side has one player at each end of the pitch, with the player at the opposite end of the pitch from the bowler aiming to strike the ball with a bat.","The batting side scores runs either when the ball reaches the boundary of the field, or when the two batters swap ends of the pitch, which results in one run.","The fielding side's aim is to prevent run-scoring and dismiss each batter (so each batter are \"out\", and are said to have \"lost each batter's wicket\").","Means of dismissal include being bowled, when the bowled ball hits the stumps and dislodges the bails, and by the fielding side either catching a hit ball before a hit ball touches the ground, or hitting a wicket with the ball before a batter can cross the crease line in front of the wicket to complete a run.","When ten batters have been dismissed, the innings ends and the teams swap roles.","The game is adjudicated by two umpires, aided by a third umpire and match referee in international matches."]]
ERROR:root:orig selected_specific len6
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents6
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Cricket is a bat-and-ball game played between two teams of eleven players each on a field at the centre of which is a 22-yard (20-metre) pitch with a wicket at each end, each comprising two bails balanced on three stumps.', 'The batting side has one player at each end of the pitch, with the player at the opposite end of the pitch from the bowler aiming to strike the ball with a bat.', 'The batting side scores runs either when the ball reaches the boundary of the field, or when the two batters swap ends of the pitch, which results in one run.', 'The fielding side\'s aim is to prevent run-scoring and dismiss each batter (so each batter are "out", and are said to have "lost each batter\'s wicket").', 'Means of dismissal include being bowled, when the bowled ball hits the stumps and dislodges the bails, and by the fielding side either catching a hit ball before a hit ball touches the ground, or hitting a wicket with the ball before a batter can cross the crease line in front of the wicket to complete a run.']), ('questions', ['How many players are in a team?', 'How many players are on the batting side?', 'When does the batting side score runs?', "What is the fielding side's goal?", 'What is one way of dismissal?']), ('answers', ['eleven', 'one', 'when the ball reaches the boundary of the field, or when the two batters swap ends of the pitch', 'dismiss each batter', 'being bowled, when the bowled ball hits the stumps and dislodges the bails']), ('options', [['two', 'three', 'one'], ['four', 'two', 'six'], ['when the batter hits a home run', 'when the batter strikes out', 'when the runner on first base is put out'], ["score each batter's run-off home run", "score each batter's walk-off home run", 'reduce the number of bases each batter can hit'], ["being yorked, when the umpire's decision is countermanded", 'getting a second wind and returning to form', 'losing a game in which you were leading']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:06.568333
ERROR:root:api_check 0:00:00.368914
ERROR:root:payload: "India has a parliamentary system as defined by its constitution, with power distributed between the central government and the states.\n\nThe President of India is the ceremonial head of the country and supreme commander-in-chief for all defence forces in India.\n\nHowever, it is the Prime Minister of India, who is the leader of the party or political alliance having a majority in the national elections to the Lok Sabha. The Prime Minister is the leader of the executive branch of the Government of India. The Prime Minister is the chief adviser to the President of India and the head of the Union Council of Ministers.\n\nIndia is regionally divided into States (and Union Territories) and each State has a Chief Minister who is the leader of the party or political alliance that has won a majority in the regional elections otherwise known as State Assembly Elections that exercises executive powers in that State. The respective State's Chief Minister has executive powers within the State and works jointly with the Prime Minister of India or their ministers on matters that require both State and Central attention. Some Union Territories also elect an Assembly and have a territorial government and other (mainly smaller) Union Territories are governed by a person appointed by the President of India.\n\nThe President of India monitors the rule of law through their appointed governors in each State and on their recommendation can take over the executive powers from the Chief Minister of the State, temporarily when the elected representatives of the State government has failed to create a peaceful environment and has deteriorated into chaos. The President of India dissolves the existing State government if necessary, and a new election is conducted."
ERROR:root:orig input: "India has a parliamentary system as defined by its constitution, with power distributed between the central government and the states.\r\n\r\nThe President of India is the ceremonial head of the country and supreme commander-in-chief for all defence forces in India.\r\n\r\nHowever, it is the Prime Minister of India, who is the leader of the party or political alliance having a majority in the national elections to the Lok Sabha. The Prime Minister is the leader of the executive branch of the Government of India. The Prime Minister is the chief adviser to the President of India and the head of the Union Council of Ministers.\r\n\r\nIndia is regionally divided into States (and Union Territories) and each State has a Chief Minister who is the leader of the party or political alliance that has won a majority in the regional elections otherwise known as State Assembly Elections that exercises executive powers in that State. The respective State's Chief Minister has executive powers within the State and works jointly with the Prime Minister of India or their ministers on matters that require both State and Central attention. Some Union Territories also elect an Assembly and have a territorial government and other (mainly smaller) Union Territories are governed by a person appointed by the President of India.\r\n\r\nThe President of India monitors the rule of law through their appointed governors in each State and on their recommendation can take over the executive powers from the Chief Minister of the State, temporarily when the elected representatives of the State government has failed to create a peaceful environment and has deteriorated into chaos. The President of India dissolves the existing State government if necessary, and a new election is conducted."
ERROR:root:orig selected_specific len[[["India has a parliamentary system as defined by its constitution, with power distributed between the central government and the states.",{},0],["The President of India is the ceremonial head of the country and supreme commander-in-chief for all defence forces in India.",{},1],["The Prime Minister is the chief adviser to the President of India and the head of the Union Council of Ministers.",{},4],["India is regionally divided into States (and Union Territories) and each State has a Chief Minister who is the leader of the party or political alliance that has won a majority in the regional elections otherwise known as State Assembly Elections that exercises executive powers in that State.",{},5],["The respective State's Chief Minister has executive powers within the State and works jointly with the Prime Minister of India or their ministers on matters that require both State and Central attention.",{},6],["Some Union Territories also elect an Assembly and have a territorial government and other (mainly smaller) Union Territories are governed by a person appointed by the President of India.",{},7],["The President of India monitors the rule of law through their appointed governors in each State and on their recommendation can take over the executive powers from the Chief Minister of the State, temporarily when the elected representatives of the State government has failed to create a peaceful environment and has deteriorated into chaos.",{},8],["The President of India dissolves the existing State government if necessary, and a new election is conducted.",{},9]],["India has a parliamentary system as defined by India's constitution, with power distributed between the central government and the states.","The President of India is the ceremonial head of the country and supreme commander-in-chief for all defence forces in India.","However, it is the Prime Minister of India, who is the leader of the party or political alliance having a majority in the national elections to the Lok Sabha.","The Prime Minister is the leader of the executive branch of the Government of India.","The Prime Minister is the chief adviser to the President of India and the head of the Union Council of Ministers.","India is regionally divided into States (and Union Territories) and each State has a Chief Minister who is the leader of the party or political alliance that has won a majority in the regional elections otherwise known as State Assembly Elections that exercises executive powers in Territories) respective State's Chief Minister has executive powers within the State and works jointly with the Prime Minister of India or their ministers on matters that require both State and Central attention.","Some Union Territories also elect an Assembly and have a territorial government and other (mainly smaller) Union Territories are governed by a person appointed by the President of India.","The President of India monitors the rule of law through the Chief governors in  The President of State and on their recommendation can take over the executive powers from the Chief Minister of the State, temporarily when the elected representatives of the State government has failed to create a peaceful environment and has deteriorated into chaos.","The President of India dissolves the existing State government if necessary, and a new election is conducted."]]
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 843, in new
    assert item[2]<len(coref_sents)
AssertionError
ERROR:root:api_check 0:00:00.325126
ERROR:root:payload: 'The Republic of Kiribati is a group of thirty-three coral atolls and reefs spread out over 3.5 million square kilometers of the Pacific Ocean. It is located in Micronesia, a region in the Western Pacific. Isolated as an island group, the Islanders use the limited resources they have on hand to produce their material culture.\nHistorically, the I-Kiribati produced extraordinary objects such as suits of armor made from coconut fiber. The armor provided protection from the dangerous shark’s-teeth-edged swords, spears, and daggers carried by island warriors. Each suit is made up of a set of overalls and sleeves made from coconut fiber, with a coconut fiber cuirass worn over the top. The distinctive cuirasses have high backboards to protect from attack from behind, and were often worn with thick belts made from woven coconut fiber or dried ray skin to protect the vital organs. The cuirasses are usually decorated, either with human hair, feathers or shells.'
ERROR:root:orig input: 'The Republic of Kiribati is a group of thirty-three coral atolls and reefs spread out over 3.5 million square kilometers of the Pacific Ocean. It is located in Micronesia, a region in the Western Pacific. Isolated as an island group, the Islanders use the limited resources they have on hand to produce their material culture.\r\nHistorically, the I-Kiribati produced extraordinary objects such as suits of armor made from coconut fiber. The armor provided protection from the dangerous shark’s-teeth-edged swords, spears, and daggers carried by island warriors. Each suit is made up of a set of overalls and sleeves made from coconut fiber, with a coconut fiber cuirass worn over the top. The distinctive cuirasses have high backboards to protect from attack from behind, and were often worn with thick belts made from woven coconut fiber or dried ray skin to protect the vital organs. The cuirasses are usually decorated, either with human hair, feathers or shells.'
ERROR:root:orig selected_specific len[[["The Republic of Kiribati is a group of thirty-three coral atolls and reefs spread out over 3.5 million square kilometers of the Pacific Ocean.",{},0],["It is located in Micronesia, a region in the Western Pacific.",{},1],["Historically, the I-Kiribati produced extraordinary objects such as suits of armor made from coconut fiber.",{},3],["The armor provided protection from the dangerous shark’s-teeth-edged swords, spears, and daggers carried by island warriors.",{},4],["Each suit is made up of a set of overalls and sleeves made from coconut fiber, with a coconut fiber cuirass worn over the top.",{},5],["The distinctive cuirasses have high backboards to protect from attack from behind, and were often worn with thick belts made from woven coconut fiber or dried ray skin to protect the vital organs.",{},6],["The cuirasses are usually decorated, either with human hair, feathers or shells.",{},7]],["The Republic of Kiribati is a group of thirty-three coral atolls and reefs spread out over 3.5 million square kilometers of the Pacific Ocean.","The Republic of Kiribati is located in Micronesia, a region in the Western Pacific.","Isolated as an island group, the Islanders use the limited resources the Islanders have on hand to produce the Islanders's material culture.","Historically, the I-Kiribati produced extraordinary objects such as suits of armor made from coconut fiber.","The armor provided protection from the dangerous shark’s-teeth-edged swords, spears, and daggers carried by island warriors.","Each suit is made up of a set of overalls and sleeves made from coconut fiber, with a coconut fiber cuirass worn over the top.","The distinctive cuirasses have high backboards to protect from attack from behind, and were often worn with thick belts made from woven coconut fiber or dried ray skin to protect the vital organs.","The cuirasses are usually decorated, either with human hair, feathers or shells."]]
ERROR:root:orig selected_specific len7
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents7
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The Republic of Kiribati is a group of thirty-three coral atolls and reefs spread out over 3.5 million square kilometers of the Pacific Ocean.', 'The Republic of Kiribati is located in Micronesia, a region in the Western Pacific.', 'The armor provided protection from the dangerous shark’s-teeth-edged swords, spears, and daggers carried by island warriors.', 'Each suit is made up of a set of overalls and sleeves made from coconut fiber, with a coconut fiber cuirass worn over the top.', 'The distinctive cuirasses have high backboards to protect from attack from behind, and were often worn with thick belts made from woven coconut fiber or dried ray skin to protect the vital organs.', 'The cuirasses are usually decorated, either with human hair, feathers or shells.']), ('questions', ['How many coral atolls are in Kiribati?', 'Where is Kiribati located?', 'What type of armor was used by the island warriors?', 'What is the outer shell of a suit made of?', 'What were the distinctive cuirasses made of?', 'What are cuirasses decorated with?']), ('answers', ['thirty-three', 'Micronesia', 'shark’s-teeth', 'coconut fiber', 'cuirasses have high backboards to protect from attack from behind, and were often worn with thick belts made from woven coconut fiber or dried ray skin', 'human hair, feathers or shells']), ('options', [['none of the above, the answer is: unknown', 'two', 'one'], ['Solomon Islands', 'Marshall Islands', 'N. Korea'], ['iron', 'fiberglass', 'bronze'], ["sheep's wool", 'cotton', 'moleskin'], ['mail that was scored or rent to hold mail for longer periods of time', 'a type of mail used by the British to keep their mail from being received', 'mail that was used to communicate military strategies to each other'], ['metal', 'glass', 'cloth']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:07.878595
ERROR:root:api_check 0:00:00.344914
ERROR:root:payload: 'Proponents of the New South envisioned a post-Reconstruction southern economy modeled on the North’s embrace of the Industrial Revolution.\nHenry W. Grady, a newspaper editor in Atlanta, Georgia, coined the phrase the "New South” in 1874. He urged the South to abandon its longstanding agrarian economy for a modern economy grounded in factories, mines, and mills.\nAlthough textile mills and tobacco factories emerged in the South during this time, the plans for a New South largely failed. By 1900, per-capita income in the South was forty percent less than the national average, and rural poverty persisted across much of the South well into the twentieth century.'
ERROR:root:orig input: 'Proponents of the New South envisioned a post-Reconstruction southern economy modeled on the North’s embrace of the Industrial Revolution.\r\nHenry W. Grady, a newspaper editor in Atlanta, Georgia, coined the phrase the "New South” in 1874. He urged the South to abandon its longstanding agrarian economy for a modern economy grounded in factories, mines, and mills.\r\nAlthough textile mills and tobacco factories emerged in the South during this time, the plans for a New South largely failed. By 1900, per-capita income in the South was forty percent less than the national average, and rural poverty persisted across much of the South well into the twentieth century.'
ERROR:root:orig selected_specific len[[["Henry W. Grady, a newspaper editor in Atlanta, Georgia, coined the phrase the \"New South” in 1874.",{},1],["By 1900, per-capita income in the South was forty percent less than the national average, and rural poverty persisted across much of the South well into the twentieth century.",{},4]],["Proponents of the New South envisioned a post-Reconstruction southern economy modeled on the North’s embrace of the Industrial Revolution.","Henry W. Grady, a newspaper editor in Atlanta, Georgia, coined the phrase the \"New South” in 1874.","Henry W. Grady, a newspaper editor in Atlanta, Georgia, urged the South to abandon the New South's longstanding agrarian economy for a modern economy grounded in factories, mines, and mills.","Although textile mills and tobacco factories emerged in the South during this time, the plans for a New South largely failed.","By 1900, per-capita income in the South was forty percent less than the national average, and rural poverty persisted across much of the South well into the twentieth century."]]
ERROR:root:orig selected_specific len2
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['By 1900, per-capita income in the South was forty percent less than the national average, and rural poverty persisted across much of the South well into the twentieth century.']), ('questions', ['What was the per-capita income in the South in 1900?']), ('answers', ['forty percent less than the national average, and rural poverty']), ('options', [['sixty percent more than the national average, and urban poverty', 'more than double the national average, and urban poverty', 'more than double the national average, and rural poverty']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:03.707159
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: you exceeded your current quota, please check your plan and billing details
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: you exceeded your current quota, please check your plan and billing details
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: you exceeded your current quota, please check your plan and billing details
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: you exceeded your current quota, please check your plan and billing details
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: you exceeded your current quota, please check your plan and billing details
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: you exceeded your current quota, please check your plan and billing details
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: you exceeded your current quota, please check your plan and billing details
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: you exceeded your current quota, please check your plan and billing details
ERROR:root:api_check 0:00:45.250035
ERROR:root:payload: 'Although individual poleis—plural of polis, or city-state—each had their own particular institutions and practices, there were several features common to the majority of Greek city-states. In most poleis, the majority of the population lived in the city rather than being spread across small farm communities in the surrounding territory; also, the heart of the urban area was usually a sacred space with one or more temples.\nFrom the seventh century BCE, cities were usually fortified with city walls—Sparta being a notable exception—and the agora space, a common public area, was created for civic and commercial activity. From the fifth century BCE, many poleis displayed evidence of town planning—especially in newly established colonies—with specific areas of the city designated for private, public, and religious functions. Many poleis also had designated spaces for public assembly, either for political purposes or for entertainment—for example, a theatre or a gymnasium.\nIn Greek society, men were the most powerful group, but other social groups—women, children, enslaved people, freed people, labourers, and foreigners—could make up as much as 90 percent of the total polis population. All of these groups had to be included and involved in the polis in order for it to function as a cohesive community.'
ERROR:root:orig input: 'Although individual poleis—plural of polis, or city-state—each had their own particular institutions and practices, there were several features common to the majority of Greek city-states. In most poleis, the majority of the population lived in the city rather than being spread across small farm communities in the surrounding territory; also, the heart of the urban area was usually a sacred space with one or more temples.\r\nFrom the seventh century BCE, cities were usually fortified with city walls—Sparta being a notable exception—and the agora space, a common public area, was created for civic and commercial activity. From the fifth century BCE, many poleis displayed evidence of town planning—especially in newly established colonies—with specific areas of the city designated for private, public, and religious functions. Many poleis also had designated spaces for public assembly, either for political purposes or for entertainment—for example, a theatre or a gymnasium.\r\nIn Greek society, men were the most powerful group, but other social groups—women, children, enslaved people, freed people, labourers, and foreigners—could make up as much as 90 percent of the total polis population. All of these groups had to be included and involved in the polis in order for it to function as a cohesive community.'
ERROR:root:orig selected_specific len[[["In most poleis, the majority of the population lived in the city rather than being spread across small farm communities in the surrounding territory; also, the heart of the urban area was usually a sacred space with one or more temples.",{},1],["From the seventh century BCE, cities were usually fortified with city walls—Sparta being a notable exception—and the agora space, a common public area, was created for civic and commercial activity.",{},2],["From the fifth century BCE, many poleis displayed evidence of town planning—especially in newly established colonies—with specific areas of the city designated for private, public, and religious functions.",{},3],["Many poleis also had designated spaces for public assembly, either for political purposes or for entertainment—for example, a theatre or a gymnasium.",{},4],["In Greek society, men were the most powerful group, but other social groups—women, children, enslaved people, freed people, labourers, and foreigners—could make up as much as 90 percent of the total polis population.",{},5]],["Although individual poleis—plural of polis, or city-state—each had individual poleis—plural of polis, or city-state—each's own particular institutions and practices, there were several features common to the majority of Greek city-states.","In most poleis, the majority of the population lived in the city rather than being spread across small farm communities in the surrounding territory; also, the heart of the urban area was usually a sacred space with one or more temples.","From the seventh century BCE, cities were usually fortified with city walls—Sparta being a notable exception—and the agora space, a common public area, was created for civic and commercial activity.","From the fifth century BCE, many poleis displayed evidence of town planning—especially in newly established colonies—with specific areas of the city designated for private, public, and religious functions.","Many poleis also had designated spaces for public assembly, either for political purposes or for entertainment—for example, a theatre or a gymnasium.","In Greek society, men were the most powerful group, but other social groups—women, children, enslaved people, freed people, labourers, and foreigners—could make up as much as 90 percent of the total polis population.","All of these groups had to be included and involved in the polis in order for it to function as a cohesive community."]]
ERROR:root:orig selected_specific len5
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents5
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 917, in new
    mcq_output = [call.result() for call in mcq_request]
  File "/datadrive/qgv1/text_prod/app.py", line 917, in <listcomp>
    mcq_output = [call.result() for call in mcq_request]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 94, in query
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: you exceeded your current quota, please check your plan and billing details
ERROR:root:api_check 0:00:00.347002
ERROR:root:payload: 'Although individual poleis—plural of polis, or city-state—each had their own particular institutions and practices, there were several features common to the majority of Greek city-states. In most poleis, the majority of the population lived in the city rather than being spread across small farm communities in the surrounding territory; also, the heart of the urban area was usually a sacred space with one or more temples.\nFrom the seventh century BCE, cities were usually fortified with city walls—Sparta being a notable exception—and the agora space, a common public area, was created for civic and commercial activity. From the fifth century BCE, many poleis displayed evidence of town planning—especially in newly established colonies—with specific areas of the city designated for private, public, and religious functions. Many poleis also had designated spaces for public assembly, either for political purposes or for entertainment—for example, a theatre or a gymnasium.'
ERROR:root:orig input: 'Although individual poleis—plural of polis, or city-state—each had their own particular institutions and practices, there were several features common to the majority of Greek city-states. In most poleis, the majority of the population lived in the city rather than being spread across small farm communities in the surrounding territory; also, the heart of the urban area was usually a sacred space with one or more temples.\r\nFrom the seventh century BCE, cities were usually fortified with city walls—Sparta being a notable exception—and the agora space, a common public area, was created for civic and commercial activity. From the fifth century BCE, many poleis displayed evidence of town planning—especially in newly established colonies—with specific areas of the city designated for private, public, and religious functions. Many poleis also had designated spaces for public assembly, either for political purposes or for entertainment—for example, a theatre or a gymnasium.'
ERROR:root:orig selected_specific len[[["In most poleis, the majority of the population lived in the city rather than being spread across small farm communities in the surrounding territory; also, the heart of the urban area was usually a sacred space with one or more temples.",{},1],["From the seventh century BCE, cities were usually fortified with city walls—Sparta being a notable exception—and the agora space, a common public area, was created for civic and commercial activity.",{},2],["From the fifth century BCE, many poleis displayed evidence of town planning—especially in newly established colonies—with specific areas of the city designated for private, public, and religious functions.",{},3],["Many poleis also had designated spaces for public assembly, either for political purposes or for entertainment—for example, a theatre or a gymnasium.",{},4]],["Although individual poleis—plural of polis, or city-state—each had individual poleis—plural of polis, or city-state—each's own particular institutions and practices, there were several features common to the majority of Greek city-states.","In most poleis, the majority of the population lived in the city rather than being spread across small farm communities in the surrounding territory; also, the heart of the urban area was usually a sacred space with one or more temples.","From the seventh century BCE, cities were usually fortified with city walls—Sparta being a notable exception—and the agora space, a common public area, was created for civic and commercial activity.","From the fifth century BCE, many poleis displayed evidence of town planning—especially in newly established colonies—with specific areas of the city designated for private, public, and religious functions.","Many poleis also had designated spaces for public assembly, either for political purposes or for entertainment—for example, a theatre or a gymnasium."]]
ERROR:root:orig selected_specific len4
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents4
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 917, in new
    mcq_output = [call.result() for call in mcq_request]
  File "/datadrive/qgv1/text_prod/app.py", line 917, in <listcomp>
    mcq_output = [call.result() for call in mcq_request]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 94, in query
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: you exceeded your current quota, please check your plan and billing details
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: you exceeded your current quota, please check your plan and billing details
ERROR:root:api_check 0:00:00.362847
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","Ancient Greek philosophy emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,."]]
ERROR:root:orig selected_specific len6
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents6
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 917, in new
    mcq_output = [call.result() for call in mcq_request]
  File "/datadrive/qgv1/text_prod/app.py", line 917, in <listcomp>
    mcq_output = [call.result() for call in mcq_request]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 94, in query
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: you exceeded your current quota, please check your plan and billing details
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: you exceeded your current quota, please check your plan and billing details
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: you exceeded your current quota, please check your plan and billing details
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: you exceeded your current quota, please check your plan and billing details
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: you exceeded your current quota, please check your plan and billing details
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: you exceeded your current quota, please check your plan and billing details
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: you exceeded your current quota, please check your plan and billing details
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: you exceeded your current quota, please check your plan and billing details
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: you exceeded your current quota, please check your plan and billing details
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: you exceeded your current quota, please check your plan and billing details
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: you exceeded your current quota, please check your plan and billing details
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.338727
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","Ancient Greek philosophy emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","Hippocrates, another ancient Greek, established a medical school, wrote many medical treatises, and is— because of Hippocrates, another ancient Greek,'s systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents8
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "We owe the Ancient Greeks's basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.", 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, another ancient Greek,.', 'Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.', "Aristotle, Plato's student, wrote about topics as varied as biology and drama."]), ('questions', ['What civilizations did the Ancient Greeks build on?', 'What ancient Greek mathematicians helped us understand geometry?', 'Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'What is the medical standard for doctors called?', 'Who turned the questioning style of Socrates into written form?', "Who was Plato's student?"]), ('answers', ['Egypt and Mesopotamia', 'Pythagoras, Euclid, and Archimedes', 'Ancient Greeks', 'Hippocrates', 'The Hippocratic oath', 'Plato', 'Aristotle']), ('options', [['Greece and Rome', 'Syria and Asia Minor', 'Persia and India'], ['Plato and Archimedes', 'Euclidean geometry and Archimedes', 'Plato, Euclidean geometry, and Archimedes'], ['Chinese scholars', 'Renaissance scholars', 'Native American Indians'], ['John Calvin', 'Erasmus', 'William of Ockham'], ['The Declaration of Independence', 'The Constitution', "The American Medical Association's code of ethics"], ['John Calvin', 'Desiderius Erasmus', 'Erasmus'], ['Pico della Mirandola', 'Plato', 'Alexander the Great']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:08.154303
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.366841
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents8
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity. Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama.", 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.", 'Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.']), ('questions', ['Who developed some of the first astronomical models?', "Who turned Socrates' writing style into written form?", 'Who is the most famous physician in antiquity?', "Who was Plato's student?", 'Who are some of the Greek mathematicians that we owe our ideas to?', 'What is the name of the medical standard for doctors?', 'What did Hippocrates establish?']), ('answers', ['Ancient Greeks', 'Plato', 'Hippocrates', 'Aristotle', 'Pythagoras, Euclid, and Archimedes', 'Hippocratic oath', 'medical school']), ('options', [['Ancient Romans', 'Ancient Chinese', 'Anthropologists'], ['Aristophanes', 'Xenophon', 'Plutarch'], ['Aristotle', 'Galen', 'Plato'], ['Pythagoras', 'Socrates', 'Plato'], ['Plato and Aristotle', 'Pythagoras and Euclid', 'Plato and Archimedes'], ['Medical ethics', "Physician's standard of care", 'Declaration of Helsinki'], ['the Hippocratic Oath', 'a school of medicine', 'a hospital']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:14.918586
ERROR:root:api_check 0:00:00.409662
ERROR:root:payload: 'Tiger Woods finished his latest appearance at the Masters with a six-over 78 as he capped off his remarkable comeback at Augusta National after nearly 16 months away from golf.\n\nThe 15-time major winner stunned the golfing world earlier this week when he announced that he would be making a dramatic return to the sport after suffering serious leg injuries in a car crash in February 2021.\n\nAfter shocking many by making the cut on Friday with some determined play, his injuries and lack of match fitness seemed to catch up with him over the weekend.\nHe carded a six-over par 78 on Saturday, his worst score in a Masters round, and finished with the same score on Sunday to finish on 13-over.\n\nWhile he might be well down on the leaderboard, overall it was a successful four days for the five-time Masters winner who showcased the spirit that’s made him so successful in his first competitive golf action in almost a year and a half.\n\nAfterwards, Woods confirmed he will play at the 150th Open Championship at St. Andrews, Scotland in July. Woods said he was still undecided about playing in golf’s next major, the PGA Championship at Southern Hills Country Club in Tulsa, Oklahoma, in May.\n\nWhen he was asked if he thinks this week was one of the greatest achievements of his career, Woods said: “For not winning an event, yes.”\n\n“To go from where I was to get to this point, I’ve had an incredible team that has helped me get to this point and incredible support from – as I alluded to in the press conference on Tuesday, the amount of texts and FaceTimes and calls I got from players that are close to me throughout this entire time has meant a lot,” Woods explained.\n\n“Then to come here on these grounds and have the patrons – I played in a Covid year, and then I didn’t play last year. 2019 was the last time for me that I experienced having the patrons like this, and it’s exciting. It’s inspiring. It’s fun to hear the roars, to hear the hole-in-ones. I think Kitchen made one the other day. To hear that roar down there at the bottom on 16, just to hear that excitement of what this tournament brings out.\n\n“We have just an amazing day today with now the wind is starting to pick up, it’s starting to swirl a little bit. I think it’s going to get tight, and it’s going to be fun to watch.”'
ERROR:root:orig input: 'Tiger Woods finished his latest appearance at the Masters with a six-over 78 as he capped off his remarkable comeback at Augusta National after nearly 16 months away from golf.\r\n\r\nThe 15-time major winner stunned the golfing world earlier this week when he announced that he would be making a dramatic return to the sport after suffering serious leg injuries in a car crash in February 2021.\r\n\r\nAfter shocking many by making the cut on Friday with some determined play, his injuries and lack of match fitness seemed to catch up with him over the weekend.\r\nHe carded a six-over par 78 on Saturday, his worst score in a Masters round, and finished with the same score on Sunday to finish on 13-over.\r\n\r\nWhile he might be well down on the leaderboard, overall it was a successful four days for the five-time Masters winner who showcased the spirit that’s made him so successful in his first competitive golf action in almost a year and a half.\r\n\r\nAfterwards, Woods confirmed he will play at the 150th Open Championship at St. Andrews, Scotland in July. Woods said he was still undecided about playing in golf’s next major, the PGA Championship at Southern Hills Country Club in Tulsa, Oklahoma, in May.\r\n\r\nWhen he was asked if he thinks this week was one of the greatest achievements of his career, Woods said: “For not winning an event, yes.”\r\n\r\n“To go from where I was to get to this point, I’ve had an incredible team that has helped me get to this point and incredible support from – as I alluded to in the press conference on Tuesday, the amount of texts and FaceTimes and calls I got from players that are close to me throughout this entire time has meant a lot,” Woods explained.\r\n\r\n“Then to come here on these grounds and have the patrons – I played in a Covid year, and then I didn’t play last year. 2019 was the last time for me that I experienced having the patrons like this, and it’s exciting. It’s inspiring. It’s fun to hear the roars, to hear the hole-in-ones. I think Kitchen made one the other day. To hear that roar down there at the bottom on 16, just to hear that excitement of what this tournament brings out.\r\n\r\n“We have just an amazing day today with now the wind is starting to pick up, it’s starting to swirl a little bit. I think it’s going to get tight, and it’s going to be fun to watch.”'
ERROR:root:orig selected_specific len[[["The 15-time major winner stunned the golfing world earlier this week when he announced that he would be making a dramatic return to the sport after suffering serious leg injuries in a car crash in February 2021.",{},1],["Tiger Woods finished his latest appearance at the Masters with a six-over 78 as he capped off his remarkable comeback at Augusta National after nearly 16 months away from golf.",{},0],["He carded a six-over par 78 on Saturday, his worst score in a Masters round, and finished with the same score on Sunday to finish on 13-over.",{},3],["next major, the PGA Championship at Southern Hills Country Club in Tulsa, Oklahoma, in May.",{},7],["While he might be well down on the leaderboard, overall it was a successful four days for the five-time Masters winner who showcased the spirit that’s made him so successful in his first competitive golf action in almost a year and a half.",{},4],["Afterwards, Woods confirmed he will play at the 150th Open Championship at St. Andrews, Scotland in July.",{},5],["When he was asked if he thinks this week was one of the greatest achievements of his career, Woods said: “For not winning an event, yes.”",{},8],["“To go from where I was to get to this point, I’ve had an incredible team that has helped me get to this point and incredible support from – as I alluded to in the press conference on Tuesday, the amount of texts and FaceTimes and calls I got from players that are close to me throughout this entire time has meant a lot,” Woods explained.",{},9],["Woods said he was still undecided about playing in golf’s",{},6],["“Then to come here on these grounds and have the patrons – I played in a Covid year, and then I didn’t play last year.",{},10],["After shocking many by making the cut on Friday with some determined play, his injuries and lack of match fitness seemed to catch up with him over the weekend.",{},2]],["Tiger Woods finished his latest appearance at the Masters with a six-over 78 as he capped off his remarkable comeback at Augusta National after nearly 16 months away from golf.","The 15-time major winner stunned the golfing world earlier this week when he announced that he would be making a dramatic return to the sport after suffering serious leg injuries in a car crash in February 2021.","After shocking many by making the cut on Friday with some determined play, his injuries and lack of match fitness seemed to catch up with him over the weekend.","He carded a six-over par 78 on Saturday, his worst score in a Masters round, and finished with the same score on Sunday to finish on 13-over.","While he might be well down on the leaderboard, overall it was a successful four days for the five-time Masters winner who showcased the spirit that’s made him so successful in his first competitive golf action in almost a year and a half.","Afterwards, Woods confirmed he will play at the 150th Open Championship at St. Andrews, Scotland in July.","Woods said he was still undecided about playing in golf’s","next major, the PGA Championship at Southern Hills Country Club in Tulsa, Oklahoma, in May.","When he was asked if he thinks this week was one of the greatest achievements of his career, Woods said: “For not winning an event, yes.”","“To go from where I was to get to this point, I’ve had an incredible team that has helped me get to this point and incredible support from – as I alluded to in the press conference on Tuesday, the amount of texts and FaceTimes and calls I got from players that are close to me throughout this entire time has meant a lot,” Woods explained.","“Then to come here on these grounds and have the patrons – I played in a Covid year, and then I didn’t play last year.","2019 was the last time for me that I experienced having the patrons like this, and it’s exciting.","It’s inspiring.","It’s fun to hear the roars, to hear the hole-in-ones.","I think Kitchen made one the other day.","To hear that roar down there at the bottom on 16, just to hear that excitement of what this tournament brings out.","“We have just an amazing day today with now the wind is starting to pick up, it’s starting to swirl a little bit.","I think the wind’s going to get tight, and the wind’s going to be fun to watch.”"]]
ERROR:root:orig selected_specific len11
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents10
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Tiger Woods finished his latest appearance at the Masters with a six-over 78 as he capped off his remarkable comeback at Augusta National after nearly 16 months away from golf. The 15-time major winner stunned the golfing world earlier this week when he announced that he would be making a dramatic return to the sport after suffering serious leg injuries in a car crash in February 2021.', ' Tiger Woods finished his latest appearance at the Masters with a six-over 78 as he capped off his remarkable comeback at Augusta National after nearly 16 months away from golf.', 'After shocking many by making the cut on Friday with some determined play, his injuries and lack of match fitness seemed to catch up with him over the weekend. He carded a six-over par 78 on Saturday, his worst score in a Masters round, and finished with the same score on Sunday to finish on 13-over.', 'Woods said he was still undecided about playing in golf’s next major, the PGA Championship at Southern Hills Country Club in Tulsa, Oklahoma, in May.', 'He carded a six-over par 78 on Saturday, his worst score in a Masters round, and finished with the same score on Sunday to finish on 13-over. While he might be well down on the leaderboard, overall it was a successful four days for the five-time Masters winner who showcased the spirit that’s made him so successful in his first competitive golf action in almost a year and a half.', 'While he might be well down on the leaderboard, overall it was a successful four days for the five-time Masters winner who showcased the spirit that’s made him so successful in his first competitive golf action in almost a year and a half. Afterwards, Woods confirmed he will play at the 150th Open Championship at St. Andrews, Scotland in July.', 'next major, the PGA Championship at Southern Hills Country Club in Tulsa, Oklahoma, in May. When he was asked if he thinks this week was one of the greatest achievements of his career, Woods said: “For not winning an event, yes.”', 'When he was asked if he thinks this week was one of the greatest achievements of his career, Woods said: “For not winning an event, yes.” “To go from where I was to get to this point, I’ve had an incredible team that has helped me get to this point and incredible support from – as I alluded to in the press conference on Tuesday, the amount of texts and FaceTimes and calls I got from players that are close to me throughout this entire time has meant a lot,” Woods explained.', '“To go from where I was to get to this point, I’ve had an incredible team that has helped me get to this point and incredible support from – as I alluded to in the press conference on Tuesday, the amount of texts and FaceTimes and calls I got from players that are close to me throughout this entire time has meant a lot,” Woods explained. “Then to come here on these grounds and have the patrons – I played in a Covid year, and then I didn’t play last year.']), ('questions', ['When did Tiger Woods suffer a serious injury to his leg?', 'Who finished his latest appearance at the Masters with a six-over 78?', 'What was the final score of the week of the Masters?', 'What is the name of the next major golf tournament Woods is considering?', 'How long did Arnold win in his first competitive golf action?', 'Where is the 150th Open Championship held?', 'What did Woods say was one of his greatest accomplishments?', 'What did Woods say was one of the biggest achievements of his career?', 'What year did Woods play on the field?']), ('answers', ['February 2021', 'Tiger Woods', '13-over', 'PGA Championship', 'four days', 'St. Andrews', 'not winning an event', 'the amount of texts and FaceTimes and calls I got from players that are close to me', 'Covid year']), ('options', [['September 2021', 'July 2021', 'January 2021'], ['Greg Mankiw', 'Colin Montgomerie', 'Phil Mickelson'], ['6-over', '9-under', '10-over'], ['British Open', 'Tiger Woods PGA Tour', 'Masters Tournament'], ['two days', 'one hole', 'one stroke'], ['Royal Troon', 'Gleneagles', 'Carnoustie'], ['winning the Masters', 'being the youngest player to win the Masters', 'winning the Open Championship'], ['making the most of every opportunity in every situation', 'winning the Masters for the first time'], ['Sevid year', 'Cevid year', 'Tigris year']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:08.317284
ERROR:root:api_check 0:00:00.392553
ERROR:root:payload: 'In the ancient Greek world, religion was personal, direct, and present in all areas of life. It revolved around myths which explained the origins of mankind and gave the gods a human face. Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek.\nIndividuals in Greek society probably had varying degrees of religious belief—and some may have been skeptics—but Greek society could only function as it did because certain fundamentals were generally accepted throughout society: the gods existed, they could influence human affairs, and they welcomed and responded to acts of piety and worship.\nThe temple was the place where, on special occasions, religion took on a more formal tone. Gods were worshipped at sacred sites and temples in all major Greek communities during ceremonies carried out by priests and their attendants.\nAt first, sacred sites were merely a simple altar in a designated area, but over time massive temples were built in honor of particular gods. These temples usually housed a cult statue of the deity being honored; two famous examples are the huge statue of Athena in the Parthenon of Athens and the statue of Zeus at Olympia.'
ERROR:root:orig input: 'In the ancient Greek world, religion was personal, direct, and present in all areas of life. It revolved around myths which explained the origins of mankind and gave the gods a human face. Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek.\r\nIndividuals in Greek society probably had varying degrees of religious belief—and some may have been skeptics—but Greek society could only function as it did because certain fundamentals were generally accepted throughout society: the gods existed, they could influence human affairs, and they welcomed and responded to acts of piety and worship.\r\nThe temple was the place where, on special occasions, religion took on a more formal tone. Gods were worshipped at sacred sites and temples in all major Greek communities during ceremonies carried out by priests and their attendants.\r\nAt first, sacred sites were merely a simple altar in a designated area, but over time massive temples were built in honor of particular gods. These temples usually housed a cult statue of the deity being honored; two famous examples are the huge statue of Athena in the Parthenon of Athens and the statue of Zeus at Olympia.'
ERROR:root:orig selected_specific len[[["These temples usually housed a cult statue of the deity being honored; two famous examples are the huge statue of Athena in the Parthenon of Athens and the statue of Zeus at Olympia.",{},8],["Gods were worshipped at sacred sites and temples in all major Greek communities during ceremonies carried out by priests and their attendants.",{},6],["Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek.",{},2],["At first, sacred sites were merely a simple altar in a designated area, but over time massive temples were built in honor of particular gods.",{},7]],["In the ancient Greek world, religion was personal, direct, and present in all areas of life.","It revolved around myths which explained the origins of mankind and gave the gods a human face.","Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek.","Individuals in Greek society probably had varying degrees of religious belief—and some may have been skeptics—but Greek society could only function as it did because certain fundamentals were generally accepted throughout society",": the gods existed, they could influence human affairs, and they welcomed and responded to acts of piety and worship.","The temple was the place where, on special occasions, religion took on a more formal tone.","Gods were worshipped at sacred sites and temples in all major Greek communities during ceremonies carried out by priests and their attendants.","At first, sacred sites were merely a simple altar in a designated area, but over time massive temples were built in honor of particular gods.","massive temples usually housed a cult statue of the deity being honored; two famous examples are the huge statue of Athena in the Parthenon of Athens and the statue of Zeus at Olympia."]]
ERROR:root:orig selected_specific len4
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents4
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['At first, sacred sites were merely a simple altar in a designated area, but over time massive temples were built in honor of particular gods. These temples usually housed a cult statue of the deity being honored; two famous examples are the huge statue of Athena in the Parthenon of Athens and the statue of Zeus at Olympia.', 'The temple was the place where, on special occasions, religion took on a more formal tone. Gods were worshipped at sacred sites and temples in all major Greek communities during ceremonies carried out by priests and their attendants.', 'It revolved around myths which explained the origins of mankind and gave the gods a human face. Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek.', 'Gods were worshipped at sacred sites and temples in all major Greek communities during ceremonies carried out by priests and their attendants. At first, sacred sites were merely a simple altar in a designated area, but over time massive temples were built in honor of particular gods.']), ('questions', ['Who is the statue of Athena in the Parthenon of Athens?', 'Where were Gods worshipped in Greek communities?', 'What dominated the urban landscape of Greece?', 'What were a simple altar in a designated area?']), ('answers', ['Zeus', 'sacred sites and temples', 'Temples', 'sacred sites']), ('options', [['Hera', 'Aphrodite', 'Poseidon'], ['local markets', 'private homes', 'the Agora, the central square'], ['Government buildings', 'The Parthenon', 'Shops'], ['special clothing', 'sacred trees', 'special days']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.767614
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.419810
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents8
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity. Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama.", 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.", 'Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.']), ('questions', ['Who developed some of the first astronomical models?', "Who turned Socrates' writing style into written form?", 'Who is the most famous physician in antiquity?', "Who was Plato's student?", 'Who are some of the Greek mathematicians that we owe our ideas to?', 'What is the name of the medical standard for doctors?', 'What did Hippocrates establish?']), ('answers', ['Ancient Greeks', 'Plato', 'Hippocrates', 'Aristotle', 'Pythagoras, Euclid, and Archimedes', 'Hippocratic oath', 'medical school']), ('options', [['Ancient Romans', 'Anthropologists', 'Ancient Chinese'], ['Aristophanes', 'Xenophon', 'Plutarch'], ['Galen', 'Aristotle', 'Plato'], ['Pythagoras', 'Plato', 'Socrates'], ['Plato and Aristotle', 'Plato and Archimedes', 'Pythagoras and Euclid'], ['Medical ethics', "Physician's standard of care", 'Declaration of Helsinki'], ["a physicians' guild", 'a hospital', 'a prescription pad']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:08.002008
ERROR:root:api_check 0:00:19.535587
ERROR:root:payload: 'What determines a species\' range? Historical chance and geographical barriers can play important roles. For instance, maybe polar bears could survive at the South pole as well as the North pole. But they were never introduced to the South pole, and have had no way to disperse, or spread, across the oceans in between.\nOnce a species has been introduced to an area, it can only survive in that area if the conditions are right. Some of the conditions that must be "right" are biotic, meaning that they\'re directly related to living organisms. For instance, a species may not be able to get a foothold in a given area because a competing species, predator, or pathogen is already there, or because no food supply is available.\nMany factors that determine whether a species can live an an area are abiotic, or non-living. Examples of important abiotic factors include temperature, sunlight, and moisture level. These factors sometimes determine whether a species can live in a place in a very direct way. For instance, a plant species will only take root and spread in a place where it\'s getting enough sunlight and water.\nHowever, abiotic factors can also affect where species are found in less direct ways. For instance, climate and soil quality directly affect the type and number of plants that can grow in a particular area. Since energy enters ecosystems via plants and other primary producers, climate and soil quality indirectly determine what other trophic levels, or "food chain links," the ecosystem can support.'
ERROR:root:orig input: 'What determines a species\' range? Historical chance and geographical barriers can play important roles. For instance, maybe polar bears could survive at the South pole as well as the North pole. But they were never introduced to the South pole, and have had no way to disperse, or spread, across the oceans in between.\r\nOnce a species has been introduced to an area, it can only survive in that area if the conditions are right. Some of the conditions that must be "right" are biotic, meaning that they\'re directly related to living organisms. For instance, a species may not be able to get a foothold in a given area because a competing species, predator, or pathogen is already there, or because no food supply is available.\r\nMany factors that determine whether a species can live an an area are abiotic, or non-living. Examples of important abiotic factors include temperature, sunlight, and moisture level. These factors sometimes determine whether a species can live in a place in a very direct way. For instance, a plant species will only take root and spread in a place where it\'s getting enough sunlight and water.\r\nHowever, abiotic factors can also affect where species are found in less direct ways. For instance, climate and soil quality directly affect the type and number of plants that can grow in a particular area. Since energy enters ecosystems via plants and other primary producers, climate and soil quality indirectly determine what other trophic levels, or "food chain links," the ecosystem can support.'
ERROR:root:orig selected_specific len[[["Since energy enters ecosystems via plants and other primary producers, climate and soil quality indirectly determine what other trophic levels, or \"food chain links,\" the ecosystem can support.",{},13],["For instance, a species may not be able to get a foothold in a given area because a competing species, predator, or pathogen is already there, or because no food supply is available.",{},6],["For instance, a plant species will only take root and spread in a place where it's getting enough sunlight and water.",{},10],["Once a species has been introduced to an area, it can only survive in that area if the conditions are right.",{},4]],["What determines a species' range?","Historical chance and geographical barriers can play important roles.","For instance, maybe polar bears could survive at the South pole as well as the North pole.","But they were never introduced to the South pole, and have had no way to disperse, or spread, across the oceans in between.","Once a species has been introduced to an area, it can only survive in that area if the conditions are right.","Some of the conditions that must be \"right\" are biotic, meaning that they're directly related to living organisms.","For instance, a species may not be able to get a foothold in a given area because a competing species, predator, or pathogen is already there, or because no food supply is available.","Many factors that determine whether a species can live an an area are abiotic, or non-living.","Examples of important abiotic factors include temperature, sunlight, and moisture level.","Many factors that determine whether a species can live an an area sometimes determine whether a species can live in a place in a very direct way.","For instance, a plant species will only take root and spread in a place where it's getting enough sunlight and water.","However, abiotic factors can also affect where species are found in less direct ways.","For instance, climate and soil quality directly affect the type and number of plants that can grow in a particular area.","Since energy enters ecosystems via plants and other primary producers, climate and soil quality indirectly determine what other trophic levels, or \"food chain links,\" the ecosystem can support."]]
ERROR:root:orig selected_specific len4
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents4
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 917, in new
    mcq_output = [call.result() for call in mcq_request]
  File "/datadrive/qgv1/text_prod/app.py", line 917, in <listcomp>
    mcq_output = [call.result() for call in mcq_request]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 94, in query
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.371874
ERROR:root:payload: 'What determines a species\' range? Historical chance and geographical barriers can play important roles. For instance, maybe polar bears could survive at the South pole as well as the North pole. But they were never introduced to the South pole, and have had no way to disperse, or spread, across the oceans in between.\nOnce a species has been introduced to an area, it can only survive in that area if the conditions are right. Some of the conditions that must be "right" are biotic, meaning that they\'re directly related to living organisms. For instance, a species may not be able to get a foothold in a given area because a competing species, predator, or pathogen is already there, or because no food supply is available.\nMany factors that determine whether a species can live an an area are abiotic, or non-living. Examples of important abiotic factors include temperature, sunlight, and moisture level. These factors sometimes determine whether a species can live in a place in a very direct way. For instance, a plant species will only take root and spread in a place where it\'s getting enough sunlight and water.\nHowever, abiotic factors can also affect where species are found in less direct ways. For instance, climate and soil quality directly affect the type and number of plants that can grow in a particular area. Since energy enters ecosystems via plants and other primary producers, climate and soil quality indirectly determine what other trophic levels, or "food chain links," the ecosystem can support.'
ERROR:root:orig input: 'What determines a species\' range? Historical chance and geographical barriers can play important roles. For instance, maybe polar bears could survive at the South pole as well as the North pole. But they were never introduced to the South pole, and have had no way to disperse, or spread, across the oceans in between.\r\nOnce a species has been introduced to an area, it can only survive in that area if the conditions are right. Some of the conditions that must be "right" are biotic, meaning that they\'re directly related to living organisms. For instance, a species may not be able to get a foothold in a given area because a competing species, predator, or pathogen is already there, or because no food supply is available.\r\nMany factors that determine whether a species can live an an area are abiotic, or non-living. Examples of important abiotic factors include temperature, sunlight, and moisture level. These factors sometimes determine whether a species can live in a place in a very direct way. For instance, a plant species will only take root and spread in a place where it\'s getting enough sunlight and water.\r\nHowever, abiotic factors can also affect where species are found in less direct ways. For instance, climate and soil quality directly affect the type and number of plants that can grow in a particular area. Since energy enters ecosystems via plants and other primary producers, climate and soil quality indirectly determine what other trophic levels, or "food chain links," the ecosystem can support.'
ERROR:root:orig selected_specific len[[["Since energy enters ecosystems via plants and other primary producers, climate and soil quality indirectly determine what other trophic levels, or \"food chain links,\" the ecosystem can support.",{},13],["For instance, a species may not be able to get a foothold in a given area because a competing species, predator, or pathogen is already there, or because no food supply is available.",{},6],["For instance, a plant species will only take root and spread in a place where it's getting enough sunlight and water.",{},10],["Once a species has been introduced to an area, it can only survive in that area if the conditions are right.",{},4]],["What determines a species' range?","Historical chance and geographical barriers can play important roles.","For instance, maybe polar bears could survive at the South pole as well as the North pole.","But they were never introduced to the South pole, and have had no way to disperse, or spread, across the oceans in between.","Once a species has been introduced to an area, it can only survive in that area if the conditions are right.","Some of the conditions that must be \"right\" are biotic, meaning that they're directly related to living organisms.","For instance, a species may not be able to get a foothold in a given area because a competing species, predator, or pathogen is already there, or because no food supply is available.","Many factors that determine whether a species can live an an area are abiotic, or non-living.","Examples of important abiotic factors include temperature, sunlight, and moisture level.","Many factors that determine whether a species can live an an area sometimes determine whether a species can live in a place in a very direct way.","For instance, a plant species will only take root and spread in a place where it's getting enough sunlight and water.","However, abiotic factors can also affect where species are found in less direct ways.","For instance, climate and soil quality directly affect the type and number of plants that can grow in a particular area.","Since energy enters ecosystems via plants and other primary producers, climate and soil quality indirectly determine what other trophic levels, or \"food chain links,\" the ecosystem can support."]]
ERROR:root:orig selected_specific len4
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents4
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['For instance, climate and soil quality directly affect the type and number of plants that can grow in a particular area. Since energy enters ecosystems via plants and other primary producers, climate and soil quality indirectly determine what other trophic levels, or "food chain links," the ecosystem can support.', 'Some of the conditions that must be "right" are biotic, meaning that they\'re directly related to living organisms. For instance, a species may not be able to get a foothold in a given area because a competing species, predator, or pathogen is already there, or because no food supply is available.', "Many factors that determine whether a species can live an an area sometimes determine whether a species can live in a place in a very direct way. For instance, a plant species will only take root and spread in a place where it's getting enough sunlight and water.", 'But they were never introduced to the South pole, and have had no way to disperse, or spread, across the oceans in between. Once a species has been introduced to an area, it can only survive in that area if the conditions are right.']), ('questions', ['What enters an ecosystem via plants and other primary producers?', 'What is one reason a species may not be able to get a foothold in a given area?', 'What is the main difference between a plant and a plant living in an area?', 'When can a species survive in an area?']), ('answers', ['energy', 'food supply is available', 'only take root and spread', 'if the conditions are right']), ('options', [['microbes', 'detritus', 'organic matter'], ['too many competing species', 'the climate is too harsh', 'there is not enough water'], ['only spread but not take root', 'both spread and take root', 'neither spread nor take root'], ['if the species wants to', 'if the species can reproduce', 'if the area is not too large']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:09.590354
ERROR:root:api_check 0:00:00.355290
ERROR:root:payload: 'What determines a species\' range? Historical chance and geographical barriers can play important roles. For instance, maybe polar bears could survive at the South pole as well as the North pole. But they were never introduced to the South pole, and have had no way to disperse, or spread, across the oceans in between.\nOnce a species has been introduced to an area, it can only survive in that area if the conditions are right. Some of the conditions that must be "right" are biotic, meaning that they\'re directly related to living organisms. For instance, a species may not be able to get a foothold in a given area because a competing species, predator, or pathogen is already there, or because no food supply is available.\nMany factors that determine whether a species can live an an area are abiotic, or non-living. Examples of important abiotic factors include temperature, sunlight, and moisture level. These factors sometimes determine whether a species can live in a place in a very direct way. For instance, a plant species will only take root and spread in a place where it\'s getting enough sunlight and water.\nHowever, abiotic factors can also affect where species are found in less direct ways. For instance, climate and soil quality directly affect the type and number of plants that can grow in a particular area. Since energy enters ecosystems via plants and other primary producers, climate and soil quality indirectly determine what other trophic levels, or "food chain links," the ecosystem can support.'
ERROR:root:orig input: 'What determines a species\' range? Historical chance and geographical barriers can play important roles. For instance, maybe polar bears could survive at the South pole as well as the North pole. But they were never introduced to the South pole, and have had no way to disperse, or spread, across the oceans in between.\r\nOnce a species has been introduced to an area, it can only survive in that area if the conditions are right. Some of the conditions that must be "right" are biotic, meaning that they\'re directly related to living organisms. For instance, a species may not be able to get a foothold in a given area because a competing species, predator, or pathogen is already there, or because no food supply is available.\r\nMany factors that determine whether a species can live an an area are abiotic, or non-living. Examples of important abiotic factors include temperature, sunlight, and moisture level. These factors sometimes determine whether a species can live in a place in a very direct way. For instance, a plant species will only take root and spread in a place where it\'s getting enough sunlight and water.\r\nHowever, abiotic factors can also affect where species are found in less direct ways. For instance, climate and soil quality directly affect the type and number of plants that can grow in a particular area. Since energy enters ecosystems via plants and other primary producers, climate and soil quality indirectly determine what other trophic levels, or "food chain links," the ecosystem can support.'
ERROR:root:orig selected_specific len[[["Since energy enters ecosystems via plants and other primary producers, climate and soil quality indirectly determine what other trophic levels, or \"food chain links,\" the ecosystem can support.",{},13],["For instance, a species may not be able to get a foothold in a given area because a competing species, predator, or pathogen is already there, or because no food supply is available.",{},6],["For instance, a plant species will only take root and spread in a place where it's getting enough sunlight and water.",{},10],["Once a species has been introduced to an area, it can only survive in that area if the conditions are right.",{},4]],["What determines a species' range?","Historical chance and geographical barriers can play important roles.","For instance, maybe polar bears could survive at the South pole as well as the North pole.","But they were never introduced to the South pole, and have had no way to disperse, or spread, across the oceans in between.","Once a species has been introduced to an area, it can only survive in that area if the conditions are right.","Some of the conditions that must be \"right\" are biotic, meaning that they're directly related to living organisms.","For instance, a species may not be able to get a foothold in a given area because a competing species, predator, or pathogen is already there, or because no food supply is available.","Many factors that determine whether a species can live an an area are abiotic, or non-living.","Examples of important abiotic factors include temperature, sunlight, and moisture level.","Many factors that determine whether a species can live an an area sometimes determine whether a species can live in a place in a very direct way.","For instance, a plant species will only take root and spread in a place where it's getting enough sunlight and water.","However, abiotic factors can also affect where species are found in less direct ways.","For instance, climate and soil quality directly affect the type and number of plants that can grow in a particular area.","Since energy enters ecosystems via plants and other primary producers, climate and soil quality indirectly determine what other trophic levels, or \"food chain links,\" the ecosystem can support."]]
ERROR:root:orig selected_specific len4
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents4
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['For instance, climate and soil quality directly affect the type and number of plants that can grow in a particular area. Since energy enters ecosystems via plants and other primary producers, climate and soil quality indirectly determine what other trophic levels, or "food chain links," the ecosystem can support.', 'Some of the conditions that must be "right" are biotic, meaning that they\'re directly related to living organisms. For instance, a species may not be able to get a foothold in a given area because a competing species, predator, or pathogen is already there, or because no food supply is available.', "Many factors that determine whether a species can live an an area sometimes determine whether a species can live in a place in a very direct way. For instance, a plant species will only take root and spread in a place where it's getting enough sunlight and water.", 'But they were never introduced to the South pole, and have had no way to disperse, or spread, across the oceans in between. Once a species has been introduced to an area, it can only survive in that area if the conditions are right.']), ('questions', ['What enters an ecosystem via plants and other primary producers?', 'What is one reason a species may not be able to get a foothold in a given area?', 'What is the main difference between a plant and a plant living in an area?', 'When can a species survive in an area?']), ('answers', ['energy', 'food supply is available', 'only take root and spread', 'if the conditions are right']), ('options', [['microbes', 'detritus', 'organic matter'], ['too many competing species', 'the climate is too harsh', 'there is not enough water'], ['only spread but not take root', 'both spread and take root', 'neither spread nor take root'], ['if the species wants to', 'if the species can reproduce', 'if the area is not too large']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.899870
ERROR:root:api_check 0:00:00.392015
ERROR:root:payload: 'Another important aspect is that all organisms have tolerance ranges – microbes, fungi, plants, and animals, including humans. While human technology has allowed us to live and work in more extreme environments, humans still freeze to death, die from heat stroke, drown, suffocate, and die from exposure to acid or lack of fresh water to drink. Our protective technology and our tolerance for too much or too little of these factors only goes so far – beyond the tolerance range, we cannot and do not survive.\nBiologists are frequently interested in studying and understanding the tolerance ranges of different species for different environmental factors. If you draw a graph of how many individuals in a population live under which part of the range of any given factor, you almost always get a bell-shaped curve. Take a look at the two tolerance range curves shown below. The horizontal axis could be any of the abiotic factors (environmental conditions), but for now let’s say it is for oxygen levels in freshwater lakes. If you are studying a particular species of fish, let’s say the blackstripe topminnow (Fundulus notatus), you could go out and measure the oxygen level of every lake where you find the topminnow and also count how many topminnows are in each lake. When you make a graph of your data, it might look like Graph 1. That graph is telling you that the majority of the topminnows live in the middle part of the oxygen range; that’s where the curve is highest. As you move from the middle part to lower oxygen levels (to the left) or to higher oxygen levels (to the right), the curve is not as high – there are fewer individuals that live in lakes that have the lower or higher amounts of oxygen. And if the oxygen level is extremely low or high, it is beyond the tolerance range of the species and no topminnows live in those lakes.'
ERROR:root:orig input: 'Another important aspect is that all organisms have tolerance ranges – microbes, fungi, plants, and animals, including humans. While human technology has allowed us to live and work in more extreme environments, humans still freeze to death, die from heat stroke, drown, suffocate, and die from exposure to acid or lack of fresh water to drink. Our protective technology and our tolerance for too much or too little of these factors only goes so far – beyond the tolerance range, we cannot and do not survive.\r\nBiologists are frequently interested in studying and understanding the tolerance ranges of different species for different environmental factors. If you draw a graph of how many individuals in a population live under which part of the range of any given factor, you almost always get a bell-shaped curve. Take a look at the two tolerance range curves shown below. The horizontal axis could be any of the abiotic factors (environmental conditions), but for now let’s say it is for oxygen levels in freshwater lakes. If you are studying a particular species of fish, let’s say the blackstripe topminnow (Fundulus notatus), you could go out and measure the oxygen level of every lake where you find the topminnow and also count how many topminnows are in each lake. When you make a graph of your data, it might look like Graph 1. That graph is telling you that the majority of the topminnows live in the middle part of the oxygen range; that’s where the curve is highest. As you move from the middle part to lower oxygen levels (to the left) or to higher oxygen levels (to the right), the curve is not as high – there are fewer individuals that live in lakes that have the lower or higher amounts of oxygen. And if the oxygen level is extremely low or high, it is beyond the tolerance range of the species and no topminnows live in those lakes.'
ERROR:root:orig selected_specific len[[["If you are studying a particular species of fish, let’s say the blackstripe topminnow (Fundulus notatus), you could go out and measure the oxygen level of every lake where you find the topminnow and also count how many topminnows are in each lake.",{},7],["As you move from the middle part to lower oxygen levels (to the left) or to higher oxygen levels (to the right), the curve is not as high – there are fewer individuals that live in lakes that have the lower or higher amounts of oxygen.",{},10],["While human technology has allowed us to live and work in more extreme environments, humans still freeze to death, die from heat stroke, drown, suffocate, and die from exposure to acid or lack of fresh water to drink.",{},1],["The horizontal axis could be any of the abiotic factors (environmental conditions), but for now let’s say it is for oxygen levels in freshwater lakes.",{},6],["And if the oxygen level is extremely low or high, it is beyond the tolerance range of the species and no topminnows live in those lakes.",{},11],["That graph is telling you that the majority of the topminnows live in the middle part of the oxygen range; that’s where the curve is highest.",{},9],["If you draw a graph of how many individuals in a population live under which part of the range of any given factor, you almost always get a bell-shaped curve.",{},4],["Another important aspect is that all organisms have tolerance ranges – microbes, fungi, plants, and animals, including humans.",{},0]],["Another important aspect is that all organisms have tolerance ranges – microbes, fungi, plants, and animals, including humans.","While human technology has allowed us to live and work in more extreme environments, humans still freeze to death, die from heat stroke, drown, suffocate, and die from exposure to acid or lack of fresh water to drink.","Our protective technology and our tolerance for too much or too little of these factors only goes so far – beyond the tolerance range, we cannot and do not survive.","Biologists are frequently interested in studying and understanding the tolerance ranges of different species for different environmental factors.","If you draw a graph of how many individuals in a population live under which part of the range of any given factor, you almost always get a bell-shaped curve.","Take a look at the two tolerance range curves shown below.","The horizontal axis could be any of the abiotic factors (environmental conditions), but for now let’s say it is for oxygen levels in freshwater lakes.","If you are studying a particular species of fish, let’s say the blackstripe topminnow (Fundulus notatus), you could go out and measure the oxygen level of every lake where you find the topminnow and also count how many topminnows are in each lake.","When you make a graph of your data, it might look like Graph 1.","Graph 1 is telling you that the majority of the topminnows live in the middle part of the oxygen range; that’s where the curve is highest.","As you move from the middle part to lower oxygen levels (to the left) or to higher oxygen levels (to the right), the curve is not as high – there are fewer individuals that live in lakes that have the lower or higher amounts of oxygen.","And if the oxygen level is extremely low or high, it is beyond the tolerance range of the species and no topminnows live in those lakes."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents8
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The horizontal axis could be any of the abiotic factors (environmental conditions), but for now let’s say it is for oxygen levels in freshwater lakes. If you are studying a particular species of fish, let’s say the blackstripe topminnow (Fundulus notatus), you could go out and measure the oxygen level of every lake where you find the topminnow and also count how many topminnows are in each lake.', 'Graph 1 is telling you that the majority of the topminnows live in the middle part of the oxygen range; that’s where the curve is highest. As you move from the middle part to lower oxygen levels (to the left) or to higher oxygen levels (to the right), the curve is not as high – there are fewer individuals that live in lakes that have the lower or higher amounts of oxygen.', 'Another important aspect is that all organisms have tolerance ranges – microbes, fungi, plants, and animals, including humans. While human technology has allowed us to live and work in more extreme environments, humans still freeze to death, die from heat stroke, drown, suffocate, and die from exposure to acid or lack of fresh water to drink.', 'Take a look at the two tolerance range curves shown below. The horizontal axis could be any of the abiotic factors (environmental conditions), but for now let’s say it is for oxygen levels in freshwater lakes.', 'As you move from the middle part to lower oxygen levels (to the left) or to higher oxygen levels (to the right), the curve is not as high – there are fewer individuals that live in lakes that have the lower or higher amounts of oxygen. And if the oxygen level is extremely low or high, it is beyond the tolerance range of the species and no topminnows live in those lakes.', 'When you make a graph of your data, it might look like Graph 1. That graph is telling you that the majority of the topminnows live in the middle part of the oxygen range; that’s where the curve is highest.', 'Biologists are frequently interested in studying and understanding the tolerance ranges of different species for different environmental factors. If you draw a graph of how many individuals in a population live under which part of the range of any given factor, you almost always get a bell-shaped curve.', ' Another important aspect is that all organisms have tolerance ranges – microbes, fungi, plants, and animals, including humans.']), ('questions', ['What is the name of the species of fish you want to study?', 'What is the middle part of the oxygen range?', 'What has allowed us to live in extreme environments?', 'What are environmental conditions?', 'What happens if the oxygen level is extremely low or high?', 'Where does the curve say most topminnows live?', 'What is the result of a graph showing how many people live under a given range of environmental factors?', 'What are some organisms that have tolerance ranges?']), ('answers', ['blackstripe topminnow', 'lower oxygen levels', 'human technology', 'abiotic factors', 'beyond the tolerance range of the species', 'middle part of the oxygen range', 'bell-shaped curve', 'microbes, fungi, plants, and animals']), ('options', [['blackstripe suckermouth minnow', 'blackstripe cisco'], ['middle oxygen levels', 'high oxygen levels', 'higher oxygen levels'], ['extraterrestrial life', 'natural disasters', 'animal instincts'], ['biotic factors', 'physical factors', 'social factors'], ['the organism starves to death', 'the organism dies', 'the organism adapts to the conditions'], ['top part of the water range', 'middle part of the water range', 'bottom part of the oxygen range'], ['a straight line', 'straight line segment', 'polynomial equation'], ['plants, animals, and humans', 'fungi, microbes, and animals', 'microbes, plants, and animals']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:15.793352
ERROR:root:api_check 0:00:06.651616
ERROR:root:payload: 'Though Khrushchev initially refused to acknowledge the presence of the missiles in Cuba and declared the US naval blockade to be an act of war, he ordered the suspension of all weapons deliveries currently in transit. Over the course of approximately two weeks, Kennedy and Khrushchev negotiated a peaceful outcome to the missile crisis. The Soviets compared their provision of nuclear weapons to Cuba with the stationing of Jupiter missiles in Turkey, which were in range of Soviet territory. Kennedy agreed to remove the missiles from Turkey, and also pledged that the US government would not undertake another invasion of Cuba.\nThroughout the negotiations, Khrushchev failed to consult with Castro. For Castro, this was humiliating and seemed to prove that the Soviets prioritized relations with the United States over relations with their own allies. Castro hoped to negotiate the closing of the US naval base at Guantanamo and the cessation of U-2 flights over Cuban territory. Ultimately, Khrushchev agreed to remove all of the nuclear missiles from Cuba, while failing to even broach the subject of Castro’s demands.'
ERROR:root:orig input: 'Though Khrushchev initially refused to acknowledge the presence of the missiles in Cuba and declared the US naval blockade to be an act of war, he ordered the suspension of all weapons deliveries currently in transit. Over the course of approximately two weeks, Kennedy and Khrushchev negotiated a peaceful outcome to the missile crisis. The Soviets compared their provision of nuclear weapons to Cuba with the stationing of Jupiter missiles in Turkey, which were in range of Soviet territory. Kennedy agreed to remove the missiles from Turkey, and also pledged that the US government would not undertake another invasion of Cuba.\r\nThroughout the negotiations, Khrushchev failed to consult with Castro. For Castro, this was humiliating and seemed to prove that the Soviets prioritized relations with the United States over relations with their own allies. Castro hoped to negotiate the closing of the US naval base at Guantanamo and the cessation of U-2 flights over Cuban territory. Ultimately, Khrushchev agreed to remove all of the nuclear missiles from Cuba, while failing to even broach the subject of Castro’s demands.'
ERROR:root:orig selected_specific len[[["The Soviets compared their provision of nuclear weapons to Cuba with the stationing of Jupiter missiles in Turkey, which were in range of Soviet territory.",{},2],["Castro hoped to negotiate the closing of the US naval base at Guantanamo and the cessation of U-2 flights over Cuban territory.",{},6],["Though Khrushchev initially refused to acknowledge the presence of the missiles in Cuba and declared the US naval blockade to be an act of war, he ordered the suspension of all weapons deliveries currently in transit.",{},0],["Kennedy agreed to remove the missiles from Turkey, and also pledged that the US government would not undertake another invasion of Cuba.",{},3],["Over the course of approximately two weeks, Kennedy and Khrushchev negotiated a peaceful outcome to the missile crisis.",{},1],["Ultimately, Khrushchev agreed to remove all of the nuclear missiles from Cuba, while failing to even broach the subject of Castro’s demands.",{},7]],["Though Khrushchev initially refused to acknowledge the presence of the missiles in Cuba and declared the US naval blockade to be an act of war, he ordered the suspension of all weapons deliveries currently in transit.","Over the course of approximately two weeks, Kennedy and Khrushchev negotiated a peaceful outcome to the missile crisis.","The Soviets compared their provision of nuclear weapons to Cuba with the stationing of Jupiter missiles in Turkey, which were in range of Soviet territory.","Kennedy agreed to remove the missiles from Turkey, and also pledged that the US government would not undertake another invasion of Cuba.","Throughout the negotiations, Khrushchev failed to consult with Castro.","For Castro, this was humiliating and seemed to prove that the Soviets prioritized relations with the United States over relations with Kennedy and Khrushchev's own allies.","Castro hoped to negotiate the closing of the US naval base at Guantanamo and the cessation of U-2 flights over Cuban territory.","Ultimately, Khrushchev agreed to remove all of the nuclear missiles from Cuba, while failing to even broach the subject of Castro’s demands."]]
ERROR:root:orig selected_specific len6
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents6
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Over the course of approximately two weeks, Kennedy and Khrushchev negotiated a peaceful outcome to the missile crisis. The Soviets compared their provision of nuclear weapons to Cuba with the stationing of Jupiter missiles in Turkey, which were in range of Soviet territory.', "For Castro, this was humiliating and seemed to prove that the Soviets prioritized relations with the United States over relations with Kennedy and Khrushchev's own allies. Castro hoped to negotiate the closing of the US naval base at Guantanamo and the cessation of U-2 flights over Cuban territory.", ' Though Khrushchev initially refused to acknowledge the presence of the missiles in Cuba and declared the US naval blockade to be an act of war, he ordered the suspension of all weapons deliveries currently in transit.', 'The Soviets compared their provision of nuclear weapons to Cuba with the stationing of Jupiter missiles in Turkey, which were in range of Soviet territory. Kennedy agreed to remove the missiles from Turkey, and also pledged that the US government would not undertake another invasion of Cuba.', 'Though Khrushchev initially refused to acknowledge the presence of the missiles in Cuba and declared the US naval blockade to be an act of war, he ordered the suspension of all weapons deliveries currently in transit. Over the course of approximately two weeks, Kennedy and Khrushchev negotiated a peaceful outcome to the missile crisis.', 'Castro hoped to negotiate the closing of the US naval base at Guantanamo and the cessation of U-2 flights over Cuban territory. Ultimately, Khrushchev agreed to remove all of the nuclear missiles from Cuba, while failing to even broach the subject of Castro’s demands.']), ('questions', ['Where were Jupiter missiles stationed?', 'What territory did Castro want to end U-2 flights over?', 'Who ordered the suspension of weapons deliveries?', 'What did Kennedy promise to do?', 'Who negotiated a peaceful outcome to the missile crisis?', 'Who agreed to remove all nuclear missiles from Cuba?']), ('answers', ['Turkey', 'Cuban', 'Khrushchev', 'the US government would not undertake another invasion of Cuba', 'Kennedy and Khrushchev', 'Khrushchev']), ('options', [['Greece', 'Syria', 'Italy'], ['Czechoslovak', 'Soviet', 'Mexican'], ['Cuba', 'Mikhail Gorbachev', 'Kennedy'], ['he would end the Cold War', 'he would remove the missiles from Turkey', 'he would end the US trade embargo with Cuba'], ['Kennedy and Castro', 'Castro and Khrushchev', 'Khrushchev and Castro'], ['Mikhail Gorbachev', 'Kennedy', 'Castro']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:33.639283
ERROR:root:api_check 0:00:00.376767
ERROR:root:payload: 'In peace negotiations at Geneva, the decision was reached to divide Vietnam into northern and southern halves. The communists, headed by Ho Chi Minh, would govern the northern half, with its capital at Hanoi, while South Vietnam, with its capital at Saigon, would remain non-communist. The Soviet Union and the People’s Republic of China supported the north, while the United States was determined to maintain an independent, non-communist South Vietnam.\nIn December 1960, the National Liberation Front, commonly called the Viet Cong, emerged to challenge the South Vietnamese government. A civil war erupted for control of South Vietnam, while Hanoi sought to unite the country under its own communist leadership. The Second Indochina War began in earnest with the US commitment to prevent the communists from overrunning South Vietnam. In spring 1961, the administration of John F. Kennedy expanded US support for the South Vietnamese government, including an increase in US military advisers, the doubling of military assistance, and authorization of the use of napalm, herbicides, and defoliants.\nThe escalating US involvement in Southeast Asia was driven by the logic of the domino theory, which contended that the falling of one country to communism would result in other surrounding countries succumbing to communism, much as one toppled domino will take down others in a row. The containment strategy, laid out by George Kennan in the Long Telegram, dictated that the United States do everything in its power to prevent the spread of communism. US officials believed that if South Vietnam fell to communism, so would the surrounding countries of Indonesia, Thailand, Burma, Malaysia, Laos, and Cambodia.'
ERROR:root:orig input: 'In peace negotiations at Geneva, the decision was reached to divide Vietnam into northern and southern halves. The communists, headed by Ho Chi Minh, would govern the northern half, with its capital at Hanoi, while South Vietnam, with its capital at Saigon, would remain non-communist. The Soviet Union and the People’s Republic of China supported the north, while the United States was determined to maintain an independent, non-communist South Vietnam.\r\nIn December 1960, the National Liberation Front, commonly called the Viet Cong, emerged to challenge the South Vietnamese government. A civil war erupted for control of South Vietnam, while Hanoi sought to unite the country under its own communist leadership. The Second Indochina War began in earnest with the US commitment to prevent the communists from overrunning South Vietnam. In spring 1961, the administration of John F. Kennedy expanded US support for the South Vietnamese government, including an increase in US military advisers, the doubling of military assistance, and authorization of the use of napalm, herbicides, and defoliants.\r\nThe escalating US involvement in Southeast Asia was driven by the logic of the domino theory, which contended that the falling of one country to communism would result in other surrounding countries succumbing to communism, much as one toppled domino will take down others in a row. The containment strategy, laid out by George Kennan in the Long Telegram, dictated that the United States do everything in its power to prevent the spread of communism. US officials believed that if South Vietnam fell to communism, so would the surrounding countries of Indonesia, Thailand, Burma, Malaysia, Laos, and Cambodia.'
ERROR:root:orig selected_specific len[[["In spring 1961, the administration of John F. Kennedy expanded US support for the South Vietnamese government, including an increase in US military advisers, the doubling of military assistance, and authorization of the use of napalm, herbicides, and defoliants.",{},6],["The communists, headed by Ho Chi Minh, would govern the northern half, with its capital at Hanoi, while South Vietnam, with its capital at Saigon, would remain non-communist.",{},1],["In December 1960, the National Liberation Front, commonly called the Viet Cong, emerged to challenge the South Vietnamese government.",{},3],["The escalating US involvement in Southeast Asia was driven by the logic of the domino theory, which contended that the falling of one country to communism would result in other surrounding countries succumbing to communism, much as one toppled domino will take down others in a row.",{},7],["The Soviet Union and the People’s Republic of China supported the north, while the United States was determined to maintain an independent, non-communist South Vietnam.",{},2],["US officials believed that if South Vietnam fell to communism, so would the surrounding countries of Indonesia, Thailand, Burma, Malaysia, Laos, and Cambodia.",{},9],["A civil war erupted for control of South Vietnam, while Hanoi sought to unite the country under its own communist leadership.",{},4],["The containment strategy, laid out by George Kennan in the Long Telegram, dictated that the United States do everything in its power to prevent the spread of communism.",{},8]],["In peace negotiations at Geneva, the decision was reached to divide Vietnam into northern and southern halves.","The communists, headed by Ho Chi Minh, would govern the northern half, with its capital at Hanoi, while South Vietnam, with its capital at Saigon, would remain non-communist.","The Soviet Union and the People’s Republic of China supported the north, while the United States was determined to maintain an independent, non-communist South Vietnam.","In December 1960, the National Liberation Front, commonly called the Viet Cong, emerged to challenge the South Vietnamese government.","A civil war erupted for control of South Vietnam, while Hanoi sought to unite the country under China's own communist leadership.","The Second Indochina War began in earnest with the US commitment to prevent the communists from overrunning South Vietnam.","In spring 1961, the administration of John F. Kennedy expanded US support for the South Vietnamese government, including an increase in US military advisers, the doubling of military assistance, and authorization of the use of napalm, herbicides, and defoliants.","The escalating US involvement in Southeast Asia was driven by the logic of the domino theory, which contended that the falling of one country to communism would result in other surrounding countries succumbing to communism, much as one toppled domino will take down others in a row.","The containment strategy, laid out by George Kennan in the Long Telegram, dictated that the United States do everything in its power to prevent the spread of communism.","US officials believed that if South Vietnam fell to communism, so would the surrounding countries of Indonesia, Thailand, Burma, Malaysia, Laos, and Cambodia."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents8
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The Second Indochina War began in earnest with the US commitment to prevent the communists from overrunning South Vietnam. In spring 1961, the administration of John F. Kennedy expanded US support for the South Vietnamese government, including an increase in US military advisers, the doubling of military assistance, and authorization of the use of napalm, herbicides, and defoliants.', 'In peace negotiations at Geneva, the decision was reached to divide Vietnam into northern and southern halves. The communists, headed by Ho Chi Minh, would govern the northern half, with its capital at Hanoi, while South Vietnam, with its capital at Saigon, would remain non-communist.', 'The Soviet Union and the People’s Republic of China supported the north, while the United States was determined to maintain an independent, non-communist South Vietnam. In December 1960, the National Liberation Front, commonly called the Viet Cong, emerged to challenge the South Vietnamese government.', 'In spring 1961, the administration of John F. Kennedy expanded US support for the South Vietnamese government, including an increase in US military advisers, the doubling of military assistance, and authorization of the use of napalm, herbicides, and defoliants. The escalating US involvement in Southeast Asia was driven by the logic of the domino theory, which contended that the falling of one country to communism would result in other surrounding countries succumbing to communism, much as one toppled domino will take down others in a row.', 'The communists, headed by Ho Chi Minh, would govern the northern half, with its capital at Hanoi, while South Vietnam, with its capital at Saigon, would remain non-communist. The Soviet Union and the People’s Republic of China supported the north, while the United States was determined to maintain an independent, non-communist South Vietnam.', 'The containment strategy, laid out by George Kennan in the Long Telegram, dictated that the United States do everything in its power to prevent the spread of communism. US officials believed that if South Vietnam fell to communism, so would the surrounding countries of Indonesia, Thailand, Burma, Malaysia, Laos, and Cambodia.', 'In December 1960, the National Liberation Front, commonly called the Viet Cong, emerged to challenge the South Vietnamese government. A civil war erupted for control of South Vietnam, while Hanoi sought to unite the country under its own communist leadership.', 'The escalating US involvement in Southeast Asia was driven by the logic of the domino theory, which contended that the falling of one country to communism would result in other surrounding countries succumbing to communism, much as one toppled domino will take down others in a row. The containment strategy, laid out by George Kennan in the Long Telegram, dictated that the United States do everything in its power to prevent the spread of communism.']), ('questions', ['What US president increased US support for South Vietnam?', 'Who was the leader of the communists in Vietnam?', "What group challenged South Vietnam's government in 1960?", 'What theory states that the fall of one country to communism would result in other countries succumbing to communism?', 'Which countries supported the north of Vietnam?', 'Who believed that if South Vietnam fell to communism, the surrounding countries would also be affected?', 'What type of war erupted in South Vietnam in 1960?', 'Who laid out the containment strategy in the Long Telegram?']), ('answers', ['John F. Kennedy', 'Ho Chi Minh', 'the National Liberation Front', 'the domino theory', 'The Soviet Union and the People’s Republic of China', 'US officials', 'civil war', 'George Kennan']), ('options', [['Richard Nixon', 'Dwight D. Eisenhower', 'Lyndon Johnson'], ['Truong Dinh Diem', 'Nguyen Van Thieu', 'Nguyen Van Troi'], ['the Communist Party of South Vietnam', 'the anti-government protesters', 'the Buddhist monks'], ['the balance of power', 'the theory of the iron triangle', 'the theory of the contagion'], ['China and North Korea', 'The Soviet Union and North Korea', 'The United States and the People’s Republic of China'], ['North Vietnamese officials', 'French officials', 'Vietnamese officials'], ['war of national liberation', 'limited war', 'Cold War'], ['Averell Harriman', 'Joseph Stalin', 'Walt Disney']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:16.580377
ERROR:root:api_check 0:00:00.381328
ERROR:root:payload: 'The 1968 Democratic National Convention in Chicago was a stark demonstration of just how divided the Democratic party had become. Students and members of the counterculture, known collectively as the “New Left” made up one faction, while the older generation of New Deal Democrats, which became known as the “Old Left,” constituted another. The convention descended into utter chaos as thousands of antiwar activists converged on the streets of Chicago, where law enforcement officers clubbed them with nightsticks and doused them in tear gas.\nDismayed with the lack of progress in the Vietnam War and disturbed by the factionalism rupturing the Democratic Party, Lyndon Johnson chose not to run for reelection. The Democratic National Convention nominated Johnson’s vice president, Hubert Humphrey. He ran in a three-way race against Republican Richard Nixon and Alabama Governor George Wallace, a Southern segregationist who ran as an independent and sought to capitalize on white backlash against the gains of the Civil Rights Movement.\n1968 was in many ways a watershed year. The Reverend Martin Luther King, Jr. was assassinated in Memphis, Tennessee by James Earl Ray, an ex-convict and avowed white supremacist. The news of King’s assassination sparked a conflagration of urban riots and protests.\n A mere two months later, Robert F. Kennedy, the younger brother of President John F. Kennedy who was campaigning for the Democratic presidential nomination in California, was assassinated by Sirhan Sirhan, a Palestinian incensed by Kennedy’s pro-Israel stance.\nThe assassinations contributed to the perception among many Americans that the social fabric of the nation was ripping apart.'
ERROR:root:orig input: 'The 1968 Democratic National Convention in Chicago was a stark demonstration of just how divided the Democratic party had become. Students and members of the counterculture, known collectively as the “New Left” made up one faction, while the older generation of New Deal Democrats, which became known as the “Old Left,” constituted another. The convention descended into utter chaos as thousands of antiwar activists converged on the streets of Chicago, where law enforcement officers clubbed them with nightsticks and doused them in tear gas.\r\nDismayed with the lack of progress in the Vietnam War and disturbed by the factionalism rupturing the Democratic Party, Lyndon Johnson chose not to run for reelection. The Democratic National Convention nominated Johnson’s vice president, Hubert Humphrey. He ran in a three-way race against Republican Richard Nixon and Alabama Governor George Wallace, a Southern segregationist who ran as an independent and sought to capitalize on white backlash against the gains of the Civil Rights Movement.\r\n1968 was in many ways a watershed year. The Reverend Martin Luther King, Jr. was assassinated in Memphis, Tennessee by James Earl Ray, an ex-convict and avowed white supremacist. The news of King’s assassination sparked a conflagration of urban riots and protests.\r\n A mere two months later, Robert F. Kennedy, the younger brother of President John F. Kennedy who was campaigning for the Democratic presidential nomination in California, was assassinated by Sirhan Sirhan, a Palestinian incensed by Kennedy’s pro-Israel stance.\r\nThe assassinations contributed to the perception among many Americans that the social fabric of the nation was ripping apart.'
ERROR:root:orig selected_specific len[[["A mere two months later, Robert F. Kennedy, the younger brother of President John F. Kennedy who was campaigning for the Democratic presidential nomination in California, was assassinated by Sirhan Sirhan, a Palestinian incensed by Kennedy’s pro-Israel stance.",{},9],["The Reverend Martin Luther King, Jr. was assassinated in Memphis, Tennessee by James Earl Ray, an ex-convict and avowed white supremacist.",{},7],["He ran in a three-way race against Republican Richard Nixon and Alabama Governor George Wallace, a Southern segregationist who ran as an independent and sought to capitalize on white backlash against the gains of the Civil Rights Movement.",{},5],["The convention descended into utter chaos as thousands of antiwar activists converged on the streets of Chicago, where law enforcement officers clubbed them with nightsticks and doused them in tear gas.",{},2],["Dismayed with the lack of progress in the Vietnam War and disturbed by the factionalism rupturing the Democratic Party, Lyndon Johnson chose not to run for reelection.",{},3],["The Democratic National Convention nominated Johnson’s vice president, Hubert Humphrey.",{},4],["Students and members of the counterculture, known collectively as the “New Left” made up one faction, while the older generation of New Deal Democrats, which became known as the “Old Left,” constituted another.",{},1]],["The 1968 Democratic National Convention in Chicago was a stark demonstration of just how divided the Democratic party had become.","Students and members of the counterculture, known collectively as the “New Left” made up one faction, while the older generation of New Deal Democrats, which became known as the “Old Left,” constituted another.","The convention descended into utter chaos as thousands of antiwar activists converged on the streets of Chicago, where law enforcement officers clubbed them with nightsticks and doused them in tear gas.","Dismayed with the lack of progress in the Vietnam War and disturbed by the factionalism rupturing the Democratic Party, Lyndon Johnson chose not to run for reelection.","The Democratic National Convention nominated Johnson’s vice president, Hubert Humphrey.","Lyndon Johnson ran in a three-way race against Republican Richard Nixon and Alabama Governor George Wallace, a Southern segregationist who ran as an independent and sought to capitalize on white backlash against the gains of the Civil Rights Movement.","1968 was in many ways a watershed year.","The Reverend Martin Luther King, Jr. was assassinated in Memphis, Tennessee by James Earl Ray, an ex-convict and avowed white supremacist.","The news of King’s assassination sparked a conflagration of urban riots and protests.","A mere two months later, Robert F. Kennedy, the younger brother of President John F. Kennedy who was campaigning for the Democratic presidential nomination in California, was assassinated by Sirhan Sirhan, a Palestinian incensed by Kennedy’s pro-Israel stance.","The assassinations contributed to the perception among many Americans that the social fabric of the nation was ripping apart."]]
ERROR:root:orig selected_specific len7
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents7
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The news of King’s assassination sparked a conflagration of urban riots and protests. A mere two months later, Robert F. Kennedy, the younger brother of President John F. Kennedy who was campaigning for the Democratic presidential nomination in California, was assassinated by Sirhan Sirhan, a Palestinian incensed by Kennedy’s pro-Israel stance.', '1968 was in many ways a watershed year. The Reverend Martin Luther King, Jr. was assassinated in Memphis, Tennessee by James Earl Ray, an ex-convict and avowed white supremacist.', 'The Democratic National Convention nominated Johnson’s vice president, Hubert Humphrey. He ran in a three-way race against Republican Richard Nixon and Alabama Governor George Wallace, a Southern segregationist who ran as an independent and sought to capitalize on white backlash against the gains of the Civil Rights Movement.', 'Students and members of the counterculture, known collectively as the “New Left” made up one faction, while the older generation of New Deal Democrats, which became known as the “Old Left,” constituted another. The convention descended into utter chaos as thousands of antiwar activists converged on the streets of Chicago, where law enforcement officers clubbed them with nightsticks and doused them in tear gas.', 'The convention descended into utter chaos as thousands of antiwar activists converged on the streets of Chicago, where law enforcement officers clubbed them with nightsticks and doused them in tear gas. Dismayed with the lack of progress in the Vietnam War and disturbed by the factionalism rupturing the Democratic Party, Lyndon Johnson chose not to run for reelection.', 'Dismayed with the lack of progress in the Vietnam War and disturbed by the factionalism rupturing the Democratic Party, Lyndon Johnson chose not to run for reelection. The Democratic National Convention nominated Johnson’s vice president, Hubert Humphrey.']), ('questions', ['Who was President of the United States prior to Kennedy?', 'Who was the assassination of Martin Luther King Jr.?', 'Who did Humphrey run against?', 'How many antiwar activists converged on the streets of Chicago?', 'What did Johnson decide not to run for?', 'Who did the Democratic National Convention nominate for the position of vice president?']), ('answers', ['John F. Kennedy', 'James Earl Ray', 'Richard Nixon and Alabama Governor George Wallace', 'thousands', 'reelection', 'Hubert Humphrey']), ('options', [['John Adams', 'Franklin D. Roosevelt', 'Abraham Lincoln'], ['James Earl Wright', 'Lee Harvey Oswald', 'Sirhan Sirhan'], ['Nixon and California Governor Ronald Reagan', 'Reagan and California Governor Jerry Brown', 'Nixon and Massachusetts Senator Edward Kennedy'], ['a few dozen', 'tens of thousands', 'hundreds'], ['reelection as president of the United States', 'governor of Texas', 'president of the United States'], ['John F. Kennedy', 'Nelson Rockefeller', 'Lyndon Johnson']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:09.495427
ERROR:root:api_check 0:00:00.382126
ERROR:root:payload: 'Rotational inertia is a property of any object which can be rotated. It is a scalar value which tells us how difficult it is to change the rotational velocity of the object around a given rotational axis.\nRotational inertia plays a similar role in rotational mechanics to mass in linear mechanics. Indeed, the rotational inertia of an object depends on its mass. It also depends on the distribution of that mass relative to the axis of rotation.\nWhen a mass moves further from the axis of rotation it becomes increasingly more difficult to change the rotational velocity of the system. Intuitively, this is because the mass is now carrying more momentum with it around the circle (due to the higher speed) and because the momentum vector is changing more quickly. Both of these effects depend on the distance from the axis.'
ERROR:root:orig input: 'Rotational inertia is a property of any object which can be rotated. It is a scalar value which tells us how difficult it is to change the rotational velocity of the object around a given rotational axis.\r\nRotational inertia plays a similar role in rotational mechanics to mass in linear mechanics. Indeed, the rotational inertia of an object depends on its mass. It also depends on the distribution of that mass relative to the axis of rotation.\r\nWhen a mass moves further from the axis of rotation it becomes increasingly more difficult to change the rotational velocity of the system. Intuitively, this is because the mass is now carrying more momentum with it around the circle (due to the higher speed) and because the momentum vector is changing more quickly. Both of these effects depend on the distance from the axis.'
ERROR:root:orig selected_specific len[[["It is a scalar value which tells us how difficult it is to change the rotational velocity of the object around a given rotational axis.",{},1],["When a mass moves further from the axis of rotation it becomes increasingly more difficult to change the rotational velocity of the system.",{},5]],["Rotational inertia is a property of any object which can be rotated.","It is a scalar value which tells us how difficult it is to change the rotational velocity of the object around a given rotational axis.","Rotational inertia plays a similar role in rotational mechanics to mass in linear mechanics.","Indeed, the rotational inertia of an object depends on its mass.","an object also depends on the distribution of its mass relative to the axis of rotation.","When a mass moves further from the axis of rotation it becomes increasingly more difficult to change the rotational velocity of the system.","Intuitively, this is because the mass is now carrying more momentum with its mass around the circle (due to the higher speed) and because the momentum vector is changing more quickly.","Both of these effects depend on the distance from the axis."]]
ERROR:root:orig selected_specific len2
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Rotational inertia is a property of any object which can be rotated. It is a scalar value which tells us how difficult it is to change the rotational velocity of the object around a given rotational axis.', 'an object also depends on the distribution of its mass relative to the axis of rotation. When a mass moves further from the axis of rotation it becomes increasingly more difficult to change the rotational velocity of the system.']), ('questions', ['What type of value is rotational inertia?', 'Is it easier or harder to change the rotational velocity of an object when it moves further from the axis of rotation?']), ('answers', ['scalar', 'more difficult']), ('options', [['tensors', 'scalar multiplied by a vector', 'vector'], ['it is impossible to change the rotational velocity of an object when it moves further from the axis of rotation', 'we cannot change the rotational velocity of an object when it moves further from the axis of rotation', 'easier']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:08.589551
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:05.560669
ERROR:root:payload: 'Because U.S. recycling was dependent on China for so many years, our domestic recycling infrastructure was never developed, so there was no economical or efficient way to handle recycling when the market disappeared.\n\n“The way the system is configured right now, recycling is a service that competes — and unsurprisingly often loses — for local funding that is also needed for schools, policing, et cetera,” said Stephanie Kersten-Johnston, an adjunct professor in Columbia University’s Sustainability Management Master’s Program and director of circular ventures at The Recycling Partnership. “Without dedicated investment, recycling infrastructure won’t be sufficient. In addition, we need to resolve the simple math equation that currently exists — when it’s cheap to landfill, recycling will not be ‘worthwhile’ so we need to start to recognize what landfill really is: a waste of waste!”\nMaking the situation more complicated—the U.S. does not have a federal recycling program. “Recycling decision-making is currently in the hands of 20,000 communities in the U.S., all of which make their own choices about whether and what to recycle,” said Kersten-Johnston. “Many stakeholders with many different interests converge around this topic and we need to find common ground and goals to avoid working against one another. That means companies coming together with communities, recyclers, haulers, manufacturers and consumers to try to make progress together.”Sixty-six percent of discarded paper and cardboard was recycled, 27 percent of glass, and 8 percent of plastics were recycled. Glass and metal can be recycled indefinitely; paper can be recycled five to seven times before it’s too degraded to be made into “new” paper; plastic can only be recycled once or twice—and usually not into a food container—since the polymers break down in the recycling process.'
ERROR:root:orig input: 'Because U.S. recycling was dependent on China for so many years, our domestic recycling infrastructure was never developed, so there was no economical or efficient way to handle recycling when the market disappeared.\r\n\r\n“The way the system is configured right now, recycling is a service that competes — and unsurprisingly often loses — for local funding that is also needed for schools, policing, et cetera,” said Stephanie Kersten-Johnston, an adjunct professor in Columbia University’s Sustainability Management Master’s Program and director of circular ventures at The Recycling Partnership. “Without dedicated investment, recycling infrastructure won’t be sufficient. In addition, we need to resolve the simple math equation that currently exists — when it’s cheap to landfill, recycling will not be ‘worthwhile’ so we need to start to recognize what landfill really is: a waste of waste!”\r\nMaking the situation more complicated—the U.S. does not have a federal recycling program. “Recycling decision-making is currently in the hands of 20,000 communities in the U.S., all of which make their own choices about whether and what to recycle,” said Kersten-Johnston. “Many stakeholders with many different interests converge around this topic and we need to find common ground and goals to avoid working against one another. That means companies coming together with communities, recyclers, haulers, manufacturers and consumers to try to make progress together.”Sixty-six percent of discarded paper and cardboard was recycled, 27 percent of glass, and 8 percent of plastics were recycled. Glass and metal can be recycled indefinitely; paper can be recycled five to seven times before it’s too degraded to be made into “new” paper; plastic can only be recycled once or twice—and usually not into a food container—since the polymers break down in the recycling process.'
ERROR:root:orig selected_specific len[[["Glass and metal can be recycled indefinitely; paper can be recycled five to seven times before it’s too degraded to be made into “new” paper; plastic can only be recycled once or twice—and usually not into a food container—since the polymers break down in the recycling process.",{},11],["”Sixty-six percent of discarded paper and cardboard was recycled, 27 percent of glass, and 8 percent of plastics were recycled.",{},10],["“Recycling decision-making is currently in the hands of 20,000 communities in the U.S., all of which make their own choices about whether and what to recycle,” said Kersten-Johnston.",{},7],["“The way the system is configured right now, recycling is a service that competes — and unsurprisingly often loses — for local funding that is also needed for schools, policing, et cetera,” said Stephanie Kersten-Johnston, an adjunct professor in Columbia University’s Sustainability Management Master’s Program and director of circular ventures at The Recycling Partnership.",{},1],["Because U.S. recycling was dependent on China for so many years, our domestic recycling infrastructure was never developed, so there was no economical or efficient way to handle recycling when the market disappeared.",{},0]],["Because U.S. recycling was dependent on China for so many years, our domestic recycling infrastructure was never developed, so there was no economical or efficient way to handle recycling when the market disappeared.","“The way the system is configured right now, recycling is a service that competes — and unsurprisingly often loses — for local funding that is also needed for schools, policing, et cetera,” said Stephanie Kersten-Johnston, an adjunct professor in Columbia University’s Sustainability Management Master’s Program and director of circular ventures at The Recycling Partnership.","“Without dedicated investment, recycling infrastructure won’t be sufficient.","In addition, we need to resolve the simple math equation that currently exists —","when it’s cheap to landfill, recycling will not be ‘worthwhile’","so we need to start to recognize what landfill really is: a waste of waste!”","Making the situation more complicated—the U.S. does not have a federal recycling program.","“Recycling decision-making is currently in the hands of 20,000 communities in the U.S., all of which make their own choices about whether and what to recycle,” said Kersten-Johnston.","“Many stakeholders with many different interests converge around this topic and we need to find common ground and goals to avoid working against one another.","That means companies coming together with communities, recyclers, haulers, manufacturers and consumers to try to make progress together.","”Sixty-six percent of discarded paper and cardboard was recycled, 27 percent of glass, and 8 percent of plastics were recycled.","Glass and metal can be recycled indefinitely; paper can be recycled five to seven times before it’s too degraded to be made into “new” paper; plastic can only be recycled once or twice—and usually not into a food container—since the polymers break down in the recycling process."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000684
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:02.327735
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001612
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 895, in new
    fb_output = [call.result() for call in fb_request]
  File "/datadrive/qgv1/text_prod/app.py", line 895, in <listcomp>
    fb_output = [call.result() for call in fb_request]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 238, in query
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.354667
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000744
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.504375
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001610
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 895, in new
    fb_output = [call.result() for call in fb_request]
  File "/datadrive/qgv1/text_prod/app.py", line 895, in <listcomp>
    fb_output = [call.result() for call in fb_request]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 238, in query
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.325144
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.519592
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.000993
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 895, in new
    fb_output = [call.result() for call in fb_request]
  File "/datadrive/qgv1/text_prod/app.py", line 895, in <listcomp>
    fb_output = [call.result() for call in fb_request]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 238, in query
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.361911
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity. Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.']), ('questions', ['Who developed some of the first astronomical models?', "Who turned Socrates' writing style into written form?"]), ('answers', ['Ancient Greeks', 'Plato']), ('options', [['Anthropologists', 'Ancient Romans', 'Ancient Chinese'], ['Xenophon', 'Plutarch', 'Aristophanes']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:08.884645
ERROR:root:api_check 0:00:00.341601
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.496248
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.002028
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 895, in new
    fb_output = [call.result() for call in fb_request]
  File "/datadrive/qgv1/text_prod/app.py", line 895, in <listcomp>
    fb_output = [call.result() for call in fb_request]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 238, in query
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.359222
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity. Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.']), ('questions', ['Who developed some of the first astronomical models?', "Who turned Socrates' writing style into written form?"]), ('answers', ['Ancient Greeks', 'Plato']), ('options', [['Anthropologists', 'Ancient Romans', 'Ancient Chinese'], ['Xenophon', 'Plutarch', 'Aristophanes']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:07.036253
ERROR:root:api_check 0:00:00.327612
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:total before 0:00:01.484983
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.006276
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 895, in new
    fb_output = [call.result() for call in fb_request]
  File "/datadrive/qgv1/text_prod/app.py", line 895, in <listcomp>
    fb_output = [call.result() for call in fb_request]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 238, in query
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.353594
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents8
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity. Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama.", 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.", 'Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.']), ('questions', ['Who developed some of the first astronomical models?', "Who turned Socrates' writing style into written form?", 'Who is the most famous physician in antiquity?', "Who was Plato's student?", 'Who are some of the Greek mathematicians that we owe our ideas to?', 'What is the name of the medical standard for doctors?', 'What did Hippocrates establish?']), ('answers', ['Ancient Greeks', 'Plato', 'Hippocrates', 'Aristotle', 'Pythagoras, Euclid, and Archimedes', 'Hippocratic oath', 'medical school']), ('options', [['Anthropologists', 'Ancient Romans', 'Ancient Chinese'], ['Xenophon', 'Aristophanes', 'Plutarch'], ['Plato', 'Galen', 'Aristotle'], ['Plato', 'Socrates', 'Pythagoras'], ['Plato and Aristotle', 'Plato and Archimedes', 'Pythagoras and Euclid'], ['Declaration of Helsinki', 'Medical ethics', "Physician's standard of care"], ['a school of medicine', 'a hospital', 'the Hippocratic Oath']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:09.603604
ERROR:root:api_check 0:00:00.369601
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents6
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity. Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama.", 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him."]), ('questions', ['Who developed some of the first astronomical models?', "Who turned Socrates' writing style into written form?", 'Who is the most famous physician in antiquity?', "Who was Plato's student?", 'Who are some of the Greek mathematicians that we owe our ideas to?', 'What is the name of the medical standard for doctors?']), ('answers', ['Ancient Greeks', 'Plato', 'Hippocrates', 'Aristotle', 'Pythagoras, Euclid, and Archimedes', 'Hippocratic oath']), ('options', [['Anthropologists', 'Ancient Romans', 'Ancient Chinese'], ['Aristophanes', 'Plutarch', 'Xenophon'], ['Galen', 'Plato', 'Aristotle'], ['Plato', 'Socrates', 'Pythagoras'], ['Pythagoras and Euclid', 'Plato and Archimedes', 'Plato and Aristotle'], ['Medical ethics', 'Declaration of Helsinki', "Physician's standard of care"]])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:14.260995
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.346847
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.']), ('questions', ['Who developed some of the first astronomical models?']), ('answers', ['Ancient Greeks']), ('options', [['Ancient Chinese', 'Anthropologists', 'Ancient Romans']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:03.725268
ERROR:root:api_check 0:00:00.357326
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:total before 0:00:01.432603
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001869
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 895, in new
    fb_output = [call.result() for call in fb_request]
  File "/datadrive/qgv1/text_prod/app.py", line 895, in <listcomp>
    fb_output = [call.result() for call in fb_request]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 238, in query
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.366765
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.001836
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.']), ('incorrect', [['Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and were used to show how the Earth rotates.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the orbits of Jupiter.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the rotation of the planets.']])]))])
ERROR:root:Request 0:00:03.226155
ERROR:root:api_check 0:00:00.396078
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:total before 0:00:01.466853
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001027
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 909, in new
    logging.error('output sents fb ' + str(len(fb_output[0]['questions'])))
KeyError: 'questions'
ERROR:root:api_check 0:00:00.346629
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000801
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.']), ('incorrect', [['Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the orbits of planets, such as Venus, Mars, Jupiter, Saturn, and the Sun.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and its rotation.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the rotation of the planets.']])]))])
ERROR:root:Request 0:00:04.685582
ERROR:root:api_check 0:00:00.352743
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:total before 0:00:01.481139
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.000829
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 909, in new
    logging.error('output sents fb ' + str(len(fb_output[0]['questions'])))
KeyError: 'questions'
ERROR:root:api_check 0:00:00.354124
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.001484
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.']), ('incorrect', [['Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the planets, as they were the stars in their constellation.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the Moon, and were later used to map the planets in the Solar System’.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the Earth’s motion.']])]))])
ERROR:root:Request 0:00:03.183242
ERROR:root:api_check 0:00:00.348027
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:total before 0:00:00.796501
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.008072
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 895, in new
    fb_output = [call.result() for call in fb_request]
  File "/datadrive/qgv1/text_prod/app.py", line 895, in <listcomp>
    fb_output = [call.result() for call in fb_request]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 238, in query
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.500362
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:total before 0:00:01.067702
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.000445
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 909, in new
    logging.error('output sents fb ' + str(len(fb_output[0]['questions'])))
KeyError: 'questions'
ERROR:root:api_check 0:00:00.369533
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.']), ('questions', ['Who developed some of the first astronomical models?']), ('answers', ['Ancient Greeks']), ('options', [['Ancient Chinese', 'Anthropologists', 'Ancient Romans']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.035988
ERROR:root:api_check 0:00:00.348484
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:total before 0:00:00.794398
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.002083
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 909, in new
    logging.error('output sents fb ' + str(len(fb_output[0]['questions'])))
KeyError: 'questions'
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:19.884517
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:total before 0:00:01.295280
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.000625
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'Some of the first astronomical models were developed by  _________  trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'answer': 'Ancient Greeks', 'options': ['Inuits', 'Muslims', 'Native Americans'], 'context': 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.'}]}}]
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 910, in new
    results['Fill in the Blanks']['questions'] = fb_output[0]['questions']
KeyError: 'questions'
ERROR:root:api_check 0:00:00.426298
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:total before 0:00:00.702627
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001492
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'Some of the first astronomical models were developed by  _________  trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'answer': 'Ancient Greeks', 'options': ['Inuits', 'Muslims', 'Native Americans'], 'context': 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.'}, {'question_statement': ' _________ , another ancient Greek, is the most famous physician in antiquity.', 'answer': 'Hippocrates', 'options': ['Galen', 'Plato', 'Aristotle'], 'context': 'Hippocrates, another ancient Greek, is the most famous physician in antiquity.'}]}}]
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 910, in new
    results['Fill in the Blanks']['questions'] = fb_output[0]['questions']
KeyError: 'questions'
ERROR:root:api_check 0:00:00.387202
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:total before 0:00:00.665387
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.000896
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'Some of the first astronomical models were developed by  _________  trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'answer': 'Ancient Greeks', 'options': ['Ancient Egyptians', 'Ancient Indians', 'Inca Indians'], 'context': 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.'}]}}]
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.']), ('questions', ['Some of the first astronomical models were developed by  _________  trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.']), ('answers', ['Ancient Greeks']), ('options', [['Ancient Egyptians', 'Ancient Indians', 'Inca Indians']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.103488
ERROR:root:api_check 0:00:00.322943
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:total before 0:00:00.661442
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.007176
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': ' _________ , another ancient Greek, is the most famous physician in antiquity.', 'answer': 'Hippocrates', 'options': ['Galen', 'Plato', 'Aristotle'], 'context': 'Hippocrates, another ancient Greek, is the most famous physician in antiquity.'}]}}]
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.']), ('questions', [' _________ , another ancient Greek, is the most famous physician in antiquity.', 'Who developed some of the first astronomical models?']), ('answers', ['Hippocrates', 'Ancient Greeks']), ('options', [['Galen', 'Plato', 'Aristotle'], ['Ancient Romans', 'Ancient Chinese', 'Anthropologists']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.355508
ERROR:root:api_check 0:00:00.334005
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000890
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:total before 0:00:00.684125
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001484
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as  _________ .', 'answer': 'Pythagoras, Euclid, and Archimedes', 'options': ['Plato, Euclid, and Archimedes', 'Pythagoras, Zeno, and Euclid', 'Plato, Zeno, and Euclid'], 'context': 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.'}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.']), ('questions', ['Who developed some of the first astronomical models?', 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as  _________ .']), ('answers', ['Ancient Greeks', 'Pythagoras, Euclid, and Archimedes']), ('options', [['Ancient Romans', 'Ancient Chinese', 'Anthropologists'], ['Plato, Euclid, and Archimedes', 'Pythagoras, Zeno, and Euclid', 'Plato, Zeno, and Euclid']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.']), ('questions', ['Who developed some of the first astronomical models?', 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as  _________ .']), ('answers', ['Ancient Greeks', 'Pythagoras, Euclid, and Archimedes']), ('options', [['Ancient Romans', 'Ancient Chinese', 'Anthropologists'], ['Plato, Euclid, and Archimedes', 'Pythagoras, Zeno, and Euclid', 'Plato, Zeno, and Euclid']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['Hippocrates, another ancient Greek, is the most famous physician in antiquity.']), ('incorrect', [['Hippocrates, another ancient Greek, is an author who has written on the history of Greece.']])]))])
ERROR:root:Request 0:00:06.449827
ERROR:root:api_check 0:00:00.370235
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len6
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000999
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.760739
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001381
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ .", 'answer': 'modern medicine', 'options': ['surgery', 'evidence-based medicine', 'homeopathy'], 'context': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Ancient Chinese', 'Ancient Romans', 'Anthropologists'], ['Plato', 'Aristotle', 'Galen'], ['surgery', 'evidence-based medicine', 'homeopathy']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Ancient Chinese', 'Ancient Romans', 'Anthropologists'], ['Plato', 'Aristotle', 'Galen'], ['surgery', 'evidence-based medicine', 'homeopathy']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('incorrect', [['We owe our basic ideas about geometry and the concept of mathematical proofs to the mathematician, but we owe our mathematical proofs to the mathematicians who have given them credit for their ideas."', 'We owe our basic ideas about geometry and the concept of mathematical proofs to the world\'s leading mathematicians and researchers," said Jürgen Dörner, a professor of mathematics at the University of Cologne and a leading authority on mathematics.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to the great mathematician Georg Cantor.'], ['The Hippocratic oath, a medical standard for doctors, is named after Jesus Christ.', 'The Hippocratic oath, a medical standard for doctors, is named after a religious tradition.', 'The Hippocratic oath, a medical standard for doctors, is named after a Hippocratic oath.']])]))])
ERROR:root:Request 0:00:07.604582
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.366979
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len6
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000823
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.707326
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.040542
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ .", 'answer': 'modern medicine', 'options': ['surgery', 'evidence-based medicine', 'homeopathy'], 'context': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Ancient Chinese', 'Ancient Romans', 'Anthropologists'], ['Aristotle', 'Galen', 'Plato'], ['surgery', 'evidence-based medicine', 'homeopathy']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Ancient Chinese', 'Ancient Romans', 'Anthropologists'], ['Aristotle', 'Galen', 'Plato'], ['surgery', 'evidence-based medicine', 'homeopathy']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('incorrect', [['We owe our basic ideas about geometry and the concept of mathematical proofs to the mathematicians and other philosophers who were in charge of the field in the early 1900s.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to the mathematicians and physicists of this great nation.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to the mathematicians who are doing this work, and to those who are teaching it."'], ['The Hippocratic oath, a medical standard for doctors, is named after Plato, who wrote in the 5th century A.D.:\n\nThe Hippocratic oath was given by a physician, or physician of his own choosing, to', 'The Hippocratic oath, a medical standard for doctors, is named after a Hippocratic philosopher who lived in Athens in the third century B.C.', 'The Hippocratic oath, a medical standard for doctors, is named after Hippocrates.']])]))])
ERROR:root:Request 0:00:13.775325
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:34.254682
ERROR:root:payload: 'Exam day yay'
ERROR:root:orig input: 'Exam day yay'
ERROR:root:orig selected_specific len[[],[]]
ERROR:root:orig selected_specific len0
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:03.400726
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.354608
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len6
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000763
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:total before 0:00:01.904943
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001087
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as  _________ .', 'answer': 'Pythagoras, Euclid, and Archimedes', 'options': ['Plato, Euclid, and Archimedes', 'Plato, Zeno, and Euclid', 'Pythagoras, Zeno, and Euclid'], 'context': 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.'}, {'question_statement': 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.', 'answer': 'Hippocratic oath', 'options': ['Medical Association of America', 'Congress of Vienna', 'British Medical Association'], 'context': 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.'}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('questions', ['Who developed some of the first astronomical models?', 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as  _________ .', 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.']), ('answers', ['Ancient Greeks', 'Pythagoras, Euclid, and Archimedes', 'Hippocratic oath']), ('options', [['Ancient Chinese', 'Anthropologists', 'Ancient Romans'], ['Plato, Euclid, and Archimedes', 'Plato, Zeno, and Euclid', 'Pythagoras, Zeno, and Euclid'], ['Medical Association of America', 'Congress of Vienna', 'British Medical Association']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('questions', ['Who developed some of the first astronomical models?', 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as  _________ .', 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.']), ('answers', ['Ancient Greeks', 'Pythagoras, Euclid, and Archimedes', 'Hippocratic oath']), ('options', [['Ancient Chinese', 'Anthropologists', 'Ancient Romans'], ['Plato, Euclid, and Archimedes', 'Plato, Zeno, and Euclid', 'Pythagoras, Zeno, and Euclid'], ['Medical Association of America', 'Congress of Vienna', 'British Medical Association']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['Hippocrates, another ancient Greek, is the most famous physician in antiquity.']), ('incorrect', [['Hippocrates, another ancient Greek, is said to have said that Plato was an "accusator."', 'Hippocrates, another ancient Greek, is credited with creating the modern form of the word.', 'Hippocrates, another ancient Greek, is a major thinker on Greek philosophy and his works are highly influential.']])]))])
ERROR:root:Request 0:00:09.036985
ERROR:root:api_check 0:00:00.357883
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len6
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000729
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.933309
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001144
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 896, in new
    mcq_output = [call.result() for call in mcq_request]
  File "/datadrive/qgv1/text_prod/app.py", line 896, in <listcomp>
    mcq_output = [call.result() for call in mcq_request]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 94, in query
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.342455
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len6
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.001402
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.167375
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.000864
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ .", 'answer': 'modern medicine', 'options': ['evidence-based medicine', 'homeopathy', 'surgery'], 'context': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Ancient Chinese', 'Anthropologists', 'Ancient Romans'], ['Plato', 'Galen', 'Aristotle'], ['evidence-based medicine', 'homeopathy', 'surgery']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Ancient Chinese', 'Anthropologists', 'Ancient Romans'], ['Plato', 'Galen', 'Aristotle'], ['evidence-based medicine', 'homeopathy', 'surgery']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('incorrect', [['We owe our basic ideas about geometry and the concept of mathematical proofs to the French mathematician Jean-Paul Sartre.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to the French mathematician Michel Foucault and the English mathematician William Hetherington.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to God.'], ['The Hippocratic oath, a medical standard for doctors, is named after the Hippocratic oath, which prescribes that physicians should obey.', 'The Hippocratic oath, a medical standard for doctors, is named after the Hippocratic Oath, the oath that is administered to the doctor, according to the Roman Catholic Church.', 'The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, a Greek physician who was a leader in medical education in the sixth century B.C., and was known as the "father of the modern medical profession']])]))])
ERROR:root:Request 0:00:04.871159
ERROR:root:api_check 0:00:00.403274
ERROR:root:payload: "The American Dream: 2.5 kids, a dog, and a house with a white-picket fence. It's one of the most iconic and enduring images in American culture, the object of both praise (as evidence of a high standard of living) and ridicule (as evidence of conformity and materialism). The cookie-cutter homes that sprang up outside metropolitan areas after World War II weren't grand palaces, but to the generation that had survived the Great Depression and World War II these little cottages represented almost unimaginable luxury.\nDuring the late 1940s and 1950s, the American landscape changed drastically. Since the late nineteenth century, Americans as well as immigrants had flocked to American cities in search of factory work. In the postwar era, however, that trend was reversed: thanks to low housing costs and GI Bill benefits, even working-class Americans could afford to own homes in the suburbs.\nThough it might not seem like it matters much whether people live in the city, in the suburbs, or on the moon, residential patterns actually constitute a major influence on society and politics. People pay taxes based on where they live, and political representatives are apportioned based on the populations of districts. Consequently, the postwar exodus to the suburbs was part of a vast reorganization of power and money that affected American industry, race relations, and gender roles."
ERROR:root:orig input: "The American Dream: 2.5 kids, a dog, and a house with a white-picket fence. It's one of the most iconic and enduring images in American culture, the object of both praise (as evidence of a high standard of living) and ridicule (as evidence of conformity and materialism). The cookie-cutter homes that sprang up outside metropolitan areas after World War II weren't grand palaces, but to the generation that had survived the Great Depression and World War II these little cottages represented almost unimaginable luxury.\r\nDuring the late 1940s and 1950s, the American landscape changed drastically. Since the late nineteenth century, Americans as well as immigrants had flocked to American cities in search of factory work. In the postwar era, however, that trend was reversed: thanks to low housing costs and GI Bill benefits, even working-class Americans could afford to own homes in the suburbs.\r\nThough it might not seem like it matters much whether people live in the city, in the suburbs, or on the moon, residential patterns actually constitute a major influence on society and politics. People pay taxes based on where they live, and political representatives are apportioned based on the populations of districts. Consequently, the postwar exodus to the suburbs was part of a vast reorganization of power and money that affected American industry, race relations, and gender roles."
ERROR:root:orig selected_specific len[[["The American Dream: 2.5 kids, a dog, and a house with a white-picket fence.",{},0],["The cookie-cutter homes that sprang up outside metropolitan areas after World War II weren't grand palaces, but to the generation that had survived the Great Depression and World War II these little cottages represented almost unimaginable luxury.",{},2],["People pay taxes based on where they live, and political representatives are apportioned based on the populations of districts.",{},7],["It's one of the most iconic and enduring images in American culture, the object of both praise (as evidence of a high standard of living) and ridicule (as evidence of conformity and materialism).",{},1]],["The American Dream: 2.5 kids, a dog, and a house with a white-picket fence.","It's one of the most iconic and enduring images in American culture, the object of both praise (as evidence of a high standard of living) and ridicule (as evidence of conformity and materialism).","The cookie-cutter homes that sprang up outside metropolitan areas after World War II weren't grand palaces, but to the generation that had survived the Great Depression and World War II these little cottages represented almost unimaginable luxury.","During the late 1940s and 1950s, the American landscape changed drastically.","Since the late nineteenth century, Americans as well as immigrants had flocked to American cities in search of factory work.","In the postwar era, however, that trend was reversed: thanks to low housing costs and GI Bill benefits, even working-class Americans could afford to own homes in the suburbs.","Though it might not seem like it matters much whether people live in the city, in the suburbs, or on the moon, residential patterns actually constitute a major influence on society and politics.","People pay taxes based on where they live, and political representatives are apportioned based on the populations of districts.","Consequently, the postwar exodus to the suburbs was part of a vast reorganization of power and money that affected American industry, race relations, and gender roles."]]
ERROR:root:orig selected_specific len4
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.001305
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.343690
ERROR:root:fitb timer0:00:00.000003
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', [' The American Dream: 2.5 kids, a dog, and a house with a white-picket fence.', "It's one of the most iconic and enduring images in American culture, the object of both praise (as evidence of a high standard of living) and ridicule (as evidence of conformity and materialism). The cookie-cutter homes that sprang up outside metropolitan areas after World War II weren't grand palaces, but to the generation that had survived the Great Depression and World War II these little cottages represented almost unimaginable luxury."]), ('questions', ['How many kids does the American Dream have?', 'What two events did the cookie-cutter homes survive?']), ('answers', ['2.5', 'the Great Depression and World War II']), ('options', [['5', '1.5', '3'], ['the Civil War and the Great Depression', 'the Great Depression and the Civil War', 'World War II and the Civil War']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', [' The American Dream: 2.5 kids, a dog, and a house with a white-picket fence.', "It's one of the most iconic and enduring images in American culture, the object of both praise (as evidence of a high standard of living) and ridicule (as evidence of conformity and materialism). The cookie-cutter homes that sprang up outside metropolitan areas after World War II weren't grand palaces, but to the generation that had survived the Great Depression and World War II these little cottages represented almost unimaginable luxury."]), ('questions', ['How many kids does the American Dream have?', 'What two events did the cookie-cutter homes survive?']), ('answers', ['2.5', 'the Great Depression and World War II']), ('options', [['5', '1.5', '3'], ['the Civil War and the Great Depression', 'the Great Depression and the Civil War', 'World War II and the Civil War']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['People pay taxes based on where they live, and political representatives are apportioned based on the populations of districts.']), ('incorrect', [['People pay taxes based on where they live, and political representatives are apportioned according to their own constituency."', 'People pay taxes based on where they live, and political representatives are apportioned by location.', 'People pay taxes based on where they live, and political representatives are apportioned among their constituents based on their income.']])]))])
ERROR:root:Request 0:00:06.423934
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.333942
ERROR:root:payload: 'Jane Goodall was born in London, England, in 1934. Her parents were Mortimer Herbert Morris-Goodall, a car-racing businessman, and Margaret Myfanwe Joseph, a novelist who published under the name Vanne Morris-Goodall.\nWhen Jane was just over a year old, her father gave her a stuffed toy, a lifelike replica of a chimpanzee, named “Jubilee” after the first chimpanzee infant ever born at the London Zoo. The toy horrified some of her mother’s friends, who thought that it would give Jane nightmares. They could not foresee the favorable influence it would have on her.\nGoodall’s interest in observing animal life showed up early. When she was 4, she wanted so badly to know how an egg came out of a hen that she hid inside a small henhouse for nearly four hours waiting to see it happen. Meanwhile, the whole household had been searching for her and had even reported her missing to the police.'
ERROR:root:orig input: 'Jane Goodall was born in London, England, in 1934. Her parents were Mortimer Herbert Morris-Goodall, a car-racing businessman, and Margaret Myfanwe Joseph, a novelist who published under the name Vanne Morris-Goodall.\r\nWhen Jane was just over a year old, her father gave her a stuffed toy, a lifelike replica of a chimpanzee, named “Jubilee” after the first chimpanzee infant ever born at the London Zoo. The toy horrified some of her mother’s friends, who thought that it would give Jane nightmares. They could not foresee the favorable influence it would have on her.\r\nGoodall’s interest in observing animal life showed up early. When she was 4, she wanted so badly to know how an egg came out of a hen that she hid inside a small henhouse for nearly four hours waiting to see it happen. Meanwhile, the whole household had been searching for her and had even reported her missing to the police.'
ERROR:root:orig selected_specific len[[["When Jane was just over a year old, her father gave her a stuffed toy, a lifelike replica of a chimpanzee, named “Jubilee” after the first chimpanzee infant ever born at the London Zoo.",{},2],["When she was 4, she wanted so badly to know how an egg came out of a hen that she hid inside a small henhouse for nearly four hours waiting to see it happen.",{},6],["Her parents were Mortimer Herbert Morris-Goodall, a car-racing businessman, and Margaret Myfanwe Joseph, a novelist who published under the name Vanne Morris-Goodall.",{},1],["Jane Goodall was born in London, England, in 1934.",{},0],["The toy horrified some of her mother’s friends, who thought that it would give Jane nightmares.",{},3]],["Jane Goodall was born in London, England, in 1934.","Jane Goodall's parents were Mortimer Herbert Morris-Goodall, a car-racing businessman, and Margaret Myfanwe Joseph, a novelist who published under the name Vanne Morris-Goodall.","When Jane was just over a year old, Jane Goodall's father gave Jane Goodall a stuffed toy, a lifelike replica of a chimpanzee, named “Jubilee” after the first chimpanzee infant ever born at the London Zoo.","The toy horrified some of Jane Goodall's mother’s friends, who thought that a stuffed toy, a lifelike replica of a chimpanzee, named “Jubilee” after the first chimpanzee infant ever born at the London Zoo would give Jane nightmares.","a stuffed toy, a lifelike replica of a chimpanzee, named “Jubilee” after the first chimpanzee infant ever born at the London Zoo could not foresee the favorable influence a stuffed toy, a lifelike replica of a chimpanzee, named “Jubilee”","after the first chimpanzee infant ever born at the London Zoo would have on Jane Goodall.","Goodall’s interest in observing animal life showed up early.","When Jane Goodall was 4, Jane Goodall wanted so badly to know how an egg came out of a hen that Jane Goodall hid inside a small henhouse for nearly four hours waiting to see it happen.","Meanwhile, the whole household had been searching for Jane Goodall and had even reported Jane Goodall missing to the police."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000833
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:total before 0:00:01.728253
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001490
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': "Jane Goodall's parents were Mortimer Herbert Morris-Goodall, a car-racing businessman, and  _________ , a novelist who published under the name Vanne Morris-Goodall.", 'answer': 'Margaret Myfanwe Joseph', 'options': ['Louisa May Alcott', 'Virginia Woolf', 'Jane Austen'], 'context': "Jane Goodall's parents were Mortimer Herbert Morris-Goodall, a car-racing businessman, and Margaret Myfanwe Joseph, a novelist who published under the name Vanne Morris-Goodall."}, {'question_statement': 'Jane Goodall was born in  _________ , in 1934.', 'answer': 'London, England', 'options': ['New York, New York', 'Paris, France', 'Cairo, Egypt'], 'context': 'Jane Goodall was born in London, England, in 1934.'}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ["Jane Goodall's parents were Mortimer Herbert Morris-Goodall, a car-racing businessman, and Margaret Myfanwe Joseph, a novelist who published under the name Vanne Morris-Goodall. When Jane was just over a year old, her father gave her a stuffed toy, a lifelike replica of a chimpanzee, named “Jubilee” after the first chimpanzee infant ever born at the London Zoo.", "Jane Goodall's parents were Mortimer Herbert Morris-Goodall, a car-racing businessman, and Margaret Myfanwe Joseph, a novelist who published under the name Vanne Morris-Goodall.", 'Jane Goodall was born in London, England, in 1934.']), ('questions', ["What did Jane's father give to her when she was about a year old?", "Jane Goodall's parents were Mortimer Herbert Morris-Goodall, a car-racing businessman, and  _________ , a novelist who published under the name Vanne Morris-Goodall.", 'Jane Goodall was born in  _________ , in 1934.']), ('answers', ['stuffed toy', 'Margaret Myfanwe Joseph', 'London, England']), ('options', [['toy', 'book', 'block'], ['Louisa May Alcott', 'Virginia Woolf', 'Jane Austen'], ['New York, New York', 'Paris, France', 'Cairo, Egypt']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ["Jane Goodall's parents were Mortimer Herbert Morris-Goodall, a car-racing businessman, and Margaret Myfanwe Joseph, a novelist who published under the name Vanne Morris-Goodall. When Jane was just over a year old, her father gave her a stuffed toy, a lifelike replica of a chimpanzee, named “Jubilee” after the first chimpanzee infant ever born at the London Zoo.", "Jane Goodall's parents were Mortimer Herbert Morris-Goodall, a car-racing businessman, and Margaret Myfanwe Joseph, a novelist who published under the name Vanne Morris-Goodall.", 'Jane Goodall was born in London, England, in 1934.']), ('questions', ["What did Jane's father give to her when she was about a year old?", "Jane Goodall's parents were Mortimer Herbert Morris-Goodall, a car-racing businessman, and  _________ , a novelist who published under the name Vanne Morris-Goodall.", 'Jane Goodall was born in  _________ , in 1934.']), ('answers', ['stuffed toy', 'Margaret Myfanwe Joseph', 'London, England']), ('options', [['toy', 'book', 'block'], ['Louisa May Alcott', 'Virginia Woolf', 'Jane Austen'], ['New York, New York', 'Paris, France', 'Cairo, Egypt']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['Goodall’s interest in observing animal life showed up early.']), ('incorrect', [['Goodall’s interest in doing so," he said. "']])]))])
ERROR:root:Request 0:00:10.292867
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:41.976220
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len6
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000370
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:02.017778
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.040149
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others,  _________  developed a sophisticated philosophical and scientific culture.', 'answer': 'the Ancient Greeks', 'options': ['the Ancient Romans', 'the Ancient Indians', 'the Ancient Chinese'], 'context': 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.'}, {'question_statement': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ .", 'answer': 'modern medicine', 'options': ['homeopathy', 'surgery', 'evidence-based medicine'], 'context': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others,  _________  developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'the Ancient Greeks', 'modern medicine']), ('options', [['Ancient Romans', 'Anthropologists', 'Ancient Chinese'], ['Aristotle', 'Galen', 'Plato'], ['the Ancient Romans', 'the Ancient Indians', 'the Ancient Chinese'], ['homeopathy', 'surgery', 'evidence-based medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others,  _________  developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'the Ancient Greeks', 'modern medicine']), ('options', [['Ancient Romans', 'Anthropologists', 'Ancient Chinese'], ['Aristotle', 'Galen', 'Plato'], ['the Ancient Romans', 'the Ancient Indians', 'the Ancient Chinese'], ['homeopathy', 'surgery', 'evidence-based medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('incorrect', [["We owe our basic ideas about geometry and the concept of mathematical proofs to Einstein's famous remark, 'if we know anything, we know nothing.'", 'We owe our basic ideas about geometry and the concept of mathematical proofs to the many men and women who have worked on this field.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to the men who made it possible.'], ['The Hippocratic oath, a medical standard for doctors, is named after the physician who performed the operation.', 'The Hippocratic oath, a medical standard for doctors, is named after the Hippocratic oath.', 'The Hippocratic oath, a medical standard for doctors, is named after the ancient Greek god of medicine.']])]))])
ERROR:root:Request 0:00:07.449130
ERROR:root:api_check 0:00:00.372316
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len6
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.006028
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.221668
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001221
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others,  _________  developed a sophisticated philosophical and scientific culture.', 'answer': 'the Ancient Greeks', 'options': ['the Ancient Romans', 'the Ancient Indians', 'the Ancient Chinese'], 'context': 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.'}, {'question_statement': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ .", 'answer': 'modern medicine', 'options': ['homeopathy', 'surgery', 'evidence-based medicine'], 'context': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others,  _________  developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'the Ancient Greeks', 'modern medicine']), ('options', [['Ancient Romans', 'Anthropologists', 'Ancient Chinese'], ['Aristotle', 'Galen', 'Plato'], ['the Ancient Romans', 'the Ancient Indians', 'the Ancient Chinese'], ['homeopathy', 'surgery', 'evidence-based medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others,  _________  developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'the Ancient Greeks', 'modern medicine']), ('options', [['Ancient Romans', 'Anthropologists', 'Ancient Chinese'], ['Aristotle', 'Galen', 'Plato'], ['the Ancient Romans', 'the Ancient Indians', 'the Ancient Chinese'], ['homeopathy', 'surgery', 'evidence-based medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('incorrect', [['We owe our basic ideas about geometry and the concept of mathematical proofs to our students," said Raffaele Leggio, professor of mathematics at the University of Salford.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to our students, who understand that mathematics can be used for many other things."', 'We owe our basic ideas about geometry and the concept of mathematical proofs to God.'], ['The Hippocratic oath, a medical standard for doctors, is named after Dr. Joseph Hippocrates, who was the physician to which Hippocrates\'s father, a Roman Catholic, applied his "religious and moral doctrine" to the world.', 'The Hippocratic oath, a medical standard for doctors, is named after the Hippocratic Oath.', 'The Hippocratic oath, a medical standard for doctors, is named after King Hippocrates.']])]))])
ERROR:root:Request 0:00:12.176867
ERROR:root:api_check 0:00:00.362454
ERROR:root:payload: 'World War I, also known as the Great War, began in 1914 after the assassination of Archduke Franz Ferdinand of Austria. His murder catapulted into a war across Europe that lasted until 1918. During the conflict, Germany, Austria-Hungary, Bulgaria and the Ottoman Empire (the Central Powers) fought against Great Britain, France, Russia, Italy, Romania, Canada, Japan and the United States (the Allied Powers). Thanks to new military technologies and the horrors of trench warfare, World War I saw unprecedented levels of carnage and destruction. By the time the war was over and the Allied Powers claimed victory, more than 16 million people—soldiers and civilians alike—were dead.\n\nArchduke Franz Ferdinand\nTensions had been brewing throughout Europe—especially in the troubled Balkan region of southeast Europe—for years before World War I actually broke out.\n\nA number of alliances involving European powers, the Ottoman Empire, Russia and other parties had existed for years, but political instability in the Balkans (particularly Bosnia, Serbia and Herzegovina) threatened to destroy these agreements.\n\nThe spark that ignited World War I was struck in Sarajevo, Bosnia, where Archduke Franz Ferdinand—heir to the Austro-Hungarian Empire—was shot to death along with his wife, Sophie, by the Serbian nationalist Gavrilo Princip on June 28, 1914. Princip and other nationalists were struggling to end Austro-Hungarian rule over Bosnia and Herzegovina.\n\nThe assassination of Franz Ferdinand set off a rapidly escalating chain of events: Austria-Hungary, like many countries around the world, blamed the Serbian government for the attack and hoped to use the incident as justification for settling the question of Serbian nationalism once and for all.'
ERROR:root:orig input: 'World War I, also known as the Great War, began in 1914 after the assassination of Archduke Franz Ferdinand of Austria. His murder catapulted into a war across Europe that lasted until 1918. During the conflict, Germany, Austria-Hungary, Bulgaria and the Ottoman Empire (the Central Powers) fought against Great Britain, France, Russia, Italy, Romania, Canada, Japan and the United States (the Allied Powers). Thanks to new military technologies and the horrors of trench warfare, World War I saw unprecedented levels of carnage and destruction. By the time the war was over and the Allied Powers claimed victory, more than 16 million people—soldiers and civilians alike—were dead.\r\n\r\nArchduke Franz Ferdinand\r\nTensions had been brewing throughout Europe—especially in the troubled Balkan region of southeast Europe—for years before World War I actually broke out.\r\n\r\nA number of alliances involving European powers, the Ottoman Empire, Russia and other parties had existed for years, but political instability in the Balkans (particularly Bosnia, Serbia and Herzegovina) threatened to destroy these agreements.\r\n\r\nThe spark that ignited World War I was struck in Sarajevo, Bosnia, where Archduke Franz Ferdinand—heir to the Austro-Hungarian Empire—was shot to death along with his wife, Sophie, by the Serbian nationalist Gavrilo Princip on June 28, 1914. Princip and other nationalists were struggling to end Austro-Hungarian rule over Bosnia and Herzegovina.\r\n\r\nThe assassination of Franz Ferdinand set off a rapidly escalating chain of events: Austria-Hungary, like many countries around the world, blamed the Serbian government for the attack and hoped to use the incident as justification for settling the question of Serbian nationalism once and for all.'
ERROR:root:orig selected_specific len[[["The spark that ignited World War I was struck in Sarajevo, Bosnia, where Archduke Franz Ferdinand—heir to the Austro-Hungarian Empire—was shot to death along with his wife, Sophie, by the Serbian nationalist Gavrilo Princip on June 28, 1914.",{},8],["By the time the war was over and the Allied Powers claimed victory, more than 16 million people—soldiers and civilians alike—were dead.",{},5],["The assassination of Franz Ferdinand set off a rapidly escalating chain of events: Austria-Hungary, like many countries around the world, blamed the Serbian government for the attack and hoped to use the incident as justification for settling the question of Serbian nationalism once and for all.",{},10],["During the conflict, Germany, Austria-Hungary, Bulgaria and the Ottoman Empire (the Central Powers) fought against Great Britain, France, Russia, Italy, Romania, Canada, Japan and the United States (the Allied Powers).",{},2],["World War I, also known as the Great War, began in 1914 after the assassination of Archduke Franz Ferdinand of Austria.",{},0],["Archduke Franz Ferdinand Tensions had been brewing throughout Europe—especially in the troubled Balkan region of southeast Europe—for years before World War I actually broke out.",{},6]],["World War I, also known as the Great War, began in 1914 after the assassination of Archduke Franz Ferdinand of Austria.","Archduke Franz Ferdinand of Austria's murder catapulted into a war across Europe that lasted until 1918.","During the conflict, Germany, Austria-Hungary, Bulgaria and the Ottoman Empire (the Central Powers) fought against Great Britain, France, Russia, Italy, Romania, Canada, Japan and the United States (the Allied Powers).","Thanks to new military technologies and the horrors of trench warfare, World War","I saw unprecedented levels of carnage and destruction.","By the time the war was over and the Allied Powers claimed victory, more than 16 million people—soldiers and civilians alike—were dead.","Archduke Franz Ferdinand Tensions had been brewing throughout Europe—especially in the troubled Balkan region of southeast Europe—for years before World War I actually broke out.","A number of alliances involving European powers, the Ottoman Empire, Russia and other parties had existed for years, but political instability in the Balkans (particularly Bosnia, Serbia and Herzegovina) threatened to destroy these agreements.","The spark that ignited World War I was struck in Sarajevo, Bosnia, where Archduke Franz Ferdinand—heir to the Austro-Hungarian Empire—was shot to death along with his wife, Sophie, by the Serbian nationalist Gavrilo Princip on June 28, 1914.","Princip and other nationalists were struggling to end Austro-Hungarian rule over Bosnia and Herzegovina.","The assassination of Franz Ferdinand set off a rapidly escalating chain of events: Austria-Hungary, like many countries around the world, blamed the Serbian government for the attack and hoped to use the incident as justification for settling the question of Serbian nationalism once and for all."]]
ERROR:root:orig selected_specific len6
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000907
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['A number of alliances involving European powers, the Ottoman Empire, Russia and other parties had existed for years, but political instability in the Balkans (particularly Bosnia, Serbia and Herzegovina) threatened to destroy these agreements. The spark that ignited World War I was struck in Sarajevo, Bosnia, where Archduke Franz Ferdinand—heir to the Austro-Hungarian Empire—was shot to death along with his wife, Sophie, by the Serbian nationalist Gavrilo Princip on June 28, 1914.', 'I saw unprecedented levels of carnage and destruction. By the time the war was over and the Allied Powers claimed victory, more than 16 million people—soldiers and civilians alike—were dead.']), ('questions', ['Who was the heir to the Austro-Hungarian Empire?', 'How many people died in the war?']), ('answers', ['Archduke Franz Ferdinand', '16 million']), ('options', [['Archduke Johann Nepomuk', 'Archduke Karl Ludwig', 'Archduke Ernst Ludwig'], ['22 million', '32 million', '4 million']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['A number of alliances involving European powers, the Ottoman Empire, Russia and other parties had existed for years, but political instability in the Balkans (particularly Bosnia, Serbia and Herzegovina) threatened to destroy these agreements. The spark that ignited World War I was struck in Sarajevo, Bosnia, where Archduke Franz Ferdinand—heir to the Austro-Hungarian Empire—was shot to death along with his wife, Sophie, by the Serbian nationalist Gavrilo Princip on June 28, 1914.', 'I saw unprecedented levels of carnage and destruction. By the time the war was over and the Allied Powers claimed victory, more than 16 million people—soldiers and civilians alike—were dead.']), ('questions', ['Who was the heir to the Austro-Hungarian Empire?', 'How many people died in the war?']), ('answers', ['Archduke Franz Ferdinand', '16 million']), ('options', [['Archduke Johann Nepomuk', 'Archduke Karl Ludwig', 'Archduke Ernst Ludwig'], ['22 million', '32 million', '4 million']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['The assassination of Franz Ferdinand set off a rapidly escalating chain of events: Austria-Hungary, like many countries around the world, blamed the Serbian government for the attack and hoped to use the incident as justification for settling the question of Serbian nationalism once and for all.']), ('incorrect', [['The assassination of Franz Ferdinand set off a rapidly escalating chain of events: Austria-Hungary, like many countries around the world, blamed the Serbian government for the attack and hoped to send a strong message that the West would not hesitate to use force to crush the Muslim Brotherhood.', 'The assassination of Franz Ferdinand set off a rapidly escalating chain of events: Austria-Hungary, like many countries around the world, blamed the Serbian government for the attack and hoped to provoke a second war.', 'The assassination of Franz Ferdinand set off a rapidly escalating chain of events: Austria-Hungary, like many countries around the world, blamed the Serbian government for the attack and hoped to have a diplomatic solution.']])]))])
ERROR:root:Request 0:00:05.106153
ERROR:root:api_check 0:00:00.366150
ERROR:root:payload: 'The Cuban Missile Crisis, also known as the October Crisis of 1962 (Spanish: Crisis de Octubre), the Caribbean Crisis (Russian: Карибский кризис, tr. Karibsky krizis, IPA: [kɐˈrʲipskʲɪj ˈkrʲizʲɪs]), or the Missile Scare, was a one-month, four-day (16 October – 20 November 1962) confrontation between the United States and the Soviet Union which escalated into an international crisis when American deployments of missiles in Italy and Turkey were matched by Soviet deployments of similar ballistic missiles in Cuba. Despite the short time frame, the Cuban Missile Crisis remains a defining moment in US national security and nuclear war preparation. The confrontation is often considered the closest the Cold War came to escalating into a full-scale nuclear war.[3]\n\nIn response to the presence of American Jupiter ballistic missiles in Italy and Turkey, and the failed Bay of Pigs Invasion of 1961, Soviet First Secretary Nikita Khrushchev agreed to Cuba\'s request to place nuclear missiles on the island to deter a future invasion. An agreement was reached during a secret meeting between Khrushchev and Cuban Prime Minister Fidel Castro in July 1962, and construction of a number of missile launch facilities started later that summer.\n\nMeanwhile, the 1962 United States elections were under way, and the White House denied charges for months that it was ignoring dangerous Soviet missiles 90 mi (140 km) from Florida. The missile preparations were confirmed when an Air Force U-2 spy plane produced clear photographic evidence of medium-range R-12 (NATO code name SS-4) and intermediate-range R-14 (NATO code name SS-5) ballistic missile facilities.\n\nWhen this was reported to President John F. Kennedy, he then convened a meeting of the nine members of the National Security Council and five other key advisers in a group that became known as the Executive Committee of the National Security Council (EXCOMM). During this meeting, President Kennedy was originally advised to carry out an air strike on Cuban soil in order to compromise Soviet missile supplies, followed by an invasion of the Cuban mainland. After careful consideration, President Kennedy chose a less aggressive course of action to avoid a declaration of war. After consultation with them, Kennedy ordered a naval "quarantine" on October 22 to prevent further missiles from reaching Cuba. By using the term "quarantine" rather than "blockade" (an act of war by legal definition), the United States was able to avoid the implications of a state of war.[4] The US announced it would not permit offensive weapons to be delivered to Cuba and demanded that the weapons already in Cuba be dismantled and returned to the Soviet Union.\n\nAfter several days of tense negotiations, an agreement was reached between Kennedy and Khrushchev. Publicly, the Soviets would dismantle their offensive weapons in Cuba and return them to the Soviet Union, subject to United Nations verification, in exchange for a US public declaration and agreement to not invade Cuba again. Secretly, the United States agreed that it would dismantle all of the Jupiter MRBMs, which had been deployed in Turkey against the Soviet Union. There has been debate on whether or not Italy was included in the agreement as well. While the Soviets dismantled their missiles, some Soviet bombers remained in Cuba, and the United States kept the naval quarantine in place until November 20 of that year.[4]\n\nWhen all offensive missiles and the Ilyushin Il-28 light bombers had been withdrawn from Cuba, the blockade was formally ended on November 20, 1962. The negotiations between the United States and the Soviet Union pointed out the necessity of a quick, clear, and direct communication line between the two superpowers. As a result, the Moscow–Washington hotline was established. A series of agreements later reduced US–Soviet tensions for several years until both parties eventually resumed expanding their nuclear arsenals.'
ERROR:root:orig input: 'The Cuban Missile Crisis, also known as the October Crisis of 1962 (Spanish: Crisis de Octubre), the Caribbean Crisis (Russian: Карибский кризис, tr. Karibsky krizis, IPA: [kɐˈrʲipskʲɪj ˈkrʲizʲɪs]), or the Missile Scare, was a one-month, four-day (16 October – 20 November 1962) confrontation between the United States and the Soviet Union which escalated into an international crisis when American deployments of missiles in Italy and Turkey were matched by Soviet deployments of similar ballistic missiles in Cuba. Despite the short time frame, the Cuban Missile Crisis remains a defining moment in US national security and nuclear war preparation. The confrontation is often considered the closest the Cold War came to escalating into a full-scale nuclear war.[3]\r\n\r\nIn response to the presence of American Jupiter ballistic missiles in Italy and Turkey, and the failed Bay of Pigs Invasion of 1961, Soviet First Secretary Nikita Khrushchev agreed to Cuba\'s request to place nuclear missiles on the island to deter a future invasion. An agreement was reached during a secret meeting between Khrushchev and Cuban Prime Minister Fidel Castro in July 1962, and construction of a number of missile launch facilities started later that summer.\r\n\r\nMeanwhile, the 1962 United States elections were under way, and the White House denied charges for months that it was ignoring dangerous Soviet missiles 90 mi (140 km) from Florida. The missile preparations were confirmed when an Air Force U-2 spy plane produced clear photographic evidence of medium-range R-12 (NATO code name SS-4) and intermediate-range R-14 (NATO code name SS-5) ballistic missile facilities.\r\n\r\nWhen this was reported to President John F. Kennedy, he then convened a meeting of the nine members of the National Security Council and five other key advisers in a group that became known as the Executive Committee of the National Security Council (EXCOMM). During this meeting, President Kennedy was originally advised to carry out an air strike on Cuban soil in order to compromise Soviet missile supplies, followed by an invasion of the Cuban mainland. After careful consideration, President Kennedy chose a less aggressive course of action to avoid a declaration of war. After consultation with them, Kennedy ordered a naval "quarantine" on October 22 to prevent further missiles from reaching Cuba. By using the term "quarantine" rather than "blockade" (an act of war by legal definition), the United States was able to avoid the implications of a state of war.[4] The US announced it would not permit offensive weapons to be delivered to Cuba and demanded that the weapons already in Cuba be dismantled and returned to the Soviet Union.\r\n\r\nAfter several days of tense negotiations, an agreement was reached between Kennedy and Khrushchev. Publicly, the Soviets would dismantle their offensive weapons in Cuba and return them to the Soviet Union, subject to United Nations verification, in exchange for a US public declaration and agreement to not invade Cuba again. Secretly, the United States agreed that it would dismantle all of the Jupiter MRBMs, which had been deployed in Turkey against the Soviet Union. There has been debate on whether or not Italy was included in the agreement as well. While the Soviets dismantled their missiles, some Soviet bombers remained in Cuba, and the United States kept the naval quarantine in place until November 20 of that year.[4]\r\n\r\nWhen all offensive missiles and the Ilyushin Il-28 light bombers had been withdrawn from Cuba, the blockade was formally ended on November 20, 1962. The negotiations between the United States and the Soviet Union pointed out the necessity of a quick, clear, and direct communication line between the two superpowers. As a result, the Moscow–Washington hotline was established. A series of agreements later reduced US–Soviet tensions for several years until both parties eventually resumed expanding their nuclear arsenals.'
ERROR:root:orig selected_specific len[[["(Spanish: Crisis de Octubre), the Caribbean Crisis (Russian: Карибский кризис, tr. Karibsky krizis, IPA: [kɐˈrʲipskʲɪj ˈkrʲizʲɪs]), or the Missile Scare, was a one-month, four-day (16 October – 20 November 1962) confrontation between the United States and the Soviet Union which escalated into an international crisis when American deployments of missiles in Italy and Turkey were matched by Soviet deployments of similar ballistic missiles in Cuba.",{},1],["In response to the presence of American Jupiter ballistic missiles in Italy and Turkey, and the failed Bay of Pigs Invasion of 1961, Soviet First Secretary Nikita Khrushchev agreed to Cuba's request to place nuclear missiles on the island to deter a future invasion.",{},4],["The missile preparations were confirmed when an Air Force U-2 spy plane produced clear photographic evidence of medium-range R-12 (NATO code name SS-4) and intermediate-range R-14 (NATO code name SS-5) ballistic missile facilities.",{},7],["When all offensive missiles and the Ilyushin Il-28 light bombers had been withdrawn from Cuba, the blockade was formally ended on November 20, 1962.",{},19],["While the Soviets dismantled their missiles, some Soviet bombers remained in Cuba, and the United States kept the naval quarantine in place until November 20 of that year.[4]",{},18],["After consultation with them, Kennedy ordered a naval \"quarantine\" on October 22 to prevent further missiles from reaching Cuba.",{},11],["An agreement was reached during a secret meeting between Khrushchev and Cuban Prime Minister Fidel Castro in July 1962, and construction of a number of missile launch facilities started later that summer.",{},5],["During this meeting, President Kennedy was originally advised to carry out an air strike on Cuban soil in order to compromise Soviet missile supplies, followed by an invasion of the Cuban mainland.",{},9],["The US announced it would not permit offensive weapons to be delivered to Cuba and demanded that the weapons already in Cuba be dismantled and returned to the Soviet Union.",{},13],["When this was reported to President John F. Kennedy, he then convened a meeting of the nine members of the National Security Council and five other key advisers in a group that became known as the Executive Committee of the National Security Council (EXCOMM).",{},8],["Publicly, the Soviets would dismantle their offensive weapons in Cuba and return them to the Soviet Union, subject to United Nations verification, in exchange for a US public declaration and agreement to not invade Cuba again.",{},15],["The Cuban Missile Crisis, also known as the October Crisis of 1962",{},0],["Meanwhile, the 1962 United States elections were under way, and the White House denied charges for months that it was ignoring dangerous Soviet missiles 90 mi (140 km) from Florida.",{},6],["Secretly, the United States agreed that it would dismantle all of the Jupiter MRBMs, which had been deployed in Turkey against the Soviet Union.",{},16]],["The Cuban Missile Crisis, also known as the October Crisis of 1962","(Spanish: Crisis de Octubre), the Caribbean Crisis (Russian: Карибский кризис, tr. Karibsky krizis, IPA: [kɐˈrʲipskʲɪj ˈkrʲizʲɪs]), or the Missile Scare, was a one-month, four-day (16 October – 20 November 1962) confrontation between the United States and the Soviet Union which escalated into an international crisis when American deployments of missiles in Italy and Turkey were matched by Soviet deployments of similar ballistic missiles in Cuba.","Despite the short time frame, the Cuban Missile Crisis remains a defining moment in US national security and nuclear war preparation.","The confrontation is often considered the closest the Cold War came to escalating into a full-scale nuclear war.[3]","In response to the presence of American Jupiter ballistic missiles in Italy and Turkey, and the failed Bay of Pigs Invasion of 1961, Soviet First Secretary Nikita Khrushchev agreed to Cuba's request to place nuclear missiles on the island to deter a future invasion.","An agreement was reached during a secret meeting between Khrushchev and Cuban Prime Minister Fidel Castro in July 1962, and construction of a number of missile launch facilities started later that summer.","Meanwhile, the 1962 United States elections were under way, and the White House denied charges for months that it was ignoring dangerous Soviet missiles 90 mi (140 km) from Florida.","The missile preparations were confirmed when an Air Force U-2 spy plane produced clear photographic evidence of medium-range R-12 (NATO code name SS-4) and intermediate-range R-14 (NATO code name SS-5) ballistic missile facilities.","When this was reported to President John F. Kennedy, he then convened a meeting of the nine members of the National Security Council and five other key advisers in a group that became known as the Executive Committee of the National Security Council (EXCOMM).","During a meeting of the nine members of the National Security Council and five other key advisers in a group that became known as the Executive Committee of the National Security Council (EXCOMM), President Kennedy was originally advised to carry out an air strike on Cuban soil in order to compromise Soviet missile supplies, followed by an invasion of the Cuban mainland.","After careful consideration, President Kennedy chose a less aggressive course of action to avoid a declaration of war.","After consultation with them, Kennedy ordered a naval \"quarantine\" on October 22 to prevent further missiles from reaching Cuba.","By using the term \"quarantine\" rather than \"blockade\" (an act of war by legal definition), the United States was able to avoid the implications of a state of war.[4]","The US announced the United States would not permit offensive weapons to be delivered to Cuba and demanded that the weapons already in Cuba be dismantled and returned to the Soviet Union.","After several days of tense negotiations, an agreement was reached between Kennedy and Khrushchev.","Publicly, the Soviets would dismantle their offensive weapons in Cuba and return them to the Soviet Union, subject to United Nations verification, in exchange for a US public declaration and agreement to not invade Cuba again.","Secretly, the United States agreed that it would dismantle all of the Jupiter MRBMs, which had been deployed in Turkey against the Soviet Union.","There has been debate on whether or not Italy was included in the agreement as well.","While the Soviets dismantled their missiles, some Soviet bombers remained in Cuba, and the United States kept the naval quarantine in place until November 20 of that year.[4]","When all offensive missiles and the Ilyushin Il-28 light bombers had been withdrawn from Cuba, the blockade was formally ended on November 20, 1962.","The negotiations between the United States and the Soviet Union pointed out the necessity of a quick, clear, and direct communication line between the two superpowers.","As a result, the Moscow–Washington hotline was established.","A series of agreements later reduced US–Soviet tensions for several years until both parties eventually resumed expanding their nuclear arsenals."]]
ERROR:root:orig selected_specific len14
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.001763
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['The Cuban Missile Crisis, also known as the October Crisis of 1962 (Spanish: Crisis de Octubre), the Caribbean Crisis (Russian: Карибский кризис, tr. Karibsky krizis, IPA: [kɐˈrʲipskʲɪj ˈkrʲizʲɪs]), or the Missile Scare, was a one-month, four-day (16 October – 20 November 1962) confrontation between the United States and the Soviet Union which escalated into an international crisis when American deployments of missiles in Italy and Turkey were matched by Soviet deployments of similar ballistic missiles in Cuba.', "The confrontation is often considered the closest the Cold War came to escalating into a full-scale nuclear war.[3] In response to the presence of American Jupiter ballistic missiles in Italy and Turkey, and the failed Bay of Pigs Invasion of 1961, Soviet First Secretary Nikita Khrushchev agreed to Cuba's request to place nuclear missiles on the island to deter a future invasion."]), ('questions', ['Where did the Soviets deploy missiles?', 'Who was the Soviet First Secretary in 1961?']), ('answers', ['Cuba', 'Nikita Khrushchev']), ('options', [['Syria', 'Turkey', 'Iran'], ['Josef Stalin', 'Leon Trotsky', 'Vladimir Lenin']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The Cuban Missile Crisis, also known as the October Crisis of 1962 (Spanish: Crisis de Octubre), the Caribbean Crisis (Russian: Карибский кризис, tr. Karibsky krizis, IPA: [kɐˈrʲipskʲɪj ˈkrʲizʲɪs]), or the Missile Scare, was a one-month, four-day (16 October – 20 November 1962) confrontation between the United States and the Soviet Union which escalated into an international crisis when American deployments of missiles in Italy and Turkey were matched by Soviet deployments of similar ballistic missiles in Cuba.', "The confrontation is often considered the closest the Cold War came to escalating into a full-scale nuclear war.[3] In response to the presence of American Jupiter ballistic missiles in Italy and Turkey, and the failed Bay of Pigs Invasion of 1961, Soviet First Secretary Nikita Khrushchev agreed to Cuba's request to place nuclear missiles on the island to deter a future invasion."]), ('questions', ['Where did the Soviets deploy missiles?', 'Who was the Soviet First Secretary in 1961?']), ('answers', ['Cuba', 'Nikita Khrushchev']), ('options', [['Syria', 'Turkey', 'Iran'], ['Josef Stalin', 'Leon Trotsky', 'Vladimir Lenin']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:06.125098
ERROR:root:api_check 0:00:00.326687
ERROR:root:payload: "Jonathan Lyndale Kirk was born on December 22, 1991,[a] in Cleveland, Ohio.[9] He moved to Charlotte, North Carolina in 1999, where he spent most of his early years. \n\nKirk got his big break after signing to Arnold Taylor, the president of the South Coast Music Group label, a big radio promoter. Taylor saw Kirk perform around North Carolina clubs at the time he [Taylor] was launching his label. Taylor had been responsible for the early rise of Southern rap stars including Yo Gotti and Future.[11] Once they started working together, the team kept building buzz around the South with mixtapes and club shows, while Kirk was finding his sound. Through his deal with South Coast, Kirk signed a short-lived distribution deal with Jay-Z's Roc Nation for his Blank Blank mixtape that would prove to be his breakout in late 2018.[13] Thanks to the guidance of Taylor, and following major label bidding wars, Kirk landed a seven-figure recording deal with Interscope.[11]\n2019: Baby on Baby and Kirk\nDaBaby during an interview in 2018"
ERROR:root:orig input: "Jonathan Lyndale Kirk was born on December 22, 1991,[a] in Cleveland, Ohio.[9] He moved to Charlotte, North Carolina in 1999, where he spent most of his early years. \r\n\r\nKirk got his big break after signing to Arnold Taylor, the president of the South Coast Music Group label, a big radio promoter. Taylor saw Kirk perform around North Carolina clubs at the time he [Taylor] was launching his label. Taylor had been responsible for the early rise of Southern rap stars including Yo Gotti and Future.[11] Once they started working together, the team kept building buzz around the South with mixtapes and club shows, while Kirk was finding his sound. Through his deal with South Coast, Kirk signed a short-lived distribution deal with Jay-Z's Roc Nation for his Blank Blank mixtape that would prove to be his breakout in late 2018.[13] Thanks to the guidance of Taylor, and following major label bidding wars, Kirk landed a seven-figure recording deal with Interscope.[11]\r\n2019: Baby on Baby and Kirk\r\nDaBaby during an interview in 2018\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
ERROR:root:orig selected_specific len[[["Through his deal with South Coast, Kirk signed a short-lived distribution deal with Jay-Z's Roc Nation for his Blank Blank mixtape that would prove to be his breakout in late 2018.[13]",{},5],["Jonathan Lyndale Kirk was born on December 22, 1991,[a] in Cleveland, Ohio.[9] He moved to Charlotte, North Carolina in 1999, where he spent most of his early years.",{},0],["Baby on Baby and Kirk DaBaby during an interview in 2018",{},7],["Taylor saw Kirk perform around North Carolina clubs at the time he [Taylor] was launching his label.",{},2],["Thanks to the guidance of Taylor, and following major label bidding wars, Kirk landed a seven-figure recording deal with Interscope.[11] 2019:",{},6],["Kirk got his big break after signing to Arnold Taylor, the president of the South Coast Music Group label, a big radio promoter.",{},1],["Once they started working together, the team kept building buzz around the South with mixtapes and club shows, while Kirk was finding his sound.",{},4],["Taylor had been responsible for the early rise of Southern rap stars including Yo Gotti and Future.[11]",{},3]],["Jonathan Lyndale Kirk was born on December 22, 1991,[a] in Cleveland, Ohio.[9] He moved to Charlotte, North Carolina in 1999, where he spent most of his early years.","Kirk got Jonathan Lyndale Kirk's big break after signing to Arnold Taylor, the president of the South Coast Music Group label, a big radio promoter.","Taylor saw Kirk perform around North Carolina clubs at the time Jonathan Lyndale Kirk [Taylor] was launching Jonathan Lyndale Kirk's label.","Taylor had been responsible for the early rise of Southern rap stars including Yo Gotti and Future.[11]","Once they started working together, the team kept building buzz around the South with mixtapes and club shows, while Kirk was finding Jonathan Lyndale Kirk's sound.","Through Jonathan Lyndale Kirk's deal with South Coast, Kirk signed a short-lived distribution deal with Jay-Z's Roc Nation for Jonathan Lyndale Kirk's Blank Blank mixtape that would prove to be Jonathan Lyndale Kirk's breakout in late 2018.[13]","Thanks to the guidance of Taylor, and following major label bidding wars, Kirk landed a seven-figure recording deal with Interscope.[11] 2019:","Baby on Baby and Kirk DaBaby during an interview in 2018"]]
ERROR:root:orig selected_specific len8
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:api_check 0:00:00.371037
ERROR:root:Request 0:00:02.607542
ERROR:root:payload: 'The French Revolution (French: Révolution française [ʁevɔlysjɔ̃ fʁɑ̃sɛːz]) was a period of radical political and societal change in France that began with the Estates General of 1789 and ended with the formation of the French Consulate in November 1799. Many of its ideas are considered fundamental principles of liberal democracy,[1] while phrases like liberté, égalité, fraternité reappeared in other revolts, such as the 1917 Russian Revolution,[2] and inspired campaigns for the abolition of slavery and universal suffrage.[3] The values and institutions it created dominate French politics to this day.[4]\n\nIts causes are generally agreed to be a combination of social, political and economic factors, which the existing regime proved unable to manage. In May 1789, widespread social distress led to the convocation of the Estates General, which was converted into a National Assembly in June. Continuing unrest culminated in the Storming of the Bastille on 14 July, which led to a series of radical measures by the Assembly, including the abolition of feudalism, the imposition of state control over the Catholic Church in France, and extension of the right to vote.\n\nThe next three years were dominated by the struggle for political control, exacerbated by economic depression and Civil disorder. Opposition from external powers like Austria, Britain, and Prussia resulted in the outbreak of the French Revolutionary Wars in April 1792. Disillusionment with Louis XVI led to the establishment of the French First Republic on 22 September 1792, followed by his execution in January 1793. In June, an uprising in Paris replaced the Girondins who dominated the National Assembly with the Committee of Public Safety, headed by Maximilien Robespierre.\n\nThis sparked the Reign of Terror, an attempt to eradicate alleged "counter-revolutionaries"; by the time it ended in July 1794, over 16,600 had been executed in Paris and the provinces. As well as its external enemies, the Republic faced internal opposition from both Royalists and Jacobins and in order to deal with these threats, the French Directory took power in November 1795. Despite a series of military victories, many won by Napoleon Bonaparte, political divisions and economic stagnation resulted in the Directory being replaced by the Consulate in November 1799. This is generally seen as marking the end of the Revolutionary period'
ERROR:root:orig input: 'The French Revolution (French: Révolution française [ʁevɔlysjɔ̃ fʁɑ̃sɛːz]) was a period of radical political and societal change in France that began with the Estates General of 1789 and ended with the formation of the French Consulate in November 1799. Many of its ideas are considered fundamental principles of liberal democracy,[1] while phrases like liberté, égalité, fraternité reappeared in other revolts, such as the 1917 Russian Revolution,[2] and inspired campaigns for the abolition of slavery and universal suffrage.[3] The values and institutions it created dominate French politics to this day.[4]\r\n\r\nIts causes are generally agreed to be a combination of social, political and economic factors, which the existing regime proved unable to manage. In May 1789, widespread social distress led to the convocation of the Estates General, which was converted into a National Assembly in June. Continuing unrest culminated in the Storming of the Bastille on 14 July, which led to a series of radical measures by the Assembly, including the abolition of feudalism, the imposition of state control over the Catholic Church in France, and extension of the right to vote.\r\n\r\nThe next three years were dominated by the struggle for political control, exacerbated by economic depression and Civil disorder. Opposition from external powers like Austria, Britain, and Prussia resulted in the outbreak of the French Revolutionary Wars in April 1792. Disillusionment with Louis XVI led to the establishment of the French First Republic on 22 September 1792, followed by his execution in January 1793. In June, an uprising in Paris replaced the Girondins who dominated the National Assembly with the Committee of Public Safety, headed by Maximilien Robespierre.\r\n\r\nThis sparked the Reign of Terror, an attempt to eradicate alleged "counter-revolutionaries"; by the time it ended in July 1794, over 16,600 had been executed in Paris and the provinces. As well as its external enemies, the Republic faced internal opposition from both Royalists and Jacobins and in order to deal with these threats, the French Directory took power in November 1795. Despite a series of military victories, many won by Napoleon Bonaparte, political divisions and economic stagnation resulted in the Directory being replaced by the Consulate in November 1799. This is generally seen as marking the end of the Revolutionary period'
ERROR:root:orig selected_specific len[[["This sparked the Reign of Terror, an attempt to eradicate alleged \"counter-revolutionaries\"; by the time it ended in July 1794, over 16,600 had been executed in Paris and the provinces.",{},11],["In June, an uprising in Paris replaced the Girondins who dominated the National Assembly with the Committee of Public Safety, headed by Maximilien Robespierre.",{},10],["Disillusionment with Louis XVI led to the establishment of the French First Republic on 22 September 1792, followed by his execution in January 1793.",{},9],["Révolution française [ʁevɔlysjɔ̃ fʁɑ̃sɛːz]) was a period of radical political and societal change in France that began with the Estates General of 1789 and ended with the formation of the French Consulate in November 1799.",{},1],["Continuing unrest culminated in the Storming of the Bastille on 14 July, which led to a series of radical measures by the Assembly, including the abolition of feudalism, the imposition of state control over the Catholic Church in France, and extension of the right to vote.",{},6],["Many of its ideas are considered fundamental principles of liberal democracy,[1] while phrases like liberté, égalité, fraternité reappeared in other revolts, such as the 1917 Russian Revolution,[2] and inspired campaigns for the abolition of slavery and universal suffrage.[3]",{},2],["In May 1789, widespread social distress led to the convocation of the Estates General, which was converted into a National Assembly in June.",{},5],["Despite a series of military victories, many won by Napoleon Bonaparte, political divisions and economic stagnation resulted in the Directory being replaced by the Consulate in November 1799.",{},13],["As well as its external enemies, the Republic faced internal opposition from both Royalists and Jacobins and in order to deal with these threats, the French Directory took power in November 1795.",{},12],["Opposition from external powers like Austria, Britain, and Prussia resulted in the outbreak of the French Revolutionary Wars in April 1792.",{},8]],["The French Revolution (French:","Révolution française [ʁevɔlysjɔ̃ fʁɑ̃sɛːz]) was a period of radical political and societal change in France that began with the Estates General of 1789 and ended with the formation of the French Consulate in November 1799.","Many of its ideas are considered fundamental principles of liberal democracy,[1] while phrases like liberté, égalité, fraternité reappeared in other revolts, such as the 1917 Russian Revolution,[2] and inspired campaigns for the abolition of slavery and universal suffrage.[3]","The values and institutions it created dominate French politics to this day.[4]","this day.[4's causes are generally agreed to be a combination of social, political and economic factors, which the existing regime proved unable to manage.","In May 1789, widespread social distress led to the convocation of the Estates General, which was converted into a National Assembly in June.","Continuing unrest culminated in the Storming of the Bastille on 14 July, which led to a series of radical measures by the Assembly, including the abolition of feudalism, the imposition of state control over the Catholic Church in France, and extension of the right to vote.","The next three years were dominated by the struggle for political control, exacerbated by economic depression and Civil disorder.","Opposition from external powers like Austria, Britain, and Prussia resulted in the outbreak of the French Revolutionary Wars in April 1792.","Disillusionment with Louis XVI led to the establishment of the French First Republic on 22 September 1792, followed by his execution in January 1793.","In June, an uprising in Paris replaced the Girondins who dominated the National Assembly with the Committee of Public Safety, headed by Maximilien Robespierre.","This sparked the Reign of Terror, an attempt to eradicate alleged \"counter-revolutionaries\"; by the time it ended in July 1794, over 16,600 had been executed in Paris and the provinces.","As well as its external enemies, the Republic faced internal opposition from both Royalists and Jacobins and in order to deal with these threats, the French Directory took power in November 1795.","Despite a series of military victories, many won by Napoleon Bonaparte, political divisions and economic stagnation resulted in the Directory being replaced by the Consulate in November 1799.","This is generally seen as marking the end of the Revolutionary period"]]
ERROR:root:orig selected_specific len10
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000731
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents4
ERROR:root:total before 0:00:02.560599
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001162
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'Many of its ideas are considered fundamental principles of liberal democracy,[1] while phrases like liberté, égalité, fraternité reappeared in other revolts, such as the  _________ ,[2] and inspired campaigns for the abolition of slavery and universal suffrage.[3]', 'answer': '1917 Russian Revolution', 'options': ['1848 French Revolution', '1905 Russian Revolution', '1850s American Revolution'], 'context': 'Many of its ideas are considered fundamental principles of liberal democracy,[1] while phrases like liberté, égalité, fraternité reappeared in other revolts, such as the 1917 Russian Revolution,[2] and inspired campaigns for the abolition of slavery and universal suffrage.[3]'}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['Disillusionment with Louis XVI led to the establishment of the French First Republic on 22 September 1792, followed by his execution in January 1793. In June, an uprising in Paris replaced the Girondins who dominated the National Assembly with the Committee of Public Safety, headed by Maximilien Robespierre.', 'Opposition from external powers like Austria, Britain, and Prussia resulted in the outbreak of the French Revolutionary Wars in April 1792. Disillusionment with Louis XVI led to the establishment of the French First Republic on 22 September 1792, followed by his execution in January 1793.', 'The French Revolution (French: Révolution française [ʁevɔlysjɔ̃ fʁɑ̃sɛːz]) was a period of radical political and societal change in France that began with the Estates General of 1789 and ended with the formation of the French Consulate in November 1799.', 'Many of its ideas are considered fundamental principles of liberal democracy,[1] while phrases like liberté, égalité, fraternité reappeared in other revolts, such as the 1917 Russian Revolution,[2] and inspired campaigns for the abolition of slavery and universal suffrage.[3]']), ('questions', ['In what month did the uprising in Paris replace the Girondins?', 'Who was the leader of the French Revolutionary War?', 'When was the French Consulate formed?', 'Many of its ideas are considered fundamental principles of liberal democracy,[1] while phrases like liberté, égalité, fraternité reappeared in other revolts, such as the  _________ ,[2] and inspired campaigns for the abolition of slavery and universal suffrage.[3]']), ('answers', ['June', 'Louis XVI', 'November 1799', '1917 Russian Revolution']), ('options', [['September', 'April', 'February'], ['King Louis XVIII', 'Napoleon Bonaparte', 'Maximilien Robespierre'], ['May 1799', '1789', 'July 1789'], ['1848 French Revolution', '1905 Russian Revolution', '1850s American Revolution']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Disillusionment with Louis XVI led to the establishment of the French First Republic on 22 September 1792, followed by his execution in January 1793. In June, an uprising in Paris replaced the Girondins who dominated the National Assembly with the Committee of Public Safety, headed by Maximilien Robespierre.', 'Opposition from external powers like Austria, Britain, and Prussia resulted in the outbreak of the French Revolutionary Wars in April 1792. Disillusionment with Louis XVI led to the establishment of the French First Republic on 22 September 1792, followed by his execution in January 1793.', 'The French Revolution (French: Révolution française [ʁevɔlysjɔ̃ fʁɑ̃sɛːz]) was a period of radical political and societal change in France that began with the Estates General of 1789 and ended with the formation of the French Consulate in November 1799.', 'Many of its ideas are considered fundamental principles of liberal democracy,[1] while phrases like liberté, égalité, fraternité reappeared in other revolts, such as the 1917 Russian Revolution,[2] and inspired campaigns for the abolition of slavery and universal suffrage.[3]']), ('questions', ['In what month did the uprising in Paris replace the Girondins?', 'Who was the leader of the French Revolutionary War?', 'When was the French Consulate formed?', 'Many of its ideas are considered fundamental principles of liberal democracy,[1] while phrases like liberté, égalité, fraternité reappeared in other revolts, such as the  _________ ,[2] and inspired campaigns for the abolition of slavery and universal suffrage.[3]']), ('answers', ['June', 'Louis XVI', 'November 1799', '1917 Russian Revolution']), ('options', [['September', 'April', 'February'], ['King Louis XVIII', 'Napoleon Bonaparte', 'Maximilien Robespierre'], ['May 1799', '1789', 'July 1789'], ['1848 French Revolution', '1905 Russian Revolution', '1850s American Revolution']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['Continuing unrest culminated in the Storming of the Bastille on 14 July, which led to a series of radical measures by the Assembly, including the abolition of feudalism, the imposition of state control over the Catholic Church in France, and extension of the right to vote.']), ('incorrect', [['Continuing unrest culminated in the Storming of the Bastille on 14 July, which led to a series of radical measures by the Assembly, including a series of mass arrests and arrests.', 'Continuing unrest culminated in the Storming of the Bastille on 14 July, which led to a series of radical measures by the Assembly, including a curfew for civilians, and an increased curfew on the public.', 'Continuing unrest culminated in the Storming of the Bastille on 14 July, which led to a series of radical measures by the Assembly, including arrests, torture and death.']])]))])
ERROR:root:Request 0:00:06.079407
ERROR:root:api_check 0:00:00.332457
ERROR:root:payload: 'Kirk got his big break after signing to Arnold Taylor, the president of the South Coast Music Group label, a big radio promoter. Taylor saw Kirk perform around North Carolina clubs at the time he [Taylor] was launching his label. Taylor had been responsible for the early rise of Southern rap stars including Yo Gotti and Future.[11] Once they started working together, the team kept building buzz around the South with mixtapes and club shows, while Kirk was finding his sound. Through his deal with South Coast, Kirk signed a short-lived distribution deal with Jay-Z\'s Roc Nation for his Blank Blank mixtape that would prove to be his breakout in late 2018.[13] Thanks to the guidance of Taylor, and following major label bidding wars, Kirk landed a seven-figure recording deal with Interscope.[11]\n2019: Baby on Baby and Kirk\nDaBaby during an interview in 2018\n\nIn January 2019, upon being signed to Interscope, Kirk launched his own imprint, Billion Dollar Baby Entertainment.[14] On March 1, 2019, Kirk\'s debut studio album Baby on Baby, was released via Interscope Records. He is also signed to South Coast Music Group and has a joint contract with both labels. The thirteen-track project features guest appearances from Offset, Rich Homie Quan, Rich the Kid and Stunna 4 Vegas. Baby on Baby debuted at number 25 on the Billboard 200 albums chart in the US. The song "Suge" debuted on the Billboard Hot 100 at number 87 on the chart dated April 13, 2019, and later reached the top 10, on the chart dated June 8, 2019.[15] Kirk was featured on the cover of XXL as part of the Freshman Class of 2019.[16]\n\nKirk featured on various hit songs throughout mid-2019, including Megan Thee Stallion\'s "Cash Shit" and Quality Control\'s "Baby", both of which reached the top 40 on the Billboard Hot 100. On July 5, 2019, Kirk was featured on Dreamville\'s compilation album Revenge of the Dreamers III, on the opening track, "Under the Sun". He received acclaim for his guest feature, with various publications ranking it as his best verse of 2019,[17][18][19] including Complex magazine calling it a "defining breakout moment for a new rap superstar".\n\nIn August 2019, he announced that his second album would be titled Kirk, a tribute to his last name.[20] It was released on September 27, and debuted atop the US Billboard 200.[21] Its lead single, "Intro", was also successful, peaking at number 13 on the US Billboard Hot 100 chart. Around that time, Kirk also made notable appearances on singles such as Post Malone\'s "Enemies",[22] which peaked at number 16 on the Billboard Hot 100, and on the remixes to YG\'s "Stop Snitchin", Lizzo\'s "Truth Hurts",[23] and Lil Nas X\'s "Panini",[24] released on May 24, August 23, and September 13, 2019, respectively. On October 24, he made a cameo appearance in the music video for up-and-coming rapper Rich Dunk\'s breakthrough single "High School".[25]\n\nKirk closed 2019 having 22 entries on the Billboard Hot 100 for the year, the most of any artist that year.[26][27]\n2020–present: Blame It on Baby, "Rockstar" and My Brother\'s Keeper\n\nAt the 62nd Annual Grammy Awards, held in 2020, Kirk received two nominations, both for "Suge", in the categories Best Rap Performance and Best Rap Song.[28] On April 13, 2020, he announced on Twitter that his third studio album, Blame It on Baby, would be released on April 17, 2020.[29] The album received mixed to positive reviews, and achieved commercial success, debuting atop the Billboard 200 with 124,000 album-equivalent units, becoming Kirk\'s second number-one album.[30] It also produced his highest-charting song, "Rockstar", featuring Roddy Ricch, which spent seven non-consecutive weeks at number-one on the Billboard Hot 100, and reached number-one in the United Kingdom.[30][31] In June, Kirk was featured on the remix for the Jack Harlow song "Whats Poppin", which peaked at number two on the Hot 100 while "Rockstar" was still at the top. This made DaBaby the 20th act to occupy the chart\'s top 2 positions, and the first since Ariana Grande in 2019. In July, Kirk was featured on "For the Night" by Pop Smoke and Lil Baby, which debuted at number six on the Hot 100. As a result, DaBaby became the seventh act to chart at least three songs in the top six simultaneously.[32]'
ERROR:root:orig input: '\r\n\r\nKirk got his big break after signing to Arnold Taylor, the president of the South Coast Music Group label, a big radio promoter. Taylor saw Kirk perform around North Carolina clubs at the time he [Taylor] was launching his label. Taylor had been responsible for the early rise of Southern rap stars including Yo Gotti and Future.[11] Once they started working together, the team kept building buzz around the South with mixtapes and club shows, while Kirk was finding his sound. Through his deal with South Coast, Kirk signed a short-lived distribution deal with Jay-Z\'s Roc Nation for his Blank Blank mixtape that would prove to be his breakout in late 2018.[13] Thanks to the guidance of Taylor, and following major label bidding wars, Kirk landed a seven-figure recording deal with Interscope.[11]\r\n2019: Baby on Baby and Kirk\r\nDaBaby during an interview in 2018\r\n\r\nIn January 2019, upon being signed to Interscope, Kirk launched his own imprint, Billion Dollar Baby Entertainment.[14] On March 1, 2019, Kirk\'s debut studio album Baby on Baby, was released via Interscope Records. He is also signed to South Coast Music Group and has a joint contract with both labels. The thirteen-track project features guest appearances from Offset, Rich Homie Quan, Rich the Kid and Stunna 4 Vegas. Baby on Baby debuted at number 25 on the Billboard 200 albums chart in the US. The song "Suge" debuted on the Billboard Hot 100 at number 87 on the chart dated April 13, 2019, and later reached the top 10, on the chart dated June 8, 2019.[15] Kirk was featured on the cover of XXL as part of the Freshman Class of 2019.[16]\r\n\r\nKirk featured on various hit songs throughout mid-2019, including Megan Thee Stallion\'s "Cash Shit" and Quality Control\'s "Baby", both of which reached the top 40 on the Billboard Hot 100. On July 5, 2019, Kirk was featured on Dreamville\'s compilation album Revenge of the Dreamers III, on the opening track, "Under the Sun". He received acclaim for his guest feature, with various publications ranking it as his best verse of 2019,[17][18][19] including Complex magazine calling it a "defining breakout moment for a new rap superstar".\r\n\r\nIn August 2019, he announced that his second album would be titled Kirk, a tribute to his last name.[20] It was released on September 27, and debuted atop the US Billboard 200.[21] Its lead single, "Intro", was also successful, peaking at number 13 on the US Billboard Hot 100 chart. Around that time, Kirk also made notable appearances on singles such as Post Malone\'s "Enemies",[22] which peaked at number 16 on the Billboard Hot 100, and on the remixes to YG\'s "Stop Snitchin", Lizzo\'s "Truth Hurts",[23] and Lil Nas X\'s "Panini",[24] released on May 24, August 23, and September 13, 2019, respectively. On October 24, he made a cameo appearance in the music video for up-and-coming rapper Rich Dunk\'s breakthrough single "High School".[25]\r\n\r\nKirk closed 2019 having 22 entries on the Billboard Hot 100 for the year, the most of any artist that year.[26][27]\r\n2020–present: Blame It on Baby, "Rockstar" and My Brother\'s Keeper\r\n\r\nAt the 62nd Annual Grammy Awards, held in 2020, Kirk received two nominations, both for "Suge", in the categories Best Rap Performance and Best Rap Song.[28] On April 13, 2020, he announced on Twitter that his third studio album, Blame It on Baby, would be released on April 17, 2020.[29] The album received mixed to positive reviews, and achieved commercial success, debuting atop the Billboard 200 with 124,000 album-equivalent units, becoming Kirk\'s second number-one album.[30] It also produced his highest-charting song, "Rockstar", featuring Roddy Ricch, which spent seven non-consecutive weeks at number-one on the Billboard Hot 100, and reached number-one in the United Kingdom.[30][31] In June, Kirk was featured on the remix for the Jack Harlow song "Whats Poppin", which peaked at number two on the Hot 100 while "Rockstar" was still at the top. This made DaBaby the 20th act to occupy the chart\'s top 2 positions, and the first since Ariana Grande in 2019. In July, Kirk was featured on "For the Night" by Pop Smoke and Lil Baby, which debuted at number six on the Hot 100. As a result, DaBaby became the seventh act to chart at least three songs in the top six simultaneously.[32]\r\n\r\n\r\n\r\n\r\n'
ERROR:root:orig selected_specific len[[["The song \"Suge\" debuted on the Billboard Hot 100 at number 87 on the chart dated April 13, 2019, and later reached the top 10, on the chart dated June 8, 2019.[15] Kirk was featured on the cover of XXL as part of the Freshman Class of 2019.[16]",{},11],["In January 2019, upon being signed to Interscope, Kirk launched his own imprint, Billion Dollar Baby Entertainment.[14] On March 1, 2019, Kirk's debut studio album Baby on Baby, was released via Interscope Records.",{},7],["On July 5, 2019, Kirk was featured on Dreamville's compilation album Revenge of the Dreamers III, on the opening track, \"Under the Sun\".",{},13],["On April 13, 2020, he announced on Twitter that his third studio album, Blame It on Baby, would be released on April 17, 2020.[29]",{},23],["Around that time, Kirk also made notable appearances on singles such as Post Malone's \"Enemies\",[22] which peaked at number 16 on the Billboard Hot 100, and on the remixes to YG's \"Stop Snitchin\", Lizzo's \"Truth Hurts\",[23] and Lil Nas X's \"Panini\",[24] released on May 24, August 23, and September 13, 2019, respectively.",{},18],["Through his deal with South Coast, Kirk signed a short-lived distribution deal with Jay-Z's Roc Nation for his Blank Blank mixtape that would prove to be his breakout in late 2018.[13]",{},4],["On October 24, he made a cameo appearance in the music video for up-and-coming rapper Rich Dunk's breakthrough single \"High School\".[25]",{},19],["At the 62nd Annual Grammy Awards, held in 2020, Kirk received two nominations, both for \"Suge\", in the categories Best Rap Performance and Best Rap Song.[28]",{},22],["Kirk closed 2019 having 22 entries on the Billboard Hot 100 for the year, the most of any artist that year.[26][27] 2020–present",{},20],["Kirk featured on various hit songs throughout mid-2019, including Megan Thee Stallion's \"Cash Shit\" and Quality Control's \"Baby\", both of which reached the top 40 on the Billboard Hot 100.",{},12],["This made DaBaby the 20th act to occupy the chart's top 2 positions, and the first since Ariana Grande in 2019.",{},28],["It also produced his highest-charting song, \"Rockstar\", featuring Roddy Ricch, which spent seven non-consecutive weeks at number-one on the Billboard Hot 100, and reached number-one in the United Kingdom.[30][31]",{},25],["In August 2019, he announced that his second album would be titled Kirk, a tribute to his last name.[20]",{},15],["He received acclaim for his guest feature, with various publications ranking it as his best verse of 2019,[17][18][19] including Complex magazine calling it a \"defining breakout moment for a new rap superstar\".",{},14],["The album received mixed to positive reviews, and achieved commercial success, debuting atop the Billboard 200 with 124,000 album-equivalent units, becoming Kirk's second number-one album.[30]",{},24],["For the Night\" by Pop Smoke and Lil Baby, which debuted at number six on the Hot 100.",{},30],["The thirteen-track project features guest appearances from Offset, Rich Homie Quan, Rich the Kid and Stunna 4 Vegas.",{},9],["Baby on Baby and Kirk DaBaby during an interview in 2018",{},6],["Baby on Baby debuted at number 25 on the Billboard 200 albums chart in the US.",{},10],["Taylor saw Kirk perform around North Carolina clubs at the time he [Taylor] was launching his label.",{},1],["Whats Poppin\", which peaked at number two on the Hot 100 while \"Rockstar\" was still at the top.",{},27],["Thanks to the guidance of Taylor, and following major label bidding wars, Kirk landed a seven-figure recording deal with Interscope.[11] 2019:",{},5],["In June, Kirk was featured on the remix for the Jack Harlow song \"",{},26],["Kirk got his big break after signing to Arnold Taylor, the president of the South Coast Music Group label, a big radio promoter.",{},0],["It was released on September 27, and debuted atop the US Billboard 200.[21]",{},16],["Once they started working together, the team kept building buzz around the South with mixtapes and club shows, while Kirk was finding his sound.",{},3],["Taylor had been responsible for the early rise of Southern rap stars including Yo Gotti and Future.[11]",{},2],["Its lead single, \"Intro\", was also successful, peaking at number 13 on the US Billboard Hot 100 chart.",{},17],["As a result, DaBaby became the seventh act to chart at least three songs in the top six simultaneously.[32]",{},31],["In July, Kirk was featured on \"",{},29],[": Blame It on Baby, \"Rockstar\" and My Brother's Keeper",{},21],["He is also signed to South Coast Music Group and has a joint contract with both labels.",{},8]],["Kirk got his big break after signing to Arnold Taylor, the president of the South Coast Music Group label, a big radio promoter.","Taylor saw Kirk perform around North Carolina clubs at the time he [Taylor] was launching his label.","Taylor had been responsible for the early rise of Southern rap stars including Yo Gotti and Future.[11]","Once they started working together, the team kept building buzz around the South with mixtapes and club shows, while Kirk was finding his sound.","Through his deal with South Coast, Kirk signed a short-lived distribution deal with Jay-Z's Roc Nation for his Blank Blank mixtape that would prove to be his breakout in late 2018.[13]","Thanks to the guidance of Taylor, and following major label bidding wars, Kirk landed a seven-figure recording deal with Interscope.[11] 2019:","Baby on Baby and Kirk DaBaby during an interview in 2018","In January 2019, upon being signed to Interscope, Kirk launched his own imprint, Billion Dollar Baby Entertainment.[14] On March 1, 2019, Kirk's debut studio album Baby on Baby, was released via Interscope Records.","Kirk is also signed to South Coast Music Group and has a joint contract with both labels.","The thirteen-track project features guest appearances from Offset, Rich Homie Quan, Rich the Kid and Stunna 4 Vegas.","Baby on Baby debuted at number 25 on the Billboard 200 albums chart in the US.","The song \"Suge\" debuted on the Billboard Hot 100 at number 87 on the chart dated April 13, 2019, and later reached the top 10, on the chart dated June 8, 2019.[15] Kirk was featured on the cover of XXL as part of the Freshman Class of 2019.[16]","Kirk featured on various hit songs throughout mid-2019, including Megan Thee Stallion's \"Cash Shit\" and Quality Control's \"Baby\", both of which reached the top 40 on the Billboard Hot 100.","On July 5, 2019, Kirk was featured on Dreamville's compilation album Revenge of the Dreamers III, on the opening track, \"Under the Sun\".","Kirk received acclaim for Kirk's guest feature, with various publications ranking it as Kirk's best verse of 2019,[17][18][19] including Complex magazine calling it a \"defining breakout moment for a new rap superstar\".","In August 2019, he announced that his second album would be titled Kirk, a tribute to his last name.[20]","his second album was released on September 27, and debuted atop the US Billboard 200.[21]","his second album's lead single, \"Intro\", was also successful, peaking at number 13 on the US Billboard Hot 100 chart.","Around that time, Kirk also made notable appearances on singles such as Post Malone's \"Enemies\",[22] which peaked at number 16 on the Billboard Hot 100, and on the remixes to YG's \"Stop Snitchin\", Lizzo's \"Truth Hurts\",[23] and Lil Nas X's \"Panini\",[24] released on May 24, August 23, and September 13, 2019, respectively.","On October 24, Kirk made a cameo appearance in the music video for up-and-coming rapper Rich Dunk's breakthrough single \"High School\".[25]","Kirk closed 2019 having 22 entries on the Billboard Hot 100 for the year, the most of any artist that year.[26][27] 2020–present",": Blame It on Baby, \"Rockstar\" and My Brother's Keeper","At the 62nd Annual Grammy Awards, held in 2020, Kirk received two nominations, both for \"Suge\", in the categories Best Rap Performance and Best Rap Song.[28]","On April 13, 2020, Kirk announced on Twitter that Kirk's third studio album, Blame It on Baby, would be released on April 17, 2020.[29]","The album received mixed to positive reviews, and achieved commercial success, debuting atop the Billboard 200 with 124,000 album-equivalent units, becoming Kirk's second number-one album.[30]","his third studio album also produced Kirk's highest-charting song, \"Rockstar\", featuring Roddy Ricch, which spent seven non-consecutive weeks at number-one on the Billboard Hot 100, and reached number-one in the United Kingdom.[30][31]","In June, Kirk was featured on the remix for the Jack Harlow song \"","Whats Poppin\", which peaked at number two on the Hot 100 while \"Rockstar\" was still at the top.","This made DaBaby the 20th act to occupy the chart's top 2 positions, and the first since Ariana Grande in 2019.","In July, Kirk was featured on \"","For the Night\" by Pop Smoke and Lil Baby, which debuted at number six on the Hot 100.","As a result, DaBaby became the seventh act to chart at least three songs in the top six simultaneously.[32]"]]
ERROR:root:orig selected_specific len32
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:03.983716
ERROR:root:api_check 0:00:00.370258
ERROR:root:payload: 'Jonathan Lyndale Kirk (born December 22, 1991), known professionally as DaBaby (formerly known as Baby Jesus), is an American rapper.[4] After releasing several mixtapes between 2014 and 2018, he rose to mainstream prominence in 2019.\n\nDaBaby\'s debut studio album Baby on Baby (2019) peaked at number seven on the Billboard 200,[5] while his second studio album, Kirk (2019), debuted at number one.[6] The former album featured the Billboard Hot 100 top-ten single "Suge", while the latter featured the multi-platinum records "Intro" and "Bop".[7] His third studio album, Blame It on Baby (2020), became his second consecutive number-one album in the US. The album included his highest-charting song, "Rockstar" (featuring Roddy Ricch), which spent seven non-consecutive weeks at number one on the Billboard Hot 100.[8]'
ERROR:root:orig input: 'Jonathan Lyndale Kirk (born December 22, 1991), known professionally as DaBaby (formerly known as Baby Jesus), is an American rapper.[4] After releasing several mixtapes between 2014 and 2018, he rose to mainstream prominence in 2019.\r\n\r\nDaBaby\'s debut studio album Baby on Baby (2019) peaked at number seven on the Billboard 200,[5] while his second studio album, Kirk (2019), debuted at number one.[6] The former album featured the Billboard Hot 100 top-ten single "Suge", while the latter featured the multi-platinum records "Intro" and "Bop".[7] His third studio album, Blame It on Baby (2020), became his second consecutive number-one album in the US. The album included his highest-charting song, "Rockstar" (featuring Roddy Ricch), which spent seven non-consecutive weeks at number one on the Billboard Hot 100.[8] '
ERROR:root:orig selected_specific len[[["The album included his highest-charting song, \"Rockstar\" (featuring Roddy Ricch), which spent seven non-consecutive weeks at number one on the Billboard Hot 100.[8]",{},6],["DaBaby's debut studio album Baby on Baby (2019) peaked at number seven on the Billboard 200,[5]",{},2],["Jonathan Lyndale Kirk (born December 22, 1991), known professionally as DaBaby (formerly known as Baby Jesus), is an American rapper.[4]",{},0],["His third studio album, Blame It on Baby (2020), became his second consecutive number-one album in the US.",{},5],["The former album featured the Billboard Hot 100 top-ten single \"Suge\", while the latter featured the multi-platinum records \"Intro\" and \"Bop\".[7]",{},4],["while his second studio album, Kirk (2019), debuted at number one.[6]",{},3],["After releasing several mixtapes between 2014 and 2018, he rose to mainstream prominence in 2019.",{},1]],["Jonathan Lyndale Kirk (born December 22, 1991), known professionally as DaBaby (formerly known as Baby Jesus), is an American rapper.[4]","After releasing several mixtapes between 2014 and 2018, he rose to mainstream prominence in 2019.","DaBaby's debut studio album Baby on Baby (2019) peaked at number seven on the Billboard 200,[5]","while his second studio album, Kirk (2019), debuted at number one.[6]","The former album featured the Billboard Hot 100 top-ten single \"Suge\", while the latter featured the multi-platinum records \"Intro\" and \"Bop\".[7]","His third studio album, Blame It on Baby (2020), became his second consecutive number-one album in the US.","The album included his highest-charting song, \"Rockstar\" (featuring Roddy Ricch), which spent seven non-consecutive weeks at number one on the Billboard Hot 100.[8]"]]
ERROR:root:orig selected_specific len7
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000661
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents5
ERROR:root:total before 0:00:00.928514
ERROR:root:fitb timer0:00:00.000006
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['His third studio album, Blame It on Baby (2020), became his second consecutive number-one album in the US. The album included his highest-charting song, "Rockstar" (featuring Roddy Ricch), which spent seven non-consecutive weeks at number one on the Billboard Hot 100.[8]', "After releasing several mixtapes between 2014 and 2018, he rose to mainstream prominence in 2019. DaBaby's debut studio album Baby on Baby (2019) peaked at number seven on the Billboard 200,[5]", ' Jonathan Lyndale Kirk (born December 22, 1991), known professionally as DaBaby (formerly known as Baby Jesus), is an American rapper.[4]', 'The former album featured the Billboard Hot 100 top-ten single "Suge", while the latter featured the multi-platinum records "Intro" and "Bop".[7] His third studio album, Blame It on Baby (2020), became his second consecutive number-one album in the US.', 'while his second studio album, Kirk (2019), debuted at number one.[6] The former album featured the Billboard Hot 100 top-ten single "Suge", while the latter featured the multi-platinum records "Intro" and "Bop".[7]']), ('questions', ['How many weeks did Rockstar spend at number one on the Billboard Hot 100?', "What was DaBaby's debut album called?", "What was Kirk's previous nickname?", "What was the name of Kanye's third album?", "What Billboard Top 10 single was featured on Kirk's second album?"]), ('answers', ['seven', 'Baby on Baby', 'Baby Jesus', 'Blame It on Baby', '"Suge"']), ('options', [['four', 'three', 'five'], ["Momma's Baby", "Dadda's Baby", "Baby's First Album"], ['Captain Kirk', 'The Second Coming', 'Slim Jim'], ['Graduation', '808s & Heartbreak', 'Yeezus'], ['"Crazy"', '"All I Need"', '"What It Is"']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['His third studio album, Blame It on Baby (2020), became his second consecutive number-one album in the US. The album included his highest-charting song, "Rockstar" (featuring Roddy Ricch), which spent seven non-consecutive weeks at number one on the Billboard Hot 100.[8]', "After releasing several mixtapes between 2014 and 2018, he rose to mainstream prominence in 2019. DaBaby's debut studio album Baby on Baby (2019) peaked at number seven on the Billboard 200,[5]", ' Jonathan Lyndale Kirk (born December 22, 1991), known professionally as DaBaby (formerly known as Baby Jesus), is an American rapper.[4]', 'The former album featured the Billboard Hot 100 top-ten single "Suge", while the latter featured the multi-platinum records "Intro" and "Bop".[7] His third studio album, Blame It on Baby (2020), became his second consecutive number-one album in the US.', 'while his second studio album, Kirk (2019), debuted at number one.[6] The former album featured the Billboard Hot 100 top-ten single "Suge", while the latter featured the multi-platinum records "Intro" and "Bop".[7]']), ('questions', ['How many weeks did Rockstar spend at number one on the Billboard Hot 100?', "What was DaBaby's debut album called?", "What was Kirk's previous nickname?", "What was the name of Kanye's third album?", "What Billboard Top 10 single was featured on Kirk's second album?"]), ('answers', ['seven', 'Baby on Baby', 'Baby Jesus', 'Blame It on Baby', '"Suge"']), ('options', [['four', 'three', 'five'], ["Momma's Baby", "Dadda's Baby", "Baby's First Album"], ['Captain Kirk', 'The Second Coming', 'Slim Jim'], ['Graduation', '808s & Heartbreak', 'Yeezus'], ['"Crazy"', '"All I Need"', '"What It Is"']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['After releasing several mixtapes between 2014 and 2018, he rose to mainstream prominence in 2019.']), ('incorrect', [['After releasing several mixtapes between 2014 and 2018, he continues to keep the project going with his latest, The Last Of Us.', 'After releasing several mixtapes between 2014 and 2018, he was nominated for an Oscar and a Best Supporting Actor.', 'After releasing several mixtapes between 2014 and 2018, he is expected to release his fourth studio album on August 19.']])]))])
ERROR:root:Request 0:00:07.144076
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:02:10.741907
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len6
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.016520
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.773549
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.017696
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others,  _________  developed a sophisticated philosophical and scientific culture.', 'answer': 'the Ancient Greeks', 'options': ['the Ancient Romans', 'the Ancient Indians', 'the Ancient Chinese'], 'context': 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.'}, {'question_statement': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ .", 'answer': 'modern medicine', 'options': ['surgery', 'homeopathy', 'evidence-based medicine'], 'context': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others,  _________  developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'the Ancient Greeks', 'modern medicine']), ('options', [['Ancient Romans', 'Anthropologists', 'Ancient Chinese'], ['Aristotle', 'Galen', 'Plato'], ['the Ancient Romans', 'the Ancient Indians', 'the Ancient Chinese'], ['surgery', 'homeopathy', 'evidence-based medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others,  _________  developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'the Ancient Greeks', 'modern medicine']), ('options', [['Ancient Romans', 'Anthropologists', 'Ancient Chinese'], ['Aristotle', 'Galen', 'Plato'], ['the Ancient Romans', 'the Ancient Indians', 'the Ancient Chinese'], ['surgery', 'homeopathy', 'evidence-based medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('incorrect', [['We owe our basic ideas about geometry and the concept of mathematical proofs to those who have worked under him for decades.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to the mathematicians, the mathematicians who gave us the first idea about the concept of algebra.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to the most famous mathematician, Albert Einstein.'], ["The Hippocratic oath, a medical standard for doctors, is named after the physician, but there are many other important words used to indicate a doctor's commitment to the Hippocratic Oath.", "The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, who was also the father of medicine, and is regarded as the god of medicine and medicine's founder.", 'The Hippocratic oath, a medical standard for doctors, is named after Jesus Christ, the first-century Greek god of medicine.']])]))])
ERROR:root:Request 0:00:07.950626
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:39.679369
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len6
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000745
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.786579
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.000859
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ .", 'answer': 'modern medicine', 'options': ['evidence-based medicine', 'surgery', 'homeopathy'], 'context': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Ancient Chinese', 'Ancient Romans', 'Anthropologists'], ['Plato', 'Galen', 'Aristotle'], ['evidence-based medicine', 'surgery', 'homeopathy']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Ancient Chinese', 'Ancient Romans', 'Anthropologists'], ['Plato', 'Galen', 'Aristotle'], ['evidence-based medicine', 'surgery', 'homeopathy']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('incorrect', [['We owe our basic ideas about geometry and the concept of mathematical proofs to the mathematician who invented the concept of calculus and who, through the process of development, made a great deal of progress in mathematics.', "We owe our basic ideas about geometry and the concept of mathematical proofs to Einstein's great scientist Albert Einstein.", 'We owe our basic ideas about geometry and the concept of mathematical proofs to all of the people who are in charge of it.'], ['The Hippocratic oath, a medical standard for doctors, is named after the Greek physician Hippocrates, who was the first physician to be elected to the Senate.', 'The Hippocratic oath, a medical standard for doctors, is named after the Hippocratic oath, which was used to administer the oath to physicians during the first world war.', 'The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, the physician and philosopher, who wrote about the importance of medicine.']])]))])
ERROR:root:Request 0:00:12.196026
ERROR:root:api_check 0:00:00.375616
ERROR:root:payload: 'Biology is the branch of science concerned with the study of living things, or organisms. Biologists have identified traits common to all the living organisms that we know. Although nonliving things may show some of these properties, in order for something to be considered living, it must meet all of them.\nOrganization: Living things are highly organized (meaning they contain specialized, coordinated parts) and are made up of one or more cells.\nMetabolism: Living things must use energy and consume nutrients to carry out the chemical reactions that sustain life. The sum total of the biochemical reactions occurring in an organism is called its metabolism.\nHomeostasis: Living organisms regulate their internal environment to maintain the relatively narrow range of conditions needed for cell function.\nGrowth: Living organisms undergo regulated growth. Individual cells become larger in size, and multicellular organisms accumulate many cells through cell division.\nReproduction: Living organisms can reproduce themselves to create new organisms.\nResponse: Living organisms respond to stimuli or changes in their environment.\nEvolution: Populations of living organisms can undergo evolution, meaning that the genetic makeup of a population may change over time.'
ERROR:root:orig input: 'Biology is the branch of science concerned with the study of living things, or organisms. Biologists have identified traits common to all the living organisms that we know. Although nonliving things may show some of these properties, in order for something to be considered living, it must meet all of them.\r\nOrganization: Living things are highly organized (meaning they contain specialized, coordinated parts) and are made up of one or more cells.\r\nMetabolism: Living things must use energy and consume nutrients to carry out the chemical reactions that sustain life. The sum total of the biochemical reactions occurring in an organism is called its metabolism.\r\nHomeostasis: Living organisms regulate their internal environment to maintain the relatively narrow range of conditions needed for cell function.\r\nGrowth: Living organisms undergo regulated growth. Individual cells become larger in size, and multicellular organisms accumulate many cells through cell division.\r\nReproduction: Living organisms can reproduce themselves to create new organisms.\r\nResponse: Living organisms respond to stimuli or changes in their environment.\r\nEvolution: Populations of living organisms can undergo evolution, meaning that the genetic makeup of a population may change over time.'
ERROR:root:orig selected_specific len[[["Populations of living organisms can undergo evolution, meaning that the genetic makeup of a population may change over time.",{},18],["The sum total of the biochemical reactions occurring in an organism is called its metabolism.",{},7],["Individual cells become larger in size, and multicellular organisms accumulate many cells through cell division.",{},12],["Living organisms regulate their internal environment to maintain the relatively narrow range of conditions needed for cell function.",{},9],["Living things must use energy and consume nutrients to carry out the chemical reactions that sustain life.",{},6]],["Biology is the branch of science concerned with the study of living things, or organisms.","Biologists have identified traits common to all the living organisms that we know.","Although nonliving things may show some of these properties, in order for something to be considered living, it must meet all of them.","Organization:","Living things are highly organized (meaning they contain specialized, coordinated parts) and are made up of one or more cells.","Metabolism:","Living things must use energy and consume nutrients to carry out the chemical reactions that sustain life.","The sum total of the biochemical reactions occurring in an organism is called its metabolism.","Homeostasis:","Living organisms regulate their internal environment to maintain the relatively narrow range of conditions needed for cell function.","Growth:","Living organisms undergo regulated growth.","Individual cells become larger in size, and multicellular organisms accumulate many cells through cell division.","Reproduction:","Living organisms can reproduce themselves to create new organisms.","Response:","Living organisms respond to stimuli or changes in their environment.","Evolution:","Populations of living organisms can undergo evolution, meaning that the genetic makeup of a population may change over time."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000715
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents3
ERROR:root:total before 0:00:01.206817
ERROR:root:fitb timer0:00:00.000002
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['Evolution: Populations of living organisms can undergo evolution, meaning that the genetic makeup of a population may change over time.', 'Living things must use energy and consume nutrients to carry out the chemical reactions that sustain life. The sum total of the biochemical reactions occurring in an organism is called its metabolism.', 'Living organisms undergo regulated growth. Individual cells become larger in size, and multicellular organisms accumulate many cells through cell division.']), ('questions', ["What is it called when a population's genetic makeup changes over time?", 'What is the sum total of the biochemical reactions occurring in an organism?', 'What process is used to accumulate cells in cells?']), ('answers', ['evolution', 'metabolism', 'cell division']), ('options', [['a species', 'an adaptation', 'genetic drift'], ['growth', 'circulation', 'breathing'], ['cell communication', 'cell migration', 'cell growth']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Evolution: Populations of living organisms can undergo evolution, meaning that the genetic makeup of a population may change over time.', 'Living things must use energy and consume nutrients to carry out the chemical reactions that sustain life. The sum total of the biochemical reactions occurring in an organism is called its metabolism.', 'Living organisms undergo regulated growth. Individual cells become larger in size, and multicellular organisms accumulate many cells through cell division.']), ('questions', ["What is it called when a population's genetic makeup changes over time?", 'What is the sum total of the biochemical reactions occurring in an organism?', 'What process is used to accumulate cells in cells?']), ('answers', ['evolution', 'metabolism', 'cell division']), ('options', [['a species', 'an adaptation', 'genetic drift'], ['growth', 'circulation', 'breathing'], ['cell communication', 'cell migration', 'cell growth']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['Living organisms regulate their internal environment to maintain the relatively narrow range of conditions needed for cell function.', 'Living things must use energy and consume nutrients to carry out the chemical reactions that sustain life.']), ('incorrect', [['Living organisms regulate their internal environment to maintain their natural balance.', 'Living organisms regulate their internal environment to maintain their own health.', "Living organisms regulate their internal environment to maintain the body's biological integrity."], ['Living things must use energy and consume nutrients to carry out their work.', 'Living things must use energy and consume nutrients to carry out the natural functions of the human body.', 'Living things must use energy and consume nutrients to carry out the activities that are essential to their well-being.']])]))])
ERROR:root:Request 0:00:09.365264
ERROR:root:api_check 0:00:00.361845
ERROR:root:payload: 'Organization: Living things are highly organized (meaning they contain specialized, coordinated parts) and are made up of one or more cells.\nMetabolism: Living things must use energy and consume nutrients to carry out the chemical reactions that sustain life. The sum total of the biochemical reactions occurring in an organism is called its metabolism.\nHomeostasis: Living organisms regulate their internal environment to maintain the relatively narrow range of conditions needed for cell function.\nGrowth: Living organisms undergo regulated growth. Individual cells become larger in size, and multicellular organisms accumulate many cells through cell division.\nReproduction: Living organisms can reproduce themselves to create new organisms.\nResponse: Living organisms respond to stimuli or changes in their environment.\nEvolution: Populations of living organisms can undergo evolution, meaning that the genetic makeup of a population may change over time.'
ERROR:root:orig input: 'Organization: Living things are highly organized (meaning they contain specialized, coordinated parts) and are made up of one or more cells.\r\nMetabolism: Living things must use energy and consume nutrients to carry out the chemical reactions that sustain life. The sum total of the biochemical reactions occurring in an organism is called its metabolism.\r\nHomeostasis: Living organisms regulate their internal environment to maintain the relatively narrow range of conditions needed for cell function.\r\nGrowth: Living organisms undergo regulated growth. Individual cells become larger in size, and multicellular organisms accumulate many cells through cell division.\r\nReproduction: Living organisms can reproduce themselves to create new organisms.\r\nResponse: Living organisms respond to stimuli or changes in their environment.\r\nEvolution: Populations of living organisms can undergo evolution, meaning that the genetic makeup of a population may change over time.'
ERROR:root:orig selected_specific len[[["Populations of living organisms can undergo evolution, meaning that the genetic makeup of a population may change over time.",{},15],["The sum total of the biochemical reactions occurring in an organism is called its metabolism.",{},4],["Individual cells become larger in size, and multicellular organisms accumulate many cells through cell division.",{},9],["Living organisms regulate their internal environment to maintain the relatively narrow range of conditions needed for cell function.",{},6],["Living things must use energy and consume nutrients to carry out the chemical reactions that sustain life.",{},3]],["Organization:","Living things are highly organized (meaning they contain specialized, coordinated parts) and are made up of one or more cells.","Metabolism:","Living things must use energy and consume nutrients to carry out the chemical reactions that sustain life.","The sum total of the biochemical reactions occurring in an organism is called its metabolism.","Homeostasis:","Living organisms regulate their internal environment to maintain the relatively narrow range of conditions needed for cell function.","Growth:","Living organisms undergo regulated growth.","Individual cells become larger in size, and multicellular organisms accumulate many cells through cell division.","Reproduction:","Living organisms can reproduce themselves to create new organisms.","Response:","Living organisms respond to stimuli or changes in their environment.","Evolution:","Populations of living organisms can undergo evolution, meaning that the genetic makeup of a population may change over time."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.001610
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:00.966404
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001122
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'Living things must use  _________  to carry out the chemical reactions that sustain life.', 'answer': 'energy and consume nutrients', 'options': ['water and nutrients', 'nutrients and consume energy', 'energy and water'], 'context': 'Living things must use energy and consume nutrients to carry out the chemical reactions that sustain life.'}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['Evolution: Populations of living organisms can undergo evolution, meaning that the genetic makeup of a population may change over time.', 'Living things must use energy and consume nutrients to carry out the chemical reactions that sustain life. The sum total of the biochemical reactions occurring in an organism is called its metabolism.', 'Living things must use energy and consume nutrients to carry out the chemical reactions that sustain life.']), ('questions', ["What is it called when a population's genetic makeup changes over time?", 'What is the sum total of the biochemical reactions occurring in an organism?', 'Living things must use  _________  to carry out the chemical reactions that sustain life.']), ('answers', ['evolution', 'metabolism', 'energy and consume nutrients']), ('options', [['a species', 'an adaptation', 'genetic drift'], ['growth', 'circulation', 'breathing'], ['water and nutrients', 'nutrients and consume energy', 'energy and water']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Evolution: Populations of living organisms can undergo evolution, meaning that the genetic makeup of a population may change over time.', 'Living things must use energy and consume nutrients to carry out the chemical reactions that sustain life. The sum total of the biochemical reactions occurring in an organism is called its metabolism.', 'Living things must use energy and consume nutrients to carry out the chemical reactions that sustain life.']), ('questions', ["What is it called when a population's genetic makeup changes over time?", 'What is the sum total of the biochemical reactions occurring in an organism?', 'Living things must use  _________  to carry out the chemical reactions that sustain life.']), ('answers', ['evolution', 'metabolism', 'energy and consume nutrients']), ('options', [['a species', 'an adaptation', 'genetic drift'], ['growth', 'circulation', 'breathing'], ['water and nutrients', 'nutrients and consume energy', 'energy and water']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['Individual cells become larger in size, and multicellular organisms accumulate many cells through cell division.', 'Living organisms regulate their internal environment to maintain the relatively narrow range of conditions needed for cell function.']), ('incorrect', [['Individual cells become larger in size, and multicellular organisms become less able to withstand stress.', 'Individual cells become larger in size, and multicellular organisms are more efficient at producing complex molecules than their larger counterparts.', 'Individual cells become larger in size, and multicellular organisms become less abundant.'], ['Living organisms regulate their internal environment to maintain a healthy, efficient diet.', 'Living organisms regulate their internal environment to maintain the health of their hosts and to keep their own metabolism going.', 'Living organisms regulate their internal environment to maintain their survival.']])]))])
ERROR:root:Request 0:00:08.306909
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.371547
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len6
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.001388
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.321314
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.002017
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others,  _________  developed a sophisticated philosophical and scientific culture.', 'answer': 'the Ancient Greeks', 'options': ['the Ancient Indians', 'the Ancient Romans', 'the Ancient Chinese'], 'context': 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.'}, {'question_statement': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ .", 'answer': 'modern medicine', 'options': ['homeopathy', 'surgery', 'evidence-based medicine'], 'context': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others,  _________  developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'the Ancient Greeks', 'modern medicine']), ('options', [['Ancient Romans', 'Ancient Chinese', 'Anthropologists'], ['Galen', 'Plato', 'Aristotle'], ['the Ancient Indians', 'the Ancient Romans', 'the Ancient Chinese'], ['homeopathy', 'surgery', 'evidence-based medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others,  _________  developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'the Ancient Greeks', 'modern medicine']), ('options', [['Ancient Romans', 'Ancient Chinese', 'Anthropologists'], ['Galen', 'Plato', 'Aristotle'], ['the Ancient Indians', 'the Ancient Romans', 'the Ancient Chinese'], ['homeopathy', 'surgery', 'evidence-based medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('incorrect', [['We owe our basic ideas about geometry and the concept of mathematical proofs to those who have worked in physics and who have been inspired by Newtonian mechanics."', 'We owe our basic ideas about geometry and the concept of mathematical proofs to Albert Einstein.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to mathematicians like Albert Einstein and his students at Harvard.'], ['The Hippocratic oath, a medical standard for doctors, is named after the Greek philosopher Hippocrates, and the word for it is "sodomy."', 'The Hippocratic oath, a medical standard for doctors, is named after the Greek philosopher Plato, who had the great and the most eloquent philosophical treatise on medicine, Hippocrates.', 'The Hippocratic oath, a medical standard for doctors, is named after Hippocrates.']])]))])
ERROR:root:Request 0:00:06.701351
ERROR:root:api_check 0:00:00.358540
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len6
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.']), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?']), ('answers', ['Ancient Greeks', 'Hippocrates']), ('options', [['Ancient Romans', 'Ancient Chinese', 'Anthropologists'], ['Galen', 'Plato', 'Aristotle']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:06.090569
ERROR:root:api_check 0:00:00.354244
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len6
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000578
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Hippocrates, another ancient Greek, is the most famous physician in antiquity.']), ('incorrect', [['Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the moon’s axis.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and how it moves through space.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and other planetary movements.'], ['Hippocrates, another ancient Greek, is the author of a new book on the nature of consciousness.', 'Hippocrates, another ancient Greek, is not mentioned by name in any text of the Bible.', 'Hippocrates, another ancient Greek, is often cited for his great contribution to our understanding of Greek philosophy and philosophy of language.']])]))])
ERROR:root:Request 0:00:04.135234
ERROR:root:api_check 0:00:00.344625
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len6
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.001319
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Hippocrates, another ancient Greek, is the most famous physician in antiquity.']), ('incorrect', [['Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the motion of its satellites in relation to it.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and other celestial phenomena.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the rotation of the planet.'], ['Hippocrates, another ancient Greek, is the first to write an ancient treatise on the subject.', 'Hippocrates, another ancient Greek, is believed to have known him.', 'Hippocrates, another ancient Greek, is considered the most important Greek philosopher, and a leading expert on the ancient world.']])]))])
ERROR:root:Request 0:00:03.901587
ERROR:root:api_check 0:00:00.342541
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len6
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.']), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?']), ('answers', ['Ancient Greeks', 'Hippocrates']), ('options', [['Ancient Romans', 'Ancient Chinese', 'Anthropologists'], ['Galen', 'Plato', 'Aristotle']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:03.240416
ERROR:root:api_check 0:00:00.334822
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len6
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.']), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?']), ('answers', ['Ancient Greeks', 'Hippocrates']), ('options', [['Ancient Romans', 'Ancient Chinese', 'Anthropologists'], ['Galen', 'Plato', 'Aristotle']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:03.892632
ERROR:root:api_check 0:00:00.335125
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len6
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000718
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.289855
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.006296
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others,  _________  developed a sophisticated philosophical and scientific culture.', 'answer': 'the Ancient Greeks', 'options': ['the Ancient Indians', 'the Ancient Romans', 'the Ancient Chinese'], 'context': 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.'}, {'question_statement': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ .", 'answer': 'modern medicine', 'options': ['homeopathy', 'surgery', 'evidence-based medicine'], 'context': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others,  _________  developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'the Ancient Greeks', 'modern medicine']), ('options', [['Ancient Romans', 'Ancient Chinese', 'Anthropologists'], ['Galen', 'Plato', 'Aristotle'], ['the Ancient Indians', 'the Ancient Romans', 'the Ancient Chinese'], ['homeopathy', 'surgery', 'evidence-based medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others,  _________  developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'the Ancient Greeks', 'modern medicine']), ('options', [['Ancient Romans', 'Ancient Chinese', 'Anthropologists'], ['Galen', 'Plato', 'Aristotle'], ['the Ancient Indians', 'the Ancient Romans', 'the Ancient Chinese'], ['homeopathy', 'surgery', 'evidence-based medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('incorrect', [['We owe our basic ideas about geometry and the concept of mathematical proofs to God, who has a deep knowledge of our universe and its laws.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to Albert Einstein, a pioneer of the field of mathematics, and his friend and collaborator.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to the Greeks and to the Roman Empire, but we also owe them to our ancestors, who were the first to make it possible.'], ['The Hippocratic oath, a medical standard for doctors, is named after the founder of the Hippocratic Oath, the oldest religious document of all.', 'The Hippocratic oath, a medical standard for doctors, is named after a Greek physician who was accused of stealing from Hippocrates and that the ancient practice of prescribing a medicine to the sick was a sign of corruption.', 'The Hippocratic oath, a medical standard for doctors, is named after the Roman philosopher, Plato.']])]))])
ERROR:root:Request 0:00:12.459116
ERROR:root:api_check 0:00:00.329794
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len6
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000725
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.243089
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.003614
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others,  _________  developed a sophisticated philosophical and scientific culture.', 'answer': 'the Ancient Greeks', 'options': ['the Ancient Indians', 'the Ancient Romans', 'the Ancient Chinese'], 'context': 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.'}, {'question_statement': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ .", 'answer': 'modern medicine', 'options': ['homeopathy', 'surgery', 'evidence-based medicine'], 'context': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others,  _________  developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'the Ancient Greeks', 'modern medicine']), ('options', [['Ancient Romans', 'Ancient Chinese', 'Anthropologists'], ['Galen', 'Plato', 'Aristotle'], ['the Ancient Indians', 'the Ancient Romans', 'the Ancient Chinese'], ['homeopathy', 'surgery', 'evidence-based medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others,  _________  developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'the Ancient Greeks', 'modern medicine']), ('options', [['Ancient Romans', 'Ancient Chinese', 'Anthropologists'], ['Galen', 'Plato', 'Aristotle'], ['the Ancient Indians', 'the Ancient Romans', 'the Ancient Chinese'], ['homeopathy', 'surgery', 'evidence-based medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('incorrect', [['We owe our basic ideas about geometry and the concept of mathematical proofs to Einstein, who was a brilliant mathematician, and to his contemporaries who were mathematicians.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to God and the people who made them.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to the mathematicians of our day, who were always able to tell how we could solve problems by the means of a very simple and straightforward mathematics.'], ['The Hippocratic oath, a medical standard for doctors, is named after the Greek god of healing.', 'The Hippocratic oath, a medical standard for doctors, is named after the Hippocratic Oath, a religious oath that is taken by physicians in the United States.', 'The Hippocratic oath, a medical standard for doctors, is named after the Hippocratic oath, or the oath of office.']])]))])
ERROR:root:Request 0:00:06.407746
ERROR:root:api_check 0:00:00.345195
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len6
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000767
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.238558
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001168
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others,  _________  developed a sophisticated philosophical and scientific culture.', 'answer': 'the Ancient Greeks', 'options': ['the Ancient Indians', 'the Ancient Romans', 'the Ancient Chinese'], 'context': 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.'}, {'question_statement': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ .", 'answer': 'modern medicine', 'options': ['homeopathy', 'surgery', 'evidence-based medicine'], 'context': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others,  _________  developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'the Ancient Greeks', 'modern medicine']), ('options', [['Ancient Romans', 'Ancient Chinese', 'Anthropologists'], ['Galen', 'Plato', 'Aristotle'], ['the Ancient Indians', 'the Ancient Romans', 'the Ancient Chinese'], ['homeopathy', 'surgery', 'evidence-based medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others,  _________  developed a sophisticated philosophical and scientific culture.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'the Ancient Greeks', 'modern medicine']), ('options', [['Ancient Romans', 'Ancient Chinese', 'Anthropologists'], ['Galen', 'Plato', 'Aristotle'], ['the Ancient Indians', 'the Ancient Romans', 'the Ancient Chinese'], ['homeopathy', 'surgery', 'evidence-based medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('incorrect', [['We owe our basic ideas about geometry and the concept of mathematical proofs to the mathematicians who built them," he said.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to those who helped to formulate it," says D.S.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to the same people who made that decision.'], ['The Hippocratic oath, a medical standard for doctors, is named after a Roman Catholic saint.', 'The Hippocratic oath, a medical standard for doctors, is named after the Roman god of medicine.', 'The Hippocratic oath, a medical standard for doctors, is named after the Greek philosopher Hippocrates, who gave the oath to the gods.']])]))])
ERROR:root:Request 0:00:11.398240
ERROR:root:api_check 0:00:00.362625
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000726
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:00.821757
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001247
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ .", 'answer': 'modern medicine', 'options': ['homeopathy', 'surgery', 'evidence-based medicine'], 'context': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Ancient Romans', 'Ancient Chinese', 'Anthropologists'], ['Galen', 'Plato', 'Aristotle'], ['homeopathy', 'surgery', 'evidence-based medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Ancient Romans', 'Ancient Chinese', 'Anthropologists'], ['Galen', 'Plato', 'Aristotle'], ['homeopathy', 'surgery', 'evidence-based medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('incorrect', [['We owe our basic ideas about geometry and the concept of mathematical proofs to those who have tried to understand and understand the universe, and the human mind."', 'We owe our basic ideas about geometry and the concept of mathematical proofs to Einstein and to the rest of the world.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to those of us who have followed it over the years.'], ['The Hippocratic oath, a medical standard for doctors, is named after the Hippocratic Oath, which is the pledge that "you shall never kill an enemy."', 'The Hippocratic oath, a medical standard for doctors, is named after Jesus Christ.', 'The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, the founder of medicine.']])]))])
ERROR:root:Request 0:00:09.459762
ERROR:root:api_check 0:00:00.356064
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000778
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:00.834394
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001071
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.', 'answer': 'Hippocratic oath', 'options': ['British Medical Association', 'Congress of Vienna', 'Medical Association of America'], 'context': 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.'}, {'question_statement': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ .", 'answer': 'modern medicine', 'options': ['homeopathy', 'surgery', 'evidence-based medicine'], 'context': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'Hippocratic oath', 'modern medicine']), ('options', [['Ancient Romans', 'Ancient Chinese', 'Anthropologists'], ['Galen', 'Plato', 'Aristotle'], ['British Medical Association', 'Congress of Vienna', 'Medical Association of America'], ['homeopathy', 'surgery', 'evidence-based medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'Hippocratic oath', 'modern medicine']), ('options', [['Ancient Romans', 'Ancient Chinese', 'Anthropologists'], ['Galen', 'Plato', 'Aristotle'], ['British Medical Association', 'Congress of Vienna', 'Medical Association of America'], ['homeopathy', 'surgery', 'evidence-based medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.']), ('incorrect', [['We owe our basic ideas about geometry and the concept of mathematical proofs to mathematicians," said Michael Kocherlak, who led the research.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to these men, who understood that the best proof in the world was to prove that there was a real thing and that the whole world was real, without resort to the fancy-like "problems."', 'We owe our basic ideas about geometry and the concept of mathematical proofs to the early students of physics.']])]))])
ERROR:root:Request 0:00:07.302806
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.364730
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000859
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:00.723732
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.004460
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ .", 'answer': 'modern medicine', 'options': ['evidence-based medicine', 'surgery', 'homeopathy'], 'context': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Anthropologists', 'Ancient Chinese', 'Ancient Romans'], ['Plato', 'Aristotle', 'Galen'], ['evidence-based medicine', 'surgery', 'homeopathy']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Anthropologists', 'Ancient Chinese', 'Ancient Romans'], ['Plato', 'Aristotle', 'Galen'], ['evidence-based medicine', 'surgery', 'homeopathy']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('incorrect', [['We owe our basic ideas about geometry and the concept of mathematical proofs to the people who have done it."', 'We owe our basic ideas about geometry and the concept of mathematical proofs to those who came before it."', 'We owe our basic ideas about geometry and the concept of mathematical proofs to those who wrote it.'], ['The Hippocratic oath, a medical standard for doctors, is named after the Hippocratic Oath, which was written by the Roman physician and a member of the Hippocratic Order of the Holy Cross.', 'The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, a physician of the Roman Catholic Church.', 'The Hippocratic oath, a medical standard for doctors, is named after the Roman god of medicine, Hippocrates.']])]))])
ERROR:root:Request 0:00:06.059881
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.422523
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000706
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.394695
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001180
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ .", 'answer': 'modern medicine', 'options': ['surgery', 'homeopathy', 'evidence-based medicine'], 'context': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Ancient Chinese', 'Ancient Romans', 'Anthropologists'], ['Plato', 'Galen', 'Aristotle'], ['surgery', 'homeopathy', 'evidence-based medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Ancient Chinese', 'Ancient Romans', 'Anthropologists'], ['Plato', 'Galen', 'Aristotle'], ['surgery', 'homeopathy', 'evidence-based medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('incorrect', [['We owe our basic ideas about geometry and the concept of mathematical proofs to mathematicians and physicists," he said.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to the early pioneers of the field of geometry," says Robert W. Lasseter, professor of geometry at the University of Pennsylvania.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to the people who created it, who taught it to them, who taught it to us, and who continue to teach it today," he said.'], ['The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, the Greek physician and physician who wrote the Hippocratic oath.', 'The Hippocratic oath, a medical standard for doctors, is named after Dr. Hippocrates, a physician who was an early supporter of the medical revolution in Europe and was credited with leading the revolution in the field of medicine.', 'The Hippocratic oath, a medical standard for doctors, is named after a Roman doctor.']])]))])
ERROR:root:Request 0:00:05.256434
ERROR:root:api_check 0:00:00.355618
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.001174
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:00.778270
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001407
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ .", 'answer': 'modern medicine', 'options': ['surgery', 'homeopathy', 'evidence-based medicine'], 'context': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Ancient Chinese', 'Ancient Romans', 'Anthropologists'], ['Plato', 'Galen', 'Aristotle'], ['surgery', 'homeopathy', 'evidence-based medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Ancient Chinese', 'Ancient Romans', 'Anthropologists'], ['Plato', 'Galen', 'Aristotle'], ['surgery', 'homeopathy', 'evidence-based medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('incorrect', [["We owe our basic ideas about geometry and the concept of mathematical proofs to mathematicians, but it's hard to find a single source of support for them.", 'We owe our basic ideas about geometry and the concept of mathematical proofs to the mathematician Georg Cantor.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to mathematics, and it is important to us to have those as well."'], ['The Hippocratic oath, a medical standard for doctors, is named after the physician who prescribes the medication.', 'The Hippocratic oath, a medical standard for doctors, is named after the Roman goddess of medicine, Hippolyta.', 'The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, a Greek physician who, in 1739, founded the Hippocratic Academy.']])]))])
ERROR:root:Request 0:00:06.208642
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.348522
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000828
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.363091
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.002099
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ .", 'answer': 'modern medicine', 'options': ['evidence-based medicine', 'surgery', 'homeopathy'], 'context': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Anthropologists', 'Ancient Romans', 'Ancient Chinese'], ['Aristotle', 'Plato', 'Galen'], ['evidence-based medicine', 'surgery', 'homeopathy']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Anthropologists', 'Ancient Romans', 'Ancient Chinese'], ['Aristotle', 'Plato', 'Galen'], ['evidence-based medicine', 'surgery', 'homeopathy']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('incorrect', [['We owe our basic ideas about geometry and the concept of mathematical proofs to God, and we owe our belief in mathematics to his divine providence.', "We owe our basic ideas about geometry and the concept of mathematical proofs to the mathematician and mathematician's first and foremost mentor, Albert Einstein.", 'We owe our basic ideas about geometry and the concept of mathematical proofs to the people who helped shape it."'], ['The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, the Greek physician, who was also the first physician to prescribe an effective medicine for all kinds of ailments, including cancer.', 'The Hippocratic oath, a medical standard for doctors, is named after Socrates.', 'The Hippocratic oath, a medical standard for doctors, is named after the Greek god of wisdom, Hippocrates.']])]))])
ERROR:root:Request 0:00:05.732043
ERROR:root:api_check 0:00:00.355044
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.001266
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:00.901203
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001133
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ .", 'answer': 'modern medicine', 'options': ['evidence-based medicine', 'surgery', 'homeopathy'], 'context': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Anthropologists', 'Ancient Romans', 'Ancient Chinese'], ['Aristotle', 'Plato', 'Galen'], ['evidence-based medicine', 'surgery', 'homeopathy']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Anthropologists', 'Ancient Romans', 'Ancient Chinese'], ['Aristotle', 'Plato', 'Galen'], ['evidence-based medicine', 'surgery', 'homeopathy']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('incorrect', [['We owe our basic ideas about geometry and the concept of mathematical proofs to all the people who have been paying attention to our work.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to God.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to the most distinguished and highly respected of our mathematicians.'], ['The Hippocratic oath, a medical standard for doctors, is named after the Hippocratic Oath, the standard used by the Catholic Church to determine who is right, wrong, and righteous.', 'The Hippocratic oath, a medical standard for doctors, is named after King Hippolytus Hippolytus of Egypt.', 'The Hippocratic oath, a medical standard for doctors, is named after a Greek philosopher, Hippocrates, who died in 1654.']])]))])
ERROR:root:Request 0:00:06.507570
ERROR:root:api_check 0:00:00.360031
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.001336
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:00.863277
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001092
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ .", 'answer': 'modern medicine', 'options': ['evidence-based medicine', 'surgery', 'homeopathy'], 'context': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Anthropologists', 'Ancient Romans', 'Ancient Chinese'], ['Aristotle', 'Plato', 'Galen'], ['evidence-based medicine', 'surgery', 'homeopathy']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Anthropologists', 'Ancient Romans', 'Ancient Chinese'], ['Aristotle', 'Plato', 'Galen'], ['evidence-based medicine', 'surgery', 'homeopathy']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('incorrect', [['We owe our basic ideas about geometry and the concept of mathematical proofs to the philosophers of mathematics," he says.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to the mathematicians of this world," said Lachlan.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to the great mathematician Sir Albert Einstein.'], ['The Hippocratic oath, a medical standard for doctors, is named after the Greek goddess Hippocrates.', 'The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, who was a physician and physician-in-residence of the Hippocratic sect.', 'The Hippocratic oath, a medical standard for doctors, is named after Hippocrates.']])]))])
ERROR:root:Request 0:00:07.228303
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.350108
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000841
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.294195
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001128
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ .", 'answer': 'modern medicine', 'options': ['evidence-based medicine', 'homeopathy', 'surgery'], 'context': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Anthropologists', 'Ancient Romans', 'Ancient Chinese'], ['Galen', 'Aristotle', 'Plato'], ['evidence-based medicine', 'homeopathy', 'surgery']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Anthropologists', 'Ancient Romans', 'Ancient Chinese'], ['Galen', 'Aristotle', 'Plato'], ['evidence-based medicine', 'homeopathy', 'surgery']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('incorrect', [['We owe our basic ideas about geometry and the concept of mathematical proofs to the very few people who have worked on it.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to our own students.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to mathematicians, who have been trained by mathematicians to solve problems with an understanding of the fundamental principles of mathematics.'], ['The Hippocratic oath, a medical standard for doctors, is named after the Hippocratic oath, which states that the first doctor to administer a medicine is one who "shall faithfully discharge the office entrusted to him."', 'The Hippocratic oath, a medical standard for doctors, is named after the ancient Roman emperor Augustus.', 'The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, the Greek physician, and his son, Hippocrates.']])]))])
ERROR:root:Request 0:00:05.313401
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.370061
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000721
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.592902
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.006191
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ .", 'answer': 'modern medicine', 'options': ['homeopathy', 'evidence-based medicine', 'surgery'], 'context': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Ancient Chinese', 'Ancient Romans', 'Anthropologists'], ['Galen', 'Plato', 'Aristotle'], ['homeopathy', 'evidence-based medicine', 'surgery']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Ancient Chinese', 'Ancient Romans', 'Anthropologists'], ['Galen', 'Plato', 'Aristotle'], ['homeopathy', 'evidence-based medicine', 'surgery']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('incorrect', [['We owe our basic ideas about geometry and the concept of mathematical proofs to God, and we owe it to Him to be able to explain and explain to those who ask.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to a generation of physicists and mathematicians who have been following the progress of mathematics since the 18th century."', 'We owe our basic ideas about geometry and the concept of mathematical proofs to our children."'], ['The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, the founder of the Greek philosophy.', 'The Hippocratic oath, a medical standard for doctors, is named after the Hippocratic oath, the ancient Latin word for the oath.', 'The Hippocratic oath, a medical standard for doctors, is named after Hippocrates, the philosopher of medicine.']])]))])
ERROR:root:Request 0:00:08.840563
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:08.659052
ERROR:root:payload: "Jonathan Lyndale Kirk was born on December 22, 1991,[a] in Cleveland, Ohio.[9] He moved to Charlotte, North Carolina in 1999, where he spent most of his early years. \\n\\nKirk got his big break after signing to Arnold Taylor, the president of the South Coast Music Group label, a big radio promoter. Taylor saw Kirk perform around North Carolina clubs at the time he [Taylor] was launching his label. Taylor had been responsible for the early rise of Southern rap stars including Yo Gotti and Future.[11] Once they started working together, the team kept building buzz around the South with mixtapes and club shows, while Kirk was finding his sound. Through his deal with South Coast, Kirk signed a short-lived distribution deal with Jay-Z's Roc Nation for his Blank Blank mixtape that would prove to be his breakout in late 2018.[13] Thanks to the guidance of Taylor, and following major label bidding wars, Kirk landed a seven-figure recording deal with Interscope.[11]\\n2019: Baby on Baby and Kirk\\nDaBaby during an interview in 2018"
ERROR:root:orig input: "Jonathan Lyndale Kirk was born on December 22, 1991,[a] in Cleveland, Ohio.[9] He moved to Charlotte, North Carolina in 1999, where he spent most of his early years. \\n\\nKirk got his big break after signing to Arnold Taylor, the president of the South Coast Music Group label, a big radio promoter. Taylor saw Kirk perform around North Carolina clubs at the time he [Taylor] was launching his label. Taylor had been responsible for the early rise of Southern rap stars including Yo Gotti and Future.[11] Once they started working together, the team kept building buzz around the South with mixtapes and club shows, while Kirk was finding his sound. Through his deal with South Coast, Kirk signed a short-lived distribution deal with Jay-Z's Roc Nation for his Blank Blank mixtape that would prove to be his breakout in late 2018.[13] Thanks to the guidance of Taylor, and following major label bidding wars, Kirk landed a seven-figure recording deal with Interscope.[11]\\n2019: Baby on Baby and Kirk\\nDaBaby during an interview in 2018"
ERROR:root:orig selected_specific len[[["Through his deal with South Coast, Kirk signed a short-lived distribution deal with Jay-Z's Roc Nation for his Blank Blank mixtape that would prove to be his breakout in late 2018.[13]",{},5],["Jonathan Lyndale Kirk was born on December 22, 1991,[a] in Cleveland, Ohio.[9] He moved to Charlotte, North Carolina in 1999, where he spent most of his early years.",{},0],["Thanks to the guidance of Taylor, and following major label bidding wars, Kirk landed a seven-figure recording deal with Interscope.[11]\\n2019:",{},6],["\\n\\nKirk got his big break after signing to Arnold Taylor, the president of the South Coast Music Group label, a big radio promoter.",{},1],["Taylor saw Kirk perform around North Carolina clubs at the time he [Taylor] was launching his label.",{},2],["Once they started working together, the team kept building buzz around the South with mixtapes and club shows, while Kirk was finding his sound.",{},4],["Taylor had been responsible for the early rise of Southern rap stars including Yo Gotti and Future.[11]",{},3],["and Kirk\\nDaBaby during an interview in 2018",{},8]],["Jonathan Lyndale Kirk was born on December 22, 1991,[a] in Cleveland, Ohio.[9] He moved to Charlotte, North Carolina in 1999, where he spent most of his early years.","\\n\\nKirk got his big break after signing to Arnold Taylor, the president of the South Coast Music Group label, a big radio promoter.","Taylor saw Kirk perform around North Carolina clubs at the time Jonathan Lyndale Kirk [Taylor] was launching Jonathan Lyndale Kirk's label.","Taylor had been responsible for the early rise of Southern rap stars including Yo Gotti and Future.[11]","Once they started working together, the team kept building buzz around the South with mixtapes and club shows, while Kirk was finding Jonathan Lyndale Kirk's sound.","Through Jonathan Lyndale Kirk's deal with South Coast, Kirk signed a short-lived distribution deal with Jay-Z's Roc Nation for Jonathan Lyndale Kirk's Blank Blank mixtape that would prove to be Jonathan Lyndale Kirk's breakout in late 2018.[13]","Thanks to the guidance of Taylor, and following major label bidding wars, Kirk landed a seven-figure recording deal with Interscope.[11]\\n2019:","Baby on Baby","and Kirk\\nDaBaby during an interview in 2018"]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents5
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ["Once they started working together, the team kept building buzz around the South with mixtapes and club shows, while Kirk was finding Jonathan Lyndale Kirk's sound. Through his deal with South Coast, Kirk signed a short-lived distribution deal with Jay-Z's Roc Nation for his Blank Blank mixtape that would prove to be his breakout in late 2018.[13]", ' Jonathan Lyndale Kirk was born on December 22, 1991,[a] in Cleveland, Ohio.[9] He moved to Charlotte, North Carolina in 1999, where he spent most of his early years.', "Through Jonathan Lyndale Kirk's deal with South Coast, Kirk signed a short-lived distribution deal with Jay-Z's Roc Nation for Jonathan Lyndale Kirk's Blank Blank mixtape that would prove to be Jonathan Lyndale Kirk's breakout in late 2018.[13] Thanks to the guidance of Taylor, and following major label bidding wars, Kirk landed a seven-figure recording deal with Interscope.[11]\\n2019:", 'Jonathan Lyndale Kirk was born on December 22, 1991,[a] in Cleveland, Ohio.[9] He moved to Charlotte, North Carolina in 1999, where he spent most of his early years. \\n\\nKirk got his big break after signing to Arnold Taylor, the president of the South Coast Music Group label, a big radio promoter.', '\\n\\nKirk got his big break after signing to Arnold Taylor, the president of the South Coast Music Group label, a big radio promoter. Taylor saw Kirk perform around North Carolina clubs at the time he [Taylor] was launching his label.']), ('questions', ['What radio station did Kirk sign a distribution deal with?', 'Where did Kirk move to in 1999?', 'What label did Kirk land a seven-figure recording deal with?', 'What label did Kirk sign with Arnold Taylor?', 'Who did Arnold Taylor see perform with?']), ('answers', ['Roc Nation', 'Charlotte, North Carolina', 'Interscope', 'South Coast Music Group', 'Kirk']), ('options', [['Verve Music Group', 'Atlantic Records', 'iHeartMedia'], ['Boston, Massachusetts', 'Vancouver, British Columbia', 'Seattle, Washington'], ['Geffen', 'Capitol', 'A&M'], ['BMI', 'ASCAP', 'SESAC'], ['Tootsie', 'Elton John', 'Madonna']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:api_check 0:00:05.199893
ERROR:root:payload: "Jonathan Lyndale Kirk was born on December 22, 1991,[a] in Cleveland, Ohio.[9] He moved to Charlotte, North Carolina in 1999, where he spent most of his early years. \\n\\nKirk got his big break after signing to Arnold Taylor, the president of the South Coast Music Group label, a big radio promoter. Taylor saw Kirk perform around North Carolina clubs at the time he [Taylor] was launching his label. Taylor had been responsible for the early rise of Southern rap stars including Yo Gotti and Future.[11] Once they started working together, the team kept building buzz around the South with mixtapes and club shows, while Kirk was finding his sound. Through his deal with South Coast, Kirk signed a short-lived distribution deal with Jay-Z's Roc Nation for his Blank Blank mixtape that would prove to be his breakout in late 2018.[13] Thanks to the guidance of Taylor, and following major label bidding wars, Kirk landed a seven-figure recording deal with Interscope.[11]\\n2019: Baby on Baby and Kirk\\nDaBaby during an interview in 2018"
ERROR:root:orig input: "Jonathan Lyndale Kirk was born on December 22, 1991,[a] in Cleveland, Ohio.[9] He moved to Charlotte, North Carolina in 1999, where he spent most of his early years. \\n\\nKirk got his big break after signing to Arnold Taylor, the president of the South Coast Music Group label, a big radio promoter. Taylor saw Kirk perform around North Carolina clubs at the time he [Taylor] was launching his label. Taylor had been responsible for the early rise of Southern rap stars including Yo Gotti and Future.[11] Once they started working together, the team kept building buzz around the South with mixtapes and club shows, while Kirk was finding his sound. Through his deal with South Coast, Kirk signed a short-lived distribution deal with Jay-Z's Roc Nation for his Blank Blank mixtape that would prove to be his breakout in late 2018.[13] Thanks to the guidance of Taylor, and following major label bidding wars, Kirk landed a seven-figure recording deal with Interscope.[11]\\n2019: Baby on Baby and Kirk\\nDaBaby during an interview in 2018"
ERROR:root:orig selected_specific len[[["Through his deal with South Coast, Kirk signed a short-lived distribution deal with Jay-Z's Roc Nation for his Blank Blank mixtape that would prove to be his breakout in late 2018.[13]",{},5],["Jonathan Lyndale Kirk was born on December 22, 1991,[a] in Cleveland, Ohio.[9] He moved to Charlotte, North Carolina in 1999, where he spent most of his early years.",{},0],["Thanks to the guidance of Taylor, and following major label bidding wars, Kirk landed a seven-figure recording deal with Interscope.[11]\\n2019:",{},6],["\\n\\nKirk got his big break after signing to Arnold Taylor, the president of the South Coast Music Group label, a big radio promoter.",{},1],["Taylor saw Kirk perform around North Carolina clubs at the time he [Taylor] was launching his label.",{},2],["Once they started working together, the team kept building buzz around the South with mixtapes and club shows, while Kirk was finding his sound.",{},4],["Taylor had been responsible for the early rise of Southern rap stars including Yo Gotti and Future.[11]",{},3],["and Kirk\\nDaBaby during an interview in 2018",{},8]],["Jonathan Lyndale Kirk was born on December 22, 1991,[a] in Cleveland, Ohio.[9] He moved to Charlotte, North Carolina in 1999, where he spent most of his early years.","\\n\\nKirk got his big break after signing to Arnold Taylor, the president of the South Coast Music Group label, a big radio promoter.","Taylor saw Kirk perform around North Carolina clubs at the time Jonathan Lyndale Kirk [Taylor] was launching Jonathan Lyndale Kirk's label.","Taylor had been responsible for the early rise of Southern rap stars including Yo Gotti and Future.[11]","Once they started working together, the team kept building buzz around the South with mixtapes and club shows, while Kirk was finding Jonathan Lyndale Kirk's sound.","Through Jonathan Lyndale Kirk's deal with South Coast, Kirk signed a short-lived distribution deal with Jay-Z's Roc Nation for Jonathan Lyndale Kirk's Blank Blank mixtape that would prove to be Jonathan Lyndale Kirk's breakout in late 2018.[13]","Thanks to the guidance of Taylor, and following major label bidding wars, Kirk landed a seven-figure recording deal with Interscope.[11]\\n2019:","Baby on Baby","and Kirk\\nDaBaby during an interview in 2018"]]
ERROR:root:orig selected_specific len8
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:03.904449
ERROR:root:Request 0:00:10.315174
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.331503
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len6
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000734
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.528626
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.000589
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ .", 'answer': 'modern medicine', 'options': ['homeopathy', 'surgery', 'evidence-based medicine'], 'context': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Ancient Romans', 'Ancient Chinese', 'Anthropologists'], ['Plato', 'Galen', 'Aristotle'], ['homeopathy', 'surgery', 'evidence-based medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Ancient Romans', 'Ancient Chinese', 'Anthropologists'], ['Plato', 'Galen', 'Aristotle'], ['homeopathy', 'surgery', 'evidence-based medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('incorrect', [['We owe our basic ideas about geometry and the concept of mathematical proofs to mathematics professor Daniel S. G. Kipson and his team.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to those who have been doing this for many years.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to the people who developed the scientific method and whose ideas led to our creation of this system.'], ['The Hippocratic oath, a medical standard for doctors, is named after a Latin word that means "I will do all things for your benefit."', 'The Hippocratic oath, a medical standard for doctors, is named after Jesus Christ.', 'The Hippocratic oath, a medical standard for doctors, is named after the Greek philosopher Hippocrates, who was known as Hippocrates of Hippo.']])]))])
ERROR:root:Request 0:00:05.256060
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.355432
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len6
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.006158
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.656842
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001738
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ .", 'answer': 'modern medicine', 'options': ['evidence-based medicine', 'homeopathy', 'surgery'], 'context': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Anthropologists', 'Ancient Romans', 'Ancient Chinese'], ['Galen', 'Plato', 'Aristotle'], ['evidence-based medicine', 'homeopathy', 'surgery']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'modern medicine']), ('options', [['Anthropologists', 'Ancient Romans', 'Ancient Chinese'], ['Galen', 'Plato', 'Aristotle'], ['evidence-based medicine', 'homeopathy', 'surgery']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.921783
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:08.536444
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len6
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents3
ERROR:root:total before 0:00:01.717849
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.007002
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.', 'answer': 'Hippocratic oath', 'options': ['Congress of Vienna', 'Medical Association of America', 'British Medical Association'], 'context': 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.'}, {'question_statement': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ .", 'answer': 'modern medicine', 'options': ['surgery', 'evidence-based medicine', 'homeopathy'], 'context': "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."}]}}]
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'Who are some of the Greek mathematicians that we owe our ideas to?', 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of  _________ ."]), ('answers', ['Ancient Greeks', 'Hippocrates', 'Pythagoras, Euclid, and Archimedes', 'Hippocratic oath', 'modern medicine']), ('options', [['Ancient Chinese', 'Anthropologists', 'Ancient Romans'], ['Aristotle', 'Plato', 'Galen'], ['Plato and Archimedes', 'Plato and Aristotle', 'Pythagoras and Euclid'], ['Congress of Vienna', 'Medical Association of America', 'British Medical Association'], ['surgery', 'evidence-based medicine', 'homeopathy']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:08.025864
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:root:api_check 0:00:00.911952
ERROR:root:payload: 'Rainfall:  The word “rainforest” implies that these are the some of the world’s wettest ecosystems. Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.  For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!) of rain in a typical year. Despite relatively consistent rain in these ecosystems, there are distinct dry seasons in some rainforests. Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe. Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.'
ERROR:root:orig input: 'Rainfall:  The word “rainforest” implies that these are the some of the world’s wettest ecosystems. Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.  For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!) of rain in a typical year. Despite relatively consistent rain in these ecosystems, there are distinct dry seasons in some rainforests. Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe. Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.'
ERROR:root:orig selected_specific len[[["For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!)",{},3],["Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.",{},7],["Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.",{},2],["Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe.",{},6]],["Rainfall:","The word “rainforest” implies that these are the some of the world’s wettest ecosystems.","Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.","For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!)","of rain in a typical year.","Despite relatively consistent rain in these ecosystems, there are distinct dry seasons in some rainforests.","Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe.","Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season."]]
ERROR:root:orig selected_specific len4
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000667
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.']), ('incorrect', [['Tropical rainforests also have high humidity; about 88% during the wet season and 60% during the dry season.', 'Tropical rainforests also have high humidity; about 88% during the wet season and 90% during the dry season.', 'Tropical rainforests also have high humidity; about 88% during the wet season and 80% during the dry season.']])]))])
ERROR:root:Request 0:00:03.714150
ERROR:root:api_check 0:00:00.361250
ERROR:root:payload: 'Rainfall:  The word “rainforest” implies that these are the some of the world’s wettest ecosystems. Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.  For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!) of rain in a typical year. Despite relatively consistent rain in these ecosystems, there are distinct dry seasons in some rainforests. Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe. Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.'
ERROR:root:orig input: 'Rainfall:  The word “rainforest” implies that these are the some of the world’s wettest ecosystems. Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.  For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!) of rain in a typical year. Despite relatively consistent rain in these ecosystems, there are distinct dry seasons in some rainforests. Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe. Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.'
ERROR:root:orig selected_specific len[[["For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!)",{},3],["Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.",{},7],["Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.",{},2],["Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe.",{},6]],["Rainfall:","The word “rainforest” implies that these are the some of the world’s wettest ecosystems.","Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.","For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!)","of rain in a typical year.","Despite relatively consistent rain in these ecosystems, there are distinct dry seasons in some rainforests.","Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe.","Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season."]]
ERROR:root:orig selected_specific len4
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000870
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:02.985745
ERROR:root:api_check 0:00:00.333585
ERROR:root:payload: 'Rainfall:  The word “rainforest” implies that these are the some of the world’s wettest ecosystems. Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.  For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!) of rain in a typical year. Despite relatively consistent rain in these ecosystems, there are distinct dry seasons in some rainforests. Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe. Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.'
ERROR:root:orig input: 'Rainfall:  The word “rainforest” implies that these are the some of the world’s wettest ecosystems. Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.  For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!) of rain in a typical year. Despite relatively consistent rain in these ecosystems, there are distinct dry seasons in some rainforests. Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe. Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.'
ERROR:root:orig selected_specific len[[["For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!)",{},3],["Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.",{},7],["Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.",{},2],["Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe.",{},6]],["Rainfall:","The word “rainforest” implies that these are the some of the world’s wettest ecosystems.","Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.","For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!)","of rain in a typical year.","Despite relatively consistent rain in these ecosystems, there are distinct dry seasons in some rainforests.","Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe.","Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season."]]
ERROR:root:orig selected_specific len4
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests. For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!)', 'Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe. Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.']), ('questions', ["How much rain does South America's rainforests receive?", 'What is the humidity of a tropical rainforest during dry season?']), ('answers', ['between 200 and 300 centimeters', '77%']), ('options', [['between 10 and 20 centimeters', 'between 50 and 100 centimeters', 'between 5 and 10 centimeters'], ['65%', '55%', '75%']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.964823
ERROR:root:api_check 0:00:00.360639
ERROR:root:payload: 'Rainfall:  The word “rainforest” implies that these are the some of the world’s wettest ecosystems. Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.  For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!) of rain in a typical year. Despite relatively consistent rain in these ecosystems, there are distinct dry seasons in some rainforests. Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe. Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.'
ERROR:root:orig input: 'Rainfall:  The word “rainforest” implies that these are the some of the world’s wettest ecosystems. Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.  For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!) of rain in a typical year. Despite relatively consistent rain in these ecosystems, there are distinct dry seasons in some rainforests. Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe. Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.'
ERROR:root:orig selected_specific len[[["For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!)",{},3],["Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.",{},7],["Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.",{},2],["Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe.",{},6]],["Rainfall:","The word “rainforest” implies that these are the some of the world’s wettest ecosystems.","Rainforests generally receive very high rainfall each year, although the exact amount varies among different years and different rainforests.","For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!)","of rain in a typical year.","Despite relatively consistent rain in these ecosystems, there are distinct dry seasons in some rainforests.","Wet and dry seasons of tropical rainforests vary in their timing, duration and severity around the globe.","Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season."]]
ERROR:root:orig selected_specific len4
ERROR:root:total before 0:00:00.814420
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001615
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'For example, South America’s tropical rainforests receive  _________  (80 and 120 inches, or 6.5 to 10 feet!)', 'answer': 'between 200 and 300 centimeters', 'options': ['between 50 and 100 centimeters', 'between 10 and 20 centimeters', 'between 20 and 30 centimeters'], 'context': 'For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!)'}, {'question_statement': 'Tropical rainforests also have high humidity; about 88% during the wet season and approximately  _________  in the dry season.', 'answer': '77%', 'options': ['65%', '75%', '55%'], 'context': 'Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.'}]}}]
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['For example, South America’s tropical rainforests receive between 200 and 300 centimeters (80 and 120 inches, or 6.5 to 10 feet!)', 'Tropical rainforests also have high humidity; about 88% during the wet season and approximately 77% in the dry season.']), ('questions', ['For example, South America’s tropical rainforests receive  _________  (80 and 120 inches, or 6.5 to 10 feet!)', 'Tropical rainforests also have high humidity; about 88% during the wet season and approximately  _________  in the dry season.']), ('answers', ['between 200 and 300 centimeters', '77%']), ('options', [['between 50 and 100 centimeters', 'between 10 and 20 centimeters', 'between 20 and 30 centimeters'], ['65%', '75%', '55%']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:03.923404
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.339070
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents8
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity. Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama.", 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.", ' Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.', 'Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.']), ('questions', ['Who developed some of the first astronomical models?', "Who turned Socrates' writing style into written form?", 'Who is the most famous physician in antiquity?', "Who was Plato's student?", 'Who are some of the Greek mathematicians that we owe our ideas to?', 'What is the name of the medical standard for doctors?', 'Who developed a sophisticated scientific culture?', 'Hippocrates is credited with being the founder of what?']), ('answers', ['Ancient Greeks', 'Plato', 'Hippocrates', 'Aristotle', 'Pythagoras, Euclid, and Archimedes', 'Hippocratic oath', 'the Ancient Greeks', 'modern medicine']), ('options', [['Ancient Romans', 'Anthropologists', 'Ancient Chinese'], ['Plutarch', 'Xenophon', 'Aristophanes'], ['Plato', 'Aristotle', 'Galen'], ['Socrates', 'Pythagoras', 'Plato'], ['Plato and Archimedes', 'Pythagoras and Euclid', 'Plato and Aristotle'], ["Physician's standard of care", 'Medical ethics', 'Declaration of Helsinki'], ['the Ancient Chinese', 'the Ancient Indians', 'the Ancient Romans'], ['surgery', 'anatomy', 'psychology']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:12.510035
ERROR:root:api_check 0:00:00.376429
ERROR:root:payload: 'Cricket is a bat-and-ball game played between two teams of eleven players each on a field at the centre of which is a 22-yard (20-metre) pitch with a wicket at each end, each comprising two bails balanced on three stumps. The game proceeds when a player on the fielding team, called the bowler, "bowls" (propels) the ball from one end of the pitch towards the wicket at the other end, with an "over" being completed once they have legally done so six times. The batting side has one player at each end of the pitch, with the player at the opposite end of the pitch from the bowler aiming to strike the ball with a bat. The batting side scores runs either when the ball reaches the boundary of the field, or when the two batters swap ends of the pitch, which results in one run. The fielding side\'s aim is to prevent run-scoring and dismiss each batter (so they are "out", and are said to have "lost their wicket"). Means of dismissal include being bowled, when the bowled ball hits the stumps and dislodges the bails, and by the fielding side either catching a hit ball before it touches the ground, or hitting a wicket with the ball before a batter can cross the crease line in front of the wicket to complete a run. When ten batters have been dismissed, the innings ends and the teams swap roles. The game is adjudicated by two umpires, aided by a third umpire and match referee in international matches.'
ERROR:root:orig input: 'Cricket is a bat-and-ball game played between two teams of eleven players each on a field at the centre of which is a 22-yard (20-metre) pitch with a wicket at each end, each comprising two bails balanced on three stumps. The game proceeds when a player on the fielding team, called the bowler, "bowls" (propels) the ball from one end of the pitch towards the wicket at the other end, with an "over" being completed once they have legally done so six times. The batting side has one player at each end of the pitch, with the player at the opposite end of the pitch from the bowler aiming to strike the ball with a bat. The batting side scores runs either when the ball reaches the boundary of the field, or when the two batters swap ends of the pitch, which results in one run. The fielding side\'s aim is to prevent run-scoring and dismiss each batter (so they are "out", and are said to have "lost their wicket"). Means of dismissal include being bowled, when the bowled ball hits the stumps and dislodges the bails, and by the fielding side either catching a hit ball before it touches the ground, or hitting a wicket with the ball before a batter can cross the crease line in front of the wicket to complete a run. When ten batters have been dismissed, the innings ends and the teams swap roles. The game is adjudicated by two umpires, aided by a third umpire and match referee in international matches.'
ERROR:root:orig selected_specific len[[["Cricket is a bat-and-ball game played between two teams of eleven players each on a field at the centre of which is a 22-yard (20-metre) pitch with a wicket at each end, each comprising two bails balanced on three stumps.",{},0],["Means of dismissal include being bowled, when the bowled ball hits the stumps and dislodges the bails, and by the fielding side either catching a hit ball before it touches the ground, or hitting a wicket with the ball before a batter can cross the crease line in front of the wicket to complete a run.",{},6],["The batting side has one player at each end of the pitch, with the player at the opposite end of the pitch from the bowler aiming to strike the ball with a bat.",{},3],["The batting side scores runs either when the ball reaches the boundary of the field, or when the two batters swap ends of the pitch, which results in one run.",{},4],["(propels) the ball from one end of the pitch towards the wicket at the other end, with an \"over\" being completed once they have legally done so six times.",{},2],["The fielding side's aim is to prevent run-scoring and dismiss each batter (so they are \"out\", and are said to have \"lost their wicket\").",{},5],["The game proceeds when a player on the fielding team, called the bowler, \"bowls\"",{},1]],["Cricket is a bat-and-ball game played between two teams of eleven players each on a field at the centre of which is a 22-yard (20-metre) pitch with a wicket at each end, each comprising two bails balanced on three stumps.","The game proceeds when a player on the fielding team, called the bowler, \"bowls\"","(propels) the ball from one end of the pitch towards the wicket at the other end, with an \"over\" being completed once they have legally done so six times.","The batting side has one player at each end of the pitch, with the player at the opposite end of the pitch from the bowler aiming to strike the ball with a bat.","The batting side scores runs either when the ball reaches the boundary of the field, or when the two batters swap ends of the pitch, which results in one run.","The fielding side's aim is to prevent run-scoring and dismiss each batter (so they are \"out\", and are said to have \"lost their wicket\").","Means of dismissal include being bowled, when the bowled ball hits the stumps and dislodges the bails, and by the fielding side either catching a hit ball before it touches the ground, or hitting a wicket with the ball before a batter can cross the crease line in front of the wicket to complete a run.","When ten batters have been dismissed, the innings ends and the teams swap roles.","The game is adjudicated by two umpires, aided by a third umpire and match referee in international matches."]]
ERROR:root:orig selected_specific len7
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents7
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', [' Cricket is a bat-and-ball game played between two teams of eleven players each on a field at the centre of which is a 22-yard (20-metre) pitch with a wicket at each end, each comprising two bails balanced on three stumps.', 'The fielding side\'s aim is to prevent run-scoring and dismiss each batter (so they are "out", and are said to have "lost their wicket"). Means of dismissal include being bowled, when the bowled ball hits the stumps and dislodges the bails, and by the fielding side either catching a hit ball before it touches the ground, or hitting a wicket with the ball before a batter can cross the crease line in front of the wicket to complete a run.', '(propels) the ball from one end of the pitch towards the wicket at the other end, with an "over" being completed once they have legally done so six times. The batting side has one player at each end of the pitch, with the player at the opposite end of the pitch from the bowler aiming to strike the ball with a bat.', 'The batting side has one player at each end of the pitch, with the player at the opposite end of the pitch from the bowler aiming to strike the ball with a bat. The batting side scores runs either when the ball reaches the boundary of the field, or when the two batters swap ends of the pitch, which results in one run.', 'The game proceeds when a player on the fielding team, called the bowler, "bowls" (propels) the ball from one end of the pitch towards the wicket at the other end, with an "over" being completed once they have legally done so six times.', 'The batting side scores runs either when the ball reaches the boundary of the field, or when the two batters swap ends of the pitch, which results in one run. The fielding side\'s aim is to prevent run-scoring and dismiss each batter (so they are "out", and are said to have "lost their wicket").']), ('questions', ['What is the length of the field in which the players play cricket on?', "What is a fielding side's second way of dismissing a batter?", 'How many players are on each side of a pitch?', 'When does the batting side score runs?', 'How many times must a bowler pass the over?', "What is the fielding side's aim?"]), ('answers', ['22-yard', 'catching a hit ball before it touches the ground', 'one player', 'when the ball reaches the boundary of the field', 'six', 'to prevent run-scoring and dismiss each batter']), ('options', [['22-yard field', '10-yard', '100-yard field'], ['throwing the ball into the outfield to be caught', 'tagging the runner out in the outfield', 'throwing the ball into the infield to be caught'], ['three players', 'two players', 'four players'], ['when the ball is hit into the outfield', 'when the ball lands in their half of the field', 'when the ball hits the wicket'], ['three', 'five', 'four'], ['to score as many runs as possible', 'to get the baserunners out', 'to get as many batters as possible on base']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:06.451987
ERROR:root:api_check 0:00:00.341768
ERROR:root:payload: 'Biologists are frequently interested in studying and understanding the tolerance ranges of different species for different environmental factors. If you draw a graph of how many individuals in a population live under which part of the range of any given factor, you almost always get a bell-shaped curve. Take a look at the two tolerance range curves shown below. The horizontal axis could be any of the abiotic factors (environmental conditions), but for now let’s say it is for oxygen levels in freshwater lakes. If you are studying a particular species of fish, let’s say the blackstripe topminnow (Fundulus notatus), you could go out and measure the oxygen level of every lake where you find the topminnow and also count how many topminnows are in each lake. When you make a graph of your data, it might look like Graph 1. That graph is telling you that the majority of the topminnows live in the middle part of the oxygen range; that’s where the curve is highest. As you move from the middle part to lower oxygen levels (to the left) or to higher oxygen levels (to the right), the curve is not as high – there are fewer individuals that live in lakes that have the lower or higher amounts of oxygen. And if the oxygen level is extremely low or high, it is beyond the tolerance range of the species and no topminnows live in those lakes.'
ERROR:root:orig input: 'Biologists are frequently interested in studying and understanding the tolerance ranges of different species for different environmental factors. If you draw a graph of how many individuals in a population live under which part of the range of any given factor, you almost always get a bell-shaped curve. Take a look at the two tolerance range curves shown below. The horizontal axis could be any of the abiotic factors (environmental conditions), but for now let’s say it is for oxygen levels in freshwater lakes. If you are studying a particular species of fish, let’s say the blackstripe topminnow (Fundulus notatus), you could go out and measure the oxygen level of every lake where you find the topminnow and also count how many topminnows are in each lake. When you make a graph of your data, it might look like Graph 1. That graph is telling you that the majority of the topminnows live in the middle part of the oxygen range; that’s where the curve is highest. As you move from the middle part to lower oxygen levels (to the left) or to higher oxygen levels (to the right), the curve is not as high – there are fewer individuals that live in lakes that have the lower or higher amounts of oxygen. And if the oxygen level is extremely low or high, it is beyond the tolerance range of the species and no topminnows live in those lakes.'
ERROR:root:orig selected_specific len[[["If you are studying a particular species of fish, let’s say the blackstripe topminnow (Fundulus notatus), you could go out and measure the oxygen level of every lake where you find the topminnow and also count how many topminnows are in each lake.",{},4],["As you move from the middle part to lower oxygen levels (to the left) or to higher oxygen levels (to the right), the curve is not as high – there are fewer individuals that live in lakes that have the lower or higher amounts of oxygen.",{},7],["The horizontal axis could be any of the abiotic factors (environmental conditions), but for now let’s say it is for oxygen levels in freshwater lakes.",{},3],["And if the oxygen level is extremely low or high, it is beyond the tolerance range of the species and no topminnows live in those lakes.",{},8],["That graph is telling you that the majority of the topminnows live in the middle part of the oxygen range; that’s where the curve is highest.",{},6],["If you draw a graph of how many individuals in a population live under which part of the range of any given factor, you almost always get a bell-shaped curve.",{},1]],["Biologists are frequently interested in studying and understanding the tolerance ranges of different species for different environmental factors.","If you draw a graph of how many individuals in a population live under which part of the range of any given factor, you almost always get a bell-shaped curve.","Take a look at the two tolerance range curves shown below.","The horizontal axis could be any of the abiotic factors (environmental conditions), but for now let’s say it is for oxygen levels in freshwater lakes.","If you are studying a particular species of fish, let’s say the blackstripe topminnow (Fundulus notatus), you could go out and measure the oxygen level of every lake where you find the topminnow and also count how many topminnows are in each lake.","When you make a graph of your data, it might look like Graph 1.","Graph 1 is telling you that the majority of the topminnows live in the middle part of the oxygen range; that’s where the curve is highest.","As you move from the middle part to lower oxygen levels (to the left) or to higher oxygen levels (to the right), the curve is not as high – there are fewer individuals that live in lakes that have the lower or higher amounts of oxygen.","And if the oxygen level is extremely low or high, it is beyond the tolerance range of the species and no topminnows live in those lakes."]]
ERROR:root:orig selected_specific len6
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents6
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The horizontal axis could be any of the abiotic factors (environmental conditions), but for now let’s say it is for oxygen levels in freshwater lakes. If you are studying a particular species of fish, let’s say the blackstripe topminnow (Fundulus notatus), you could go out and measure the oxygen level of every lake where you find the topminnow and also count how many topminnows are in each lake.', 'Graph 1 is telling you that the majority of the topminnows live in the middle part of the oxygen range; that’s where the curve is highest. As you move from the middle part to lower oxygen levels (to the left) or to higher oxygen levels (to the right), the curve is not as high – there are fewer individuals that live in lakes that have the lower or higher amounts of oxygen.', 'Take a look at the two tolerance range curves shown below. The horizontal axis could be any of the abiotic factors (environmental conditions), but for now let’s say it is for oxygen levels in freshwater lakes.', 'As you move from the middle part to lower oxygen levels (to the left) or to higher oxygen levels (to the right), the curve is not as high – there are fewer individuals that live in lakes that have the lower or higher amounts of oxygen. And if the oxygen level is extremely low or high, it is beyond the tolerance range of the species and no topminnows live in those lakes.', 'When you make a graph of your data, it might look like Graph 1. That graph is telling you that the majority of the topminnows live in the middle part of the oxygen range; that’s where the curve is highest.', 'Biologists are frequently interested in studying and understanding the tolerance ranges of different species for different environmental factors. If you draw a graph of how many individuals in a population live under which part of the range of any given factor, you almost always get a bell-shaped curve.']), ('questions', ['What is the name of the species of fish you want to study?', 'What is the middle part of the oxygen range?', 'What are environmental conditions?', 'What happens if the oxygen level is extremely low or high?', 'Where does the curve say most topminnows live?', 'What is the result of a graph showing how many people live under a given range of environmental factors?']), ('answers', ['blackstripe topminnow', 'lower oxygen levels', 'abiotic factors', 'beyond the tolerance range of the species', 'middle part of the oxygen range', 'bell-shaped curve']), ('options', [['blackstripe suckermouth minnow', 'blackstripe cisco'], ['middle oxygen levels', 'high oxygen levels', 'higher oxygen levels'], ['biotic factors', 'social factors', 'physical factors'], ['the organism starves to death', 'the organism adapts to the conditions', 'the organism dies'], ['bottom part of the oxygen range', 'top part of the water range', 'middle part of the water range'], ['a straight line', 'straight line segment', 'polynomial equation']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:10.243868
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.351777
ERROR:root:payload: 'What determines a species\' range? Historical chance and geographical barriers can play important roles. For instance, maybe polar bears could survive at the South pole as well as the North pole. But they were never introduced to the South pole, and have had no way to disperse, or spread, across the oceans in between.\nOnce a species has been introduced to an area, it can only survive in that area if the conditions are right. Some of the conditions that must be "right" are biotic, meaning that they\'re directly related to living organisms. For instance, a species may not be able to get a foothold in a given area because a competing species, predator, or pathogen is already there, or because no food supply is available.\nMany factors that determine whether a species can live an an area are abiotic, or non-living. Examples of important abiotic factors include temperature, sunlight, and moisture level. These factors sometimes determine whether a species can live in a place in a very direct way. For instance, a plant species will only take root and spread in a place where it\'s getting enough sunlight and water.\nHowever, abiotic factors can also affect where species are found in less direct ways. For instance, climate and soil quality directly affect the type and number of plants that can grow in a particular area. Since energy enters ecosystems via plants and other primary producers, climate and soil quality indirectly determine what other trophic levels, or "food chain links," the ecosystem can support.'
ERROR:root:orig input: 'What determines a species\' range? Historical chance and geographical barriers can play important roles. For instance, maybe polar bears could survive at the South pole as well as the North pole. But they were never introduced to the South pole, and have had no way to disperse, or spread, across the oceans in between.\r\nOnce a species has been introduced to an area, it can only survive in that area if the conditions are right. Some of the conditions that must be "right" are biotic, meaning that they\'re directly related to living organisms. For instance, a species may not be able to get a foothold in a given area because a competing species, predator, or pathogen is already there, or because no food supply is available.\r\nMany factors that determine whether a species can live an an area are abiotic, or non-living. Examples of important abiotic factors include temperature, sunlight, and moisture level. These factors sometimes determine whether a species can live in a place in a very direct way. For instance, a plant species will only take root and spread in a place where it\'s getting enough sunlight and water.\r\nHowever, abiotic factors can also affect where species are found in less direct ways. For instance, climate and soil quality directly affect the type and number of plants that can grow in a particular area. Since energy enters ecosystems via plants and other primary producers, climate and soil quality indirectly determine what other trophic levels, or "food chain links," the ecosystem can support.'
ERROR:root:orig selected_specific len[[["Since energy enters ecosystems via plants and other primary producers, climate and soil quality indirectly determine what other trophic levels, or \"food chain links,\" the ecosystem can support.",{},13],["For instance, a species may not be able to get a foothold in a given area because a competing species, predator, or pathogen is already there, or because no food supply is available.",{},6],["For instance, a plant species will only take root and spread in a place where it's getting enough sunlight and water.",{},10],["Once a species has been introduced to an area, it can only survive in that area if the conditions are right.",{},4]],["What determines a species' range?","Historical chance and geographical barriers can play important roles.","For instance, maybe polar bears could survive at the South pole as well as the North pole.","But they were never introduced to the South pole, and have had no way to disperse, or spread, across the oceans in between.","Once a species has been introduced to an area, it can only survive in that area if the conditions are right.","Some of the conditions that must be \"right\" are biotic, meaning that they're directly related to living organisms.","For instance, a species may not be able to get a foothold in a given area because a competing species, predator, or pathogen is already there, or because no food supply is available.","Many factors that determine whether a species can live an an area are abiotic, or non-living.","Examples of important abiotic factors include temperature, sunlight, and moisture level.","Many factors that determine whether a species can live an an area sometimes determine whether a species can live in a place in a very direct way.","For instance, a plant species will only take root and spread in a place where it's getting enough sunlight and water.","However, abiotic factors can also affect where species are found in less direct ways.","For instance, climate and soil quality directly affect the type and number of plants that can grow in a particular area.","Since energy enters ecosystems via plants and other primary producers, climate and soil quality indirectly determine what other trophic levels, or \"food chain links,\" the ecosystem can support."]]
ERROR:root:orig selected_specific len4
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents4
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['For instance, climate and soil quality directly affect the type and number of plants that can grow in a particular area. Since energy enters ecosystems via plants and other primary producers, climate and soil quality indirectly determine what other trophic levels, or "food chain links," the ecosystem can support.', 'Some of the conditions that must be "right" are biotic, meaning that they\'re directly related to living organisms. For instance, a species may not be able to get a foothold in a given area because a competing species, predator, or pathogen is already there, or because no food supply is available.', "Many factors that determine whether a species can live an an area sometimes determine whether a species can live in a place in a very direct way. For instance, a plant species will only take root and spread in a place where it's getting enough sunlight and water.", 'But they were never introduced to the South pole, and have had no way to disperse, or spread, across the oceans in between. Once a species has been introduced to an area, it can only survive in that area if the conditions are right.']), ('questions', ['What enters an ecosystem via plants and other primary producers?', 'What is one reason a species may not be able to get a foothold in a given area?', 'What is the main difference between a plant and a plant living in an area?', 'When can a species survive in an area?']), ('answers', ['energy', 'food supply is available', 'only take root and spread', 'if the conditions are right']), ('options', [['microbes', 'organic matter', 'detritus'], ['there is not enough water', 'the climate is too harsh', 'too much competition'], ['only spread but not take root', 'both spread and take root', 'neither spread nor take root'], ['if the area is not too large', 'if the species wants to', 'if the species can reproduce']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.129828
ERROR:root:api_check 0:00:06.938588
ERROR:root:payload: 'What determines a species\' range? Historical chance and geographical barriers can play important roles. For instance, maybe polar bears could survive at the South pole as well as the North pole. But they were never introduced to the South pole, and have had no way to disperse, or spread, across the oceans in between.\nOnce a species has been introduced to an area, it can only survive in that area if the conditions are right. Some of the conditions that must be "right" are biotic, meaning that they\'re directly related to living organisms. For instance, a species may not be able to get a foothold in a given area because a competing species, predator, or pathogen is already there, or because no food supply is available.\nMany factors that determine whether a species can live an an area are abiotic, or non-living. Examples of important abiotic factors include temperature, sunlight, and moisture level. These factors sometimes determine whether a species can live in a place in a very direct way. For instance, a plant species will only take root and spread in a place where it\'s getting enough sunlight and water.\nHowever, abiotic factors can also affect where species are found in less direct ways. For instance, climate and soil quality directly affect the type and number of plants that can grow in a particular area. Since energy enters ecosystems via plants and other primary producers, climate and soil quality indirectly determine what other trophic levels, or "food chain links," the ecosystem can support.'
ERROR:root:orig input: 'What determines a species\' range? Historical chance and geographical barriers can play important roles. For instance, maybe polar bears could survive at the South pole as well as the North pole. But they were never introduced to the South pole, and have had no way to disperse, or spread, across the oceans in between.\r\nOnce a species has been introduced to an area, it can only survive in that area if the conditions are right. Some of the conditions that must be "right" are biotic, meaning that they\'re directly related to living organisms. For instance, a species may not be able to get a foothold in a given area because a competing species, predator, or pathogen is already there, or because no food supply is available.\r\nMany factors that determine whether a species can live an an area are abiotic, or non-living. Examples of important abiotic factors include temperature, sunlight, and moisture level. These factors sometimes determine whether a species can live in a place in a very direct way. For instance, a plant species will only take root and spread in a place where it\'s getting enough sunlight and water.\r\nHowever, abiotic factors can also affect where species are found in less direct ways. For instance, climate and soil quality directly affect the type and number of plants that can grow in a particular area. Since energy enters ecosystems via plants and other primary producers, climate and soil quality indirectly determine what other trophic levels, or "food chain links," the ecosystem can support.'
ERROR:root:orig selected_specific len[[["Since energy enters ecosystems via plants and other primary producers, climate and soil quality indirectly determine what other trophic levels, or \"food chain links,\" the ecosystem can support.",{},13],["For instance, a species may not be able to get a foothold in a given area because a competing species, predator, or pathogen is already there, or because no food supply is available.",{},6],["For instance, a plant species will only take root and spread in a place where it's getting enough sunlight and water.",{},10],["Once a species has been introduced to an area, it can only survive in that area if the conditions are right.",{},4]],["What determines a species' range?","Historical chance and geographical barriers can play important roles.","For instance, maybe polar bears could survive at the South pole as well as the North pole.","But they were never introduced to the South pole, and have had no way to disperse, or spread, across the oceans in between.","Once a species has been introduced to an area, it can only survive in that area if the conditions are right.","Some of the conditions that must be \"right\" are biotic, meaning that they're directly related to living organisms.","For instance, a species may not be able to get a foothold in a given area because a competing species, predator, or pathogen is already there, or because no food supply is available.","Many factors that determine whether a species can live an an area are abiotic, or non-living.","Examples of important abiotic factors include temperature, sunlight, and moisture level.","Many factors that determine whether a species can live an an area sometimes determine whether a species can live in a place in a very direct way.","For instance, a plant species will only take root and spread in a place where it's getting enough sunlight and water.","However, abiotic factors can also affect where species are found in less direct ways.","For instance, climate and soil quality directly affect the type and number of plants that can grow in a particular area.","Since energy enters ecosystems via plants and other primary producers, climate and soil quality indirectly determine what other trophic levels, or \"food chain links,\" the ecosystem can support."]]
ERROR:root:orig selected_specific len4
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents4
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['For instance, climate and soil quality directly affect the type and number of plants that can grow in a particular area. Since energy enters ecosystems via plants and other primary producers, climate and soil quality indirectly determine what other trophic levels, or "food chain links," the ecosystem can support.', 'Some of the conditions that must be "right" are biotic, meaning that they\'re directly related to living organisms. For instance, a species may not be able to get a foothold in a given area because a competing species, predator, or pathogen is already there, or because no food supply is available.', "Many factors that determine whether a species can live an an area sometimes determine whether a species can live in a place in a very direct way. For instance, a plant species will only take root and spread in a place where it's getting enough sunlight and water.", 'But they were never introduced to the South pole, and have had no way to disperse, or spread, across the oceans in between. Once a species has been introduced to an area, it can only survive in that area if the conditions are right.']), ('questions', ['What enters an ecosystem via plants and other primary producers?', 'What is one reason a species may not be able to get a foothold in a given area?', 'What is the main difference between a plant and a plant living in an area?', 'When can a species survive in an area?']), ('answers', ['energy', 'food supply is available', 'only take root and spread', 'if the conditions are right']), ('options', [['organic matter', 'microbes', 'detritus'], ['too many other species are competing for space', 'there is not enough water', 'the climate is too harsh'], ['neither spread nor take root', 'only spread but not take root', 'both spread and take root'], ['if the species wants to', 'if the species can reproduce', 'if the area is not too large']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:06.258371
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.422479
ERROR:root:payload: "The FIDO (Fast IDentity Online) authentication standard defines a fast and secure authentication mechanism for users to access websites and applications.\n\nThe FIDO Alliance, with representatives from a range of organizations, develops open and scalable technical specifications that allow people to access websites and apps through a common protocol. This means any company can use FIDO standards to implement technologies, like passkeys, for secure authentication.\n\nA passkey is a FIDO login credential, tied to an origin (website or application) and a physical device. Passkeys allow users to authenticate without having to enter a username, password, or provide any additional authentication factor. This technology aims to replace passwords as the primary authentication mechanism.\n\nWhy does secure authentication matter?\n\nPasswords have been used for authentication in computing for decades. However, password-based authentication is not the most secure option for authentication, as databases can be breached and passwords can be phished.\n\nMany users log in to different websites using the same passwords. This means when one website is breached, every other account that uses the same password is at risk. So even if you've built a secure password system, people are still at risk when a password is their only protection.\n\nSome sites and applications request two-step verification by requesting a second credential that is delivered via SMS, email, application, etc. While this is more secure than just using a password, this method of two-step verification is still vulnerable to phishing, because the user can be convinced to enter their two-step verification details into a malicious website.\n\nHow does FIDO create stronger security?\n\nFIDO-based authentication removes many of the problems that stem from password-based authentication, and from authentication that uses traditional second-steps. In particular:\n\nFIDO authentication uses public key cryptography.\nFIDO helps to ensure that the credentials aren't shared with malicious parties or other parties that do not own the credential\nPublic key cryptography reduces the threat from potential database breaches. The user registers with a single origin (a site or application), which generates a public-private key pair on the user's authenticator (a physical device). The user's public key is stored by the origin's server, but this alone is useless to an attacker. An attacker cannot derive the user's private key from the data stored on the server, which is required to complete authentication.\n\nWith FIDO, the user is not responsible for confirming that a website or application is actually who they say they are. Further, the user isn't responsible for ensuring credentials aren't used in the wrong places. FIDO binds each credential to a particular origin, which means the device (not the human) is responsible for correctly identifying the website or application.\n\nFor example, let's say the user is attempting to log into example.com. If the user requests the credential owned by example.com on phishing-example.com, the authenticator will reject the request thus protecting the user. The authentication process makes it very difficult for phishing websites or apps to obtain verification meant for other origins.\n\nOverall, FIDO and passkeys allow you to deploy stronger authentication that is still usable and easy for most users."
ERROR:root:orig input: "The FIDO (Fast IDentity Online) authentication standard defines a fast and secure authentication mechanism for users to access websites and applications.\r\n\r\nThe FIDO Alliance, with representatives from a range of organizations, develops open and scalable technical specifications that allow people to access websites and apps through a common protocol. This means any company can use FIDO standards to implement technologies, like passkeys, for secure authentication.\r\n\r\nA passkey is a FIDO login credential, tied to an origin (website or application) and a physical device. Passkeys allow users to authenticate without having to enter a username, password, or provide any additional authentication factor. This technology aims to replace passwords as the primary authentication mechanism.\r\n\r\nWhy does secure authentication matter?\r\n\r\nPasswords have been used for authentication in computing for decades. However, password-based authentication is not the most secure option for authentication, as databases can be breached and passwords can be phished.\r\n\r\nMany users log in to different websites using the same passwords. This means when one website is breached, every other account that uses the same password is at risk. So even if you've built a secure password system, people are still at risk when a password is their only protection.\r\n\r\nSome sites and applications request two-step verification by requesting a second credential that is delivered via SMS, email, application, etc. While this is more secure than just using a password, this method of two-step verification is still vulnerable to phishing, because the user can be convinced to enter their two-step verification details into a malicious website.\r\n\r\nHow does FIDO create stronger security?\r\n\r\nFIDO-based authentication removes many of the problems that stem from password-based authentication, and from authentication that uses traditional second-steps. In particular:\r\n\r\nFIDO authentication uses public key cryptography.\r\nFIDO helps to ensure that the credentials aren't shared with malicious parties or other parties that do not own the credential\r\nPublic key cryptography reduces the threat from potential database breaches. The user registers with a single origin (a site or application), which generates a public-private key pair on the user's authenticator (a physical device). The user's public key is stored by the origin's server, but this alone is useless to an attacker. An attacker cannot derive the user's private key from the data stored on the server, which is required to complete authentication.\r\n\r\nWith FIDO, the user is not responsible for confirming that a website or application is actually who they say they are. Further, the user isn't responsible for ensuring credentials aren't used in the wrong places. FIDO binds each credential to a particular origin, which means the device (not the human) is responsible for correctly identifying the website or application.\r\n\r\nFor example, let's say the user is attempting to log into example.com. If the user requests the credential owned by example.com on phishing-example.com, the authenticator will reject the request thus protecting the user. The authentication process makes it very difficult for phishing websites or apps to obtain verification meant for other origins.\r\n\r\nOverall, FIDO and passkeys allow you to deploy stronger authentication that is still usable and easy for most users."
ERROR:root:orig selected_specific len[[["A passkey is a FIDO login credential, tied to an origin (website or application) and a physical device.",{},4],["The user registers with a single origin (a site or application), which generates a public-private key pair on the user's authenticator (a physical device).",{},19],["FIDO binds each credential to a particular origin, which means the device (not the human) is responsible for correctly identifying the website or application.",{},24],["The FIDO Alliance, with representatives from a range of organizations, develops open and scalable technical specifications that allow people to access websites and apps through a common protocol.",{},2],["If the user requests the credential owned by example.com on phishing-example.com, the authenticator will reject the request thus protecting the user.",{},26],["An attacker cannot derive the user's private key from the data stored on the server, which is required to complete authentication.",{},21],["Passkeys allow users to authenticate without having to enter a username, password, or provide any additional authentication factor.",{},5],["While this is more secure than just using a password, this method of two-step verification is still vulnerable to phishing, because the user can be convinced to enter their two-step verification details into a malicious website.",{},14],["Some sites and applications request two-step verification by requesting a second credential that is delivered via SMS, email, application, etc.",{},13],["The FIDO (Fast IDentity Online)",{},0]],["The FIDO (Fast IDentity Online)","authentication standard defines a fast and secure authentication mechanism for users to access websites and applications.","The FIDO Alliance, with representatives from a range of organizations, develops open and scalable technical specifications that allow people to access websites and apps through a common protocol.","This means any company can use FIDO standards to implement technologies, like passkeys, for secure authentication.","A passkey is a FIDO login credential, tied to an origin (website or application) and a physical device.","Passkeys allow users to authenticate without having to enter a username, password, or provide any additional authentication factor.","This technology aims to replace passwords as the primary authentication mechanism.","Why does secure authentication matter?","Passwords have been used for authentication in computing for decades.","However, password-based authentication is not the most secure option for authentication, as databases can be breached and passwords can be phished.","Many users log in to different websites using the same passwords.","This means when one website is breached, every other account that uses the same password is at risk.","So even if you've built a secure password system, people are still at risk when a password is their only protection.","Some sites and applications request two-step verification by requesting a second credential that is delivered via SMS, email, application, etc.","While this is more secure than just using a password, this method of two-step verification is still vulnerable to phishing, because the user can be convinced to enter their two-step verification details into a malicious website.","How does FIDO create stronger security?","FIDO-based authentication removes many of the problems that stem from password-based authentication, and from authentication that uses traditional second-steps.","In particular:  FIDO authentication uses public key cryptography.","FIDO helps to ensure that the credentials aren't shared with malicious parties or other parties that do not own the credential Public key cryptography reduces the threat from potential database breaches.","The user registers with a single origin (a site or application), which generates a public-private key pair on the user's authenticator (a physical device).","The user's public key is stored by the origin's server, but this alone is useless to an attacker.","An attacker cannot derive the user's private key from the data stored on the server, which is required to complete authentication.","With FIDO, the user is not responsible for confirming that a website or application is actually who they say they are.","Further, the user isn't responsible for ensuring credentials aren't used in the wrong places.","FIDO binds each credential to a particular origin, which means the device (not the human) is responsible for correctly identifying the website or application.","For example, let's say the user is attempting to log into example.com.","If the user requests the credential owned by example.com on phishing-example.com, the authenticator will reject the request thus protecting the user.","The authentication process makes it very difficult for phishing websites or apps to obtain verification meant for other origins.","Overall, FIDO and passkeys allow you to deploy stronger authentication that is still usable and easy for most users."]]
ERROR:root:orig selected_specific len10
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000765
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents3
ERROR:root:total before 0:00:04.186143
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001719
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': ' _________  allow users to authenticate without having to enter a username, password, or provide any additional authentication factor.', 'answer': 'Passkeys', 'options': ['PINs', 'One-time passwords', 'Security questions'], 'context': 'Passkeys allow users to authenticate without having to enter a username, password, or provide any additional authentication factor.'}, {'question_statement': 'While this is more secure than just using a password, this method of two-step verification is still vulnerable to  _________ , because the user can be convinced to enter their two-step verification details into a malicious website.', 'answer': 'phishing', 'options': ['timing attacks', 'man-in-the-middle', 'keystroke logging'], 'context': 'While this is more secure than just using a password, this method of two-step verification is still vulnerable to phishing, because the user can be convinced to enter their two-step verification details into a malicious website.'}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['This means any company can use FIDO standards to implement technologies, like passkeys, for secure authentication. A passkey is a FIDO login credential, tied to an origin (website or application) and a physical device.', "FIDO helps to ensure that the credentials aren't shared with malicious parties or other parties that do not own the credential Public key cryptography reduces the threat from potential database breaches. The user registers with a single origin (a site or application), which generates a public-private key pair on the user's authenticator (a physical device).", "Further, the user isn't responsible for ensuring credentials aren't used in the wrong places. FIDO binds each credential to a particular origin, which means the device (not the human) is responsible for correctly identifying the website or application.", 'Passkeys allow users to authenticate without having to enter a username, password, or provide any additional authentication factor.', 'While this is more secure than just using a password, this method of two-step verification is still vulnerable to phishing, because the user can be convinced to enter their two-step verification details into a malicious website.']), ('questions', ['What is a passkey?', 'What is a single origin?', 'What binds each credential to a specific origin?', ' _________  allow users to authenticate without having to enter a username, password, or provide any additional authentication factor.', 'While this is more secure than just using a password, this method of two-step verification is still vulnerable to  _________ , because the user can be convinced to enter their two-step verification details into a malicious website.']), ('answers', ['FIDO login credential', 'a site or application', 'FIDO', 'Passkeys', 'phishing']), ('options', [['Password', 'Security question', 'PIN'], ['a type of coffee', 'the birthplace of a product or service', 'a type of food'], ['X.509', 'Web', 'SSL'], ['PINs', 'One-time passwords', 'Security questions'], ['timing attacks', 'man-in-the-middle', 'keystroke logging']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['This means any company can use FIDO standards to implement technologies, like passkeys, for secure authentication. A passkey is a FIDO login credential, tied to an origin (website or application) and a physical device.', "FIDO helps to ensure that the credentials aren't shared with malicious parties or other parties that do not own the credential Public key cryptography reduces the threat from potential database breaches. The user registers with a single origin (a site or application), which generates a public-private key pair on the user's authenticator (a physical device).", "Further, the user isn't responsible for ensuring credentials aren't used in the wrong places. FIDO binds each credential to a particular origin, which means the device (not the human) is responsible for correctly identifying the website or application.", 'Passkeys allow users to authenticate without having to enter a username, password, or provide any additional authentication factor.', 'While this is more secure than just using a password, this method of two-step verification is still vulnerable to phishing, because the user can be convinced to enter their two-step verification details into a malicious website.']), ('questions', ['What is a passkey?', 'What is a single origin?', 'What binds each credential to a specific origin?', ' _________  allow users to authenticate without having to enter a username, password, or provide any additional authentication factor.', 'While this is more secure than just using a password, this method of two-step verification is still vulnerable to  _________ , because the user can be convinced to enter their two-step verification details into a malicious website.']), ('answers', ['FIDO login credential', 'a site or application', 'FIDO', 'Passkeys', 'phishing']), ('options', [['Password', 'Security question', 'PIN'], ['a type of coffee', 'the birthplace of a product or service', 'a type of food'], ['X.509', 'Web', 'SSL'], ['PINs', 'One-time passwords', 'Security questions'], ['timing attacks', 'man-in-the-middle', 'keystroke logging']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:06.693782
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.388756
ERROR:root:payload: 'curity, and overall user-experience. Because it is wireless, Bluetooth Low Energy Technology may be subject to monitoring, injection, and other network-level attacks.\n\nFor these reasons, clients and authenticators MUST create and use a long-term link key (LTK) and SHALL encrypt all communications. Authenticator MUST never use short term keys.\n\nBecause Bluetooth Low Energy Technology has poor ranging (i.e., there is no good indication of proximity), it may not be clear to a FIDO client with which Bluetooth Low Energy Technology authenticator it should communicate. Pairing is the only mechanism defined in this protocol to ensure that FIDO clients are interacting with the expected Bluetooth Low Energy Technology authenticator. As a result, authenticator manufacturers SHOULD instruct users to avoid performing Bluetooth pairing in a public space such as a cafe, shop or train station.\n\nOne disadvantage of using standard Bluetooth pairing is that the pairing is "system-wide" on most operating systems. That is, if an authenticator is paired to a FIDO client which resides on an operating system where Bluetooth pairing is "system-wide", then any application on that device might be able to interact with an authenticator. This issue is discussed further in Implementation Considerations.\n\n8.3.3. Link Security\nFor Bluetooth Low Energy Technology connections, the authenticator SHALL enforce Security Mode 1, Level 2 (unauthenticated pairing with encryption) or Security Mode 1, Level 3 (authenticated pairing with encryption) before any FIDO messages are exchanged.\n\n8.3.4. Framing\nConceptually, framing defines an encapsulation of FIDO raw messages responsible for correct transmission of a single request and its response by the transport layer.\n\nAll requests and their responses are conceptually written as a single frame. The format of the requests and responses is given first as complete frames. Fragmentation is discussed next for each type of transport layer.'
ERROR:root:orig input: 'curity, and overall user-experience. Because it is wireless, Bluetooth Low Energy Technology may be subject to monitoring, injection, and other network-level attacks.\r\n\r\nFor these reasons, clients and authenticators MUST create and use a long-term link key (LTK) and SHALL encrypt all communications. Authenticator MUST never use short term keys.\r\n\r\nBecause Bluetooth Low Energy Technology has poor ranging (i.e., there is no good indication of proximity), it may not be clear to a FIDO client with which Bluetooth Low Energy Technology authenticator it should communicate. Pairing is the only mechanism defined in this protocol to ensure that FIDO clients are interacting with the expected Bluetooth Low Energy Technology authenticator. As a result, authenticator manufacturers SHOULD instruct users to avoid performing Bluetooth pairing in a public space such as a cafe, shop or train station.\r\n\r\nOne disadvantage of using standard Bluetooth pairing is that the pairing is "system-wide" on most operating systems. That is, if an authenticator is paired to a FIDO client which resides on an operating system where Bluetooth pairing is "system-wide", then any application on that device might be able to interact with an authenticator. This issue is discussed further in Implementation Considerations.\r\n\r\n8.3.3. Link Security\r\nFor Bluetooth Low Energy Technology connections, the authenticator SHALL enforce Security Mode 1, Level 2 (unauthenticated pairing with encryption) or Security Mode 1, Level 3 (authenticated pairing with encryption) before any FIDO messages are exchanged.\r\n\r\n8.3.4. Framing\r\nConceptually, framing defines an encapsulation of FIDO raw messages responsible for correct transmission of a single request and its response by the transport layer.\r\n\r\nAll requests and their responses are conceptually written as a single frame. The format of the requests and responses is given first as complete frames. Fragmentation is discussed next for each type of transport layer.'
ERROR:root:orig selected_specific len[[["Link Security For Bluetooth Low Energy Technology connections, the authenticator SHALL enforce Security Mode 1, Level 2 (unauthenticated pairing with encryption) or Security Mode 1, Level 3 (authenticated pairing with encryption) before any FIDO messages are exchanged.",{},12],["That is, if an authenticator is paired to a FIDO client which resides on an operating system where Bluetooth pairing is \"system-wide\", then any application on that device might be able to interact with an authenticator.",{},9],["(i.e., there is no good indication of proximity), it may not be clear to a FIDO client with which Bluetooth Low Energy Technology authenticator it should communicate.",{},5],["Framing Conceptually, framing defines an encapsulation of FIDO raw messages responsible for correct transmission of a single request and its response by the transport layer.",{},14],["As a result, authenticator manufacturers SHOULD instruct users to avoid performing Bluetooth pairing in a public space such as a cafe, shop or train station.",{},7]],["curity, and overall user-experience.","Because it is wireless, Bluetooth Low Energy Technology may be subject to monitoring, injection, and other network-level attacks.","For these reasons, clients and authenticators MUST create and use a long-term link key (LTK) and SHALL encrypt all communications.","Authenticator MUST never use short term keys.","Because Bluetooth Low Energy Technology has poor ranging","(i.e., there is no good indication of proximity), it may not be clear to a FIDO client with which Bluetooth Low Energy Technology authenticator it should communicate.","Pairing is the only mechanism defined in this protocol to ensure that FIDO clients are interacting with the expected Bluetooth Low Energy Technology authenticator.","As a result, authenticator manufacturers SHOULD instruct users to avoid performing Bluetooth pairing in a public space such as a cafe, shop or train station.","One disadvantage of using standard Bluetooth pairing is that the pairing is \"system-wide\" on most operating systems.","That is, if an authenticator is paired to a FIDO client which resides on an operating system where Bluetooth pairing is \"system-wide\", then any application on that device might be able to interact with an authenticator.","This issue is discussed further in Implementation Considerations.","8.3.3.","Link Security For Bluetooth Low Energy Technology connections, the authenticator SHALL enforce Security Mode 1, Level 2 (unauthenticated pairing with encryption) or Security Mode 1, Level 3 (authenticated pairing with encryption) before any FIDO messages are exchanged.","8.3.4.","Framing Conceptually, framing defines an encapsulation of FIDO raw messages responsible for correct transmission of a single request and its response by the transport layer.","All requests and their responses are conceptually written as a single frame.","The format of the requests and responses is given first as complete frames.","Fragmentation is discussed next for each type of transport layer."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:0:00:00.000004
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents5
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['8.3.3. Link Security For Bluetooth Low Energy Technology connections, the authenticator SHALL enforce Security Mode 1, Level 2 (unauthenticated pairing with encryption) or Security Mode 1, Level 3 (authenticated pairing with encryption) before any FIDO messages are exchanged.', 'One disadvantage of using standard Bluetooth pairing is that the pairing is "system-wide" on most operating systems. That is, if an authenticator is paired to a FIDO client which resides on an operating system where Bluetooth pairing is "system-wide", then any application on that device might be able to interact with an authenticator.', 'Because Bluetooth Low Energy Technology has poor ranging (i.e., there is no good indication of proximity), it may not be clear to a FIDO client with which Bluetooth Low Energy Technology authenticator it should communicate.', '8.3.4. Framing Conceptually, framing defines an encapsulation of FIDO raw messages responsible for correct transmission of a single request and its response by the transport layer.', 'Pairing is the only mechanism defined in this protocol to ensure that FIDO clients are interacting with the expected Bluetooth Low Energy Technology authenticator. As a result, authenticator manufacturers SHOULD instruct users to avoid performing Bluetooth pairing in a public space such as a cafe, shop or train station.']), ('questions', ['Who enforces Security Mode 1, Level 2 or Security Mode 1, Level 3?', 'What is an authenticator paired to?', 'What type of authentication is needed to communicate with a FIDO client?', 'What defines an encapsulation of FIDO raw messages?', 'Where should users avoid performing Bluetooth pairing?']), ('answers', ['the authenticator', 'a FIDO client', 'Bluetooth Low Energy Technology', 'Framing', 'a cafe, shop or train station']), ('options', [['the smart card', 'the PIN', 'the token'], ['a Bluetooth device', 'a U.S. bank account', 'a secure element in a smart card'], ['Near Field Communications', 'Fingerprint recognition', 'Web Authentication'], ['Decoding', 'Ordering', 'Encoding'], ['their office', 'a park', 'their home']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:11.593677
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.350603
ERROR:root:payload: 'Acids are not always dangerous. Acids sometimes have a bad reputation for being dangerous, but there are plenty of acidic substances that are useful (and even tasty!). For example, orange juice and coffee are acidic substances. In addition, though there are a few acids that you want to avoid handling (ie: hydrofluoric acid), don’t be fooled: strong bases can be damaging as well.\nLower pH number means stronger acid, higher pH number means stronger base. It can be a little confusing, but the lower the pH of a substance is, the stronger of an acid it is. Sometimes it is more helpful to think that the further away from neutral a substance is, the stronger it is in either the acidic or basic direction.\nAcids and bases are not only important in chemistry. Although you may go into more detail learning about them in your chemistry class, acids and bases are extremely important to living things! In fact, most enzymes work best at a specific pH. For example, the enzyme pepsin is necessary for the digestion of proteins in the stomach, but it only functions at a very low pH. Therefore, it is important for the body to maintain an acidic environment in the stomach to make sure food gets digested well.'
ERROR:root:orig input: 'Acids are not always dangerous. Acids sometimes have a bad reputation for being dangerous, but there are plenty of acidic substances that are useful (and even tasty!). For example, orange juice and coffee are acidic substances. In addition, though there are a few acids that you want to avoid handling (ie: hydrofluoric acid), don’t be fooled: strong bases can be damaging as well.\r\nLower pH number means stronger acid, higher pH number means stronger base. It can be a little confusing, but the lower the pH of a substance is, the stronger of an acid it is. Sometimes it is more helpful to think that the further away from neutral a substance is, the stronger it is in either the acidic or basic direction.\r\nAcids and bases are not only important in chemistry. Although you may go into more detail learning about them in your chemistry class, acids and bases are extremely important to living things! In fact, most enzymes work best at a specific pH. For example, the enzyme pepsin is necessary for the digestion of proteins in the stomach, but it only functions at a very low pH. Therefore, it is important for the body to maintain an acidic environment in the stomach to make sure food gets digested well.'
ERROR:root:orig selected_specific len[[["For example, the enzyme pepsin is necessary for the digestion of proteins in the stomach, but it only functions at a very low",{},10],["Sometimes it is more helpful to think that the further away from neutral a substance is, the stronger it is in either the acidic or basic direction.",{},6]],["Acids are not always dangerous.","Acids sometimes have a bad reputation for being dangerous, but there are plenty of acidic substances that are useful (and even tasty!).","For example, orange juice and coffee are acidic substances.","In addition, though there are a few acids that you want to avoid handling (ie: hydrofluoric acid), don’t be fooled: strong bases can be damaging as well.","Lower pH number means stronger acid, higher pH number means stronger base.","It can be a little confusing, but the lower the pH of a substance is, the stronger of an acid it is.","Sometimes it is more helpful to think that the further away from neutral a substance is, the stronger it is in either the acidic or basic direction.","Acids and bases are not only important in chemistry.","Although you may go into more detail learning about them in your chemistry class, acids and bases are extremely important to living things!","In fact, most enzymes work best at a specific pH.","For example, the enzyme pepsin is necessary for the digestion of proteins in the stomach, but it only functions at a very low","pH. Therefore, it is important for the body to maintain an acidic environment in the stomach to make sure food gets digested well."]]
ERROR:root:orig selected_specific len2
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['In fact, most enzymes work best at a specific pH. For example, the enzyme pepsin is necessary for the digestion of proteins in the stomach, but it only functions at a very low']), ('questions', ['What enzyme is necessary for the digestion of proteins in the stomach?']), ('answers', ['enzyme pepsin']), ('options', [['enzyme pepsinogen', 'enzyme rennin', 'enzyme hydrochloric acid']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:03.878740
ERROR:root:api_check 0:00:00.366062
ERROR:root:payload: "World War II was the largest conflict in all of human history. The largest and bloodiest conflict And so you can imagine it is quite complex My goal in this video is to start giving us a survey, an overview of the war. And I won't even be able to cover it all in this video. It is really just a think about how did things get started. Or what happened in the lead up? And to start I am actually going to focus on Asia and the Pacific. Which probably doesn't get enough attention when we look at it from a western point of view But if we go back even to the early 1900s. Japan is becoming more and more militaristic. More and more nationalistic. In the early 1900s it had already occupied... It had already occupied Korea as of 1910. and in 1931 it invades Manchuria. It invades Manchuria. So this right over here, this is in 1931. And it installs a puppet state, the puppet state of Manchukuo. And when we call something a puppet state, it means that there is a government there. And they kind of pretend to be in charge. But they're really controlled like a puppet by someone else. And in this case it is the Empire of Japan. And we do remember what is happening in China in the 1930s. China is embroiled in a civil war. So there is a civil war going on in China. And that civil war is between the Nationalists, the Kuomintang and the Communists versus the Communists The Communists led by Mao Zedong. The Kuomintang led by general Chiang Kai-shek. And so they're in the midst of the civil war. So you can imagine Imperial Japan is taking advantage of this to take more and more control over parts of China And that continues through the 30s until we get to 1937. And in 1937 the Japanese use some pretext with, you know, kind of a false flag, kind of... well, I won't go into the depths of what started it kind of this Marco-Polo Bridge Incident But it uses that as justifications to kind of have an all-out war with China so 1937...you have all-out war and this is often referred to as the Second Sino-Japanese War ...Sino-Japanese War Many historians actually would even consider this the beginning of World War II. While, some of them say, ok this is the beginning of the Asian Theater of World War II of the all-out war between Japan and China, but it isn't until Germany invades Poland in 1939 that you truly have the formal beginning, so to speak, of World War II. Regardless of whether you consider this the formal beginning or not, the Second Sino-Japanese War, and it's called the second because there was another Sino-Japanese War in the late 1800s that was called the First Sino-Japanese War, this is incredibly, incredibly brutal and incredibly bloody a lot of civilians affected we could do a whole series of videos just on that But at this point it does become all-out war and this causes the civil war to take a back seat to fighting off the aggressor of Japan in 1937. So that lays a foundation for what's happening in The Pacific, in the run-up to World War II. And now let's also remind ourselves what's happening... what's happening in Europe. As we go through the 1930s Hitler's Germany, the Nazi Party, is getting more and more militaristic. So this is Nazi Germany... Nazi Germany right over here. They're allied with Benito Mussolini's Italy."
ERROR:root:orig input: "World War II was the largest conflict in all of human history. The largest and bloodiest conflict And so you can imagine it is quite complex My goal in this video is to start giving us a survey, an overview of the war. And I won't even be able to cover it all in this video. It is really just a think about how did things get started. Or what happened in the lead up? And to start I am actually going to focus on Asia and the Pacific. Which probably doesn't get enough attention when we look at it from a western point of view But if we go back even to the early 1900s. Japan is becoming more and more militaristic. More and more nationalistic. In the early 1900s it had already occupied... It had already occupied Korea as of 1910. and in 1931 it invades Manchuria. It invades Manchuria. So this right over here, this is in 1931. And it installs a puppet state, the puppet state of Manchukuo. And when we call something a puppet state, it means that there is a government there. And they kind of pretend to be in charge. But they're really controlled like a puppet by someone else. And in this case it is the Empire of Japan. And we do remember what is happening in China in the 1930s. China is embroiled in a civil war. So there is a civil war going on in China. And that civil war is between the Nationalists, the Kuomintang and the Communists versus the Communists The Communists led by Mao Zedong. The Kuomintang led by general Chiang Kai-shek. And so they're in the midst of the civil war. So you can imagine Imperial Japan is taking advantage of this to take more and more control over parts of China And that continues through the 30s until we get to 1937. And in 1937 the Japanese use some pretext with, you know, kind of a false flag, kind of... well, I won't go into the depths of what started it kind of this Marco-Polo Bridge Incident But it uses that as justifications to kind of have an all-out war with China so 1937...you have all-out war and this is often referred to as the Second Sino-Japanese War ...Sino-Japanese War Many historians actually would even consider this the beginning of World War II. While, some of them say, ok this is the beginning of the Asian Theater of World War II of the all-out war between Japan and China, but it isn't until Germany invades Poland in 1939 that you truly have the formal beginning, so to speak, of World War II. Regardless of whether you consider this the formal beginning or not, the Second Sino-Japanese War, and it's called the second because there was another Sino-Japanese War in the late 1800s that was called the First Sino-Japanese War, this is incredibly, incredibly brutal and incredibly bloody a lot of civilians affected we could do a whole series of videos just on that But at this point it does become all-out war and this causes the civil war to take a back seat to fighting off the aggressor of Japan in 1937. So that lays a foundation for what's happening in The Pacific, in the run-up to World War II. And now let's also remind ourselves what's happening... what's happening in Europe. As we go through the 1930s Hitler's Germany, the Nazi Party, is getting more and more militaristic. So this is Nazi Germany... Nazi Germany right over here. They're allied with Benito Mussolini's Italy. "
ERROR:root:orig selected_specific len[[["While, some of them say, ok this is the beginning of the Asian Theater of World War II of the all-out war between Japan and China, but it isn't until Germany invades Poland in 1939 that you truly have the formal beginning, so to speak, of World War II.",{},36],["Regardless of whether you consider this the formal beginning or not, the Second Sino-Japanese War, and it's called the second because there was another Sino-Japanese War in the late 1800s that was called the First Sino-Japanese War",{},37]],["World War II was the largest conflict in all of human history.","The largest and bloodiest conflict","And so you can imagine it is quite complex","My goal in this video is to start giving us a survey, an overview of the war.","And I won't even be able to cover it all in this video.","It is really just a think about how did things get started.","Or what happened in the lead up?","And to start I am actually going to focus on Asia and the Pacific.","Which probably doesn't get enough attention when we look at it from a western point of view","But if we go back even to the early 1900s.","Japan is becoming more and more militaristic.","More and more nationalistic.","In the early 1900s Japan had already occupied...","Japan had already occupied Korea as of 1910.","and in 1931 Japan invades Manchuria.","Japan invades Manchuria.","So this right over here, this is in 1931.","And Japan installs a puppet state, the puppet state of Manchukuo.","And when we call something a puppet state, Japan means that there is a government there.","And they kind of pretend to be in charge.","But they're really controlled like a puppet by someone else.","And in this case it is the Empire of Japan.","And we do remember what is happening in China in the 1930s.","China is embroiled in a civil war.","So there is a civil war going on in China.","And that civil war is between the Nationalists, the Kuomintang and the Communists versus the Communists","The Communists led by Mao Zedong.","The Kuomintang led by general Chiang Kai-shek.","And so Kuomintang're in the midst of the civil war.","So you can imagine Imperial Japan is taking advantage of this to take more and more control over parts of China","And that continues through the 30s until we get to 1937.","And in 1937 the Japanese use some pretext with, you know, kind of a false flag, kind of...","well, I won't go into the depths of what started it kind of this Marco-Polo Bridge Incident","But it uses that as justifications to kind of have an all-out war with China so 1937...you have all-out war and this is often referred to as the Second Sino-Japanese War ...","Sino-Japanese War","Many historians actually would even consider this the beginning of World War II.","While, some of Many historians say, ok this is the beginning of the Asian Theater of World War II of the all-out war between Japan and China, but it isn't until Germany invades Poland in 1939 that you truly have the formal beginning, so to speak, of World War II.","Regardless of whether you consider this the formal beginning or not, the Second Sino-Japanese War, and it's called the second because there was another Sino-Japanese War in the late 1800s that was called the First Sino-Japanese War",", this is incredibly, incredibly brutal and incredibly bloody a lot of civilians affected we could do a whole series of videos just on that","But at this point it does become all-out war and this causes the civil war to take a back seat to fighting off the aggressor of Japan in 1937.","So that lays a foundation for what's happening in The Pacific, in the run-up to World War II.","And now let's also remind ourselves what's happening...","what's happening in Europe.","As we go through the 1930s Hitler's Germany, the Nazi Party, is getting more and more militaristic.","So this is Nazi Germany...","Nazi Germany right over here.","Nazi Germany right over here're","allied with Benito Mussolini's Italy."]]
ERROR:root:orig selected_specific len2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.737600
ERROR:root:api_check 0:00:00.366059
ERROR:root:payload: 'They\'re both extremely nationalistic; they both do not like the Communists, at all You might remember, that in 1938... 1938, you have the Anschluss, which I\'m sure I\'m mispronouncing, and you also have the takeover of the Sudetenland in Czechoslovakia. So the Anschluss was the unification with Austria and then you have the Germans taking over the of Sudetenland in Czechoslovakia and this is kind of the famous, you know, the rest of the, what will be called the Allied Powers kind of say, "Okay, yeah, okay maybe Hitler\'s just going to just do that... well we don\'t want to start another war. We still all remember World War I; it was really horrible. And so they kind of appease Hitler and he\'s able to, kind of, satisfy his aggression. so in 1938 you have Austria, Austria and the Sudetenland ...and the Sudetenland... are taken over, are taken over by Germany and then as you go into 1939, as you go into 1939 in March they\'re able to take over all of Czechoslovakia they\'re able to take over all of Czechoslovakia and once again the Allies are kind of, they\'re feeling very uncomfortable, they kind of, have seen something like this before they would like to push back, but they still are, kind of, are not feeling good about starting another World War so they\'re hoping that maybe Germany stops there. So let me write this down... So all of Czechoslovakia... ...Czechoslovakia... is taken over by the Germans. This is in March of 1939. And then in August you have the Germans, and this is really in preparation for, what you could guess is about to happen, for the all-out war that\'s about to happen the Germans don\'t want to fight the Soviets right out the gate, as we will see, and as you might know, they do eventually take on the Soviet Union, but in 1939 they get into a pact with the Soviet Union. And so this is, they sign the Molotov–Ribbentrop Pact with the Soviet Union, this is in August, which is essentially mutual non-aggression "Hey, you know, you do what you need to do, we know what we need to do." and they secretly started saying "Okay were gonna, all the countries out here, we\'re going to create these spheres of influence where Germany can take, uh, control of part of it and the Soviet Union, and Stalin is in charge of the Soviet Union at this point, can take over other parts of it. And then that leads us to the formal start where in September, let me write this in a different color... so September of 1939, on September 1st, Germany invades Poland Germany invades Poland on September 1st, which is generally considered the beginning of World War II. and then you have the Great Britain and France declares war on Germany so let me write this World War II... starts everyone is declaring war on each other, Germany invades Poland, Great Britain and France declare war on Germany, and you have to remember at this point Stalin isn\'t so concerned about Hitler he\'s just signed the Molotov-Ribbentrop Pact and so in mid-September, Stalin himself invades Poland as well so they both can kind of carve out... ...their spheres of influence... so you can definitely sense that things are not looking good for the world at this point you already have Asia in the Second Sino-Japanese War, incredibly bloody war, and now you have kind of, a lot of very similar actors that you had in World War I and then they\'re starting to get into a fairly extensive engagement.'
ERROR:root:orig input: 'They\'re both extremely nationalistic; they both do not like the Communists, at all You might remember, that in 1938... 1938, you have the Anschluss, which I\'m sure I\'m mispronouncing, and you also have the takeover of the Sudetenland in Czechoslovakia. So the Anschluss was the unification with Austria and then you have the Germans taking over the of Sudetenland in Czechoslovakia and this is kind of the famous, you know, the rest of the, what will be called the Allied Powers kind of say, "Okay, yeah, okay maybe Hitler\'s just going to just do that... well we don\'t want to start another war. We still all remember World War I; it was really horrible. And so they kind of appease Hitler and he\'s able to, kind of, satisfy his aggression. so in 1938 you have Austria, Austria and the Sudetenland ...and the Sudetenland... are taken over, are taken over by Germany and then as you go into 1939, as you go into 1939 in March they\'re able to take over all of Czechoslovakia they\'re able to take over all of Czechoslovakia and once again the Allies are kind of, they\'re feeling very uncomfortable, they kind of, have seen something like this before they would like to push back, but they still are, kind of, are not feeling good about starting another World War so they\'re hoping that maybe Germany stops there. So let me write this down... So all of Czechoslovakia... ...Czechoslovakia... is taken over by the Germans. This is in March of 1939. And then in August you have the Germans, and this is really in preparation for, what you could guess is about to happen, for the all-out war that\'s about to happen the Germans don\'t want to fight the Soviets right out the gate, as we will see, and as you might know, they do eventually take on the Soviet Union, but in 1939 they get into a pact with the Soviet Union. And so this is, they sign the Molotov–Ribbentrop Pact with the Soviet Union, this is in August, which is essentially mutual non-aggression "Hey, you know, you do what you need to do, we know what we need to do." and they secretly started saying "Okay were gonna, all the countries out here, we\'re going to create these spheres of influence where Germany can take, uh, control of part of it and the Soviet Union, and Stalin is in charge of the Soviet Union at this point, can take over other parts of it. And then that leads us to the formal start where in September, let me write this in a different color... so September of 1939, on September 1st, Germany invades Poland Germany invades Poland on September 1st, which is generally considered the beginning of World War II. and then you have the Great Britain and France declares war on Germany so let me write this World War II... starts everyone is declaring war on each other, Germany invades Poland, Great Britain and France declare war on Germany, and you have to remember at this point Stalin isn\'t so concerned about Hitler he\'s just signed the Molotov-Ribbentrop Pact and so in mid-September, Stalin himself invades Poland as well so they both can kind of carve out... ...their spheres of influence... so you can definitely sense that things are not looking good for the world at this point you already have Asia in the Second Sino-Japanese War, incredibly bloody war, and now you have kind of, a lot of very similar actors that you had in World War I and then they\'re starting to get into a fairly extensive engagement.'
ERROR:root:orig selected_specific len[[["the Great Britain and France declares war on Germany so let me write this World War II... starts everyone is declaring war on each other, Germany invades Poland, Great Britain and France declare war on Germany, and you have to remember at this point Stalin isn't so concerned about Hitler",{},23],["so September of 1939, on September 1st, Germany invades Poland Germany invades Poland on September 1st, which is generally considered the beginning of World War II.",{},21],["so in 1938 you have Austria, Austria and the Sudetenland ...and the Sudetenland... are taken over, are taken over by Germany and then as you go into 1939, as you go into 1939 in March they're able to take over all of Czechoslovakia",{},9],["he's just signed the Molotov-Ribbentrop Pact and so in mid-September, Stalin himself invades Poland as well",{},24],["And then in August you have the Germans, and this is really in preparation for, what you could guess is about to happen, for the all-out war that's about to happen the Germans don't want to fight the Soviets right out the gate, as we will see, and as you might know, they do eventually take on the Soviet Union, but in 1939 they get into a pact with the Soviet Union.",{},17],["And so this is, they sign the Molotov–Ribbentrop Pact with the Soviet Union, this is in August, which is essentially mutual non-aggression \"Hey, you know, you do what you need to do, we know what we need to do.",{},18],["So the Anschluss was the unification with Austria and then you have the Germans taking over the of Sudetenland in Czechoslovakia and this is kind of the famous, you know, the rest of the, what will be called the Allied Powers kind of say, \"Okay, yeah,",{},3],["\" and they secretly started saying \"Okay were gonna, all the countries out here, we're going to create these spheres of influence where Germany can take, uh, control of part of it and the Soviet Union, and Stalin is in charge of the Soviet Union at this point, can take over other parts of it.",{},19],["you already have Asia in the Second Sino-Japanese War, incredibly bloody war, and now you have kind of, a lot of very similar actors that you had in",{},27]],["They're both extremely nationalistic; they both do not like the Communists, at all You might remember, that in 1938...","1938, you have the Anschluss, which","I'm sure I'm mispronouncing, and you also have the takeover of the Sudetenland in Czechoslovakia.","So the Anschluss was the unification with Austria and then you have the Germans taking over the of Sudetenland in Czechoslovakia and this is kind of the famous, you know, the rest of the, what will be called the Allied Powers kind of say, \"Okay, yeah,","okay maybe Hitler's just going to just do that...","well we don't want to start another war.","We still all remember World War I; it was really horrible.","And so they kind of appease Hitler and Hitler's able to, kind of, satisfy Hitler's aggression.","so in 1938 you have Austria, Austria and the Sudetenland ...and the Sudetenland... are taken over, are taken over by Germany and then as you go into 1939, as you go into 1939 in March they're able to take over all of Czechoslovakia","they're able to take over all of Czechoslovakia and once again the Allies are kind of",", they're feeling very uncomfortable, they kind of, have seen something like this before they would like to push back, but they still are, kind of, are not feeling good about starting another World War","so they're hoping that maybe Germany stops there.","So let me write this down...","So all of Czechoslovakia... ...","Czechoslovakia... is taken over by the Germans.","This is in March of 1939.","And then in August you have the Germans, and this is really in preparation for, what you could guess is about to happen, for the all-out war that's about to happen the Germans don't want to fight the Soviets right out the gate, as we will see, and as you might know, they do eventually take on the Soviet Union, but in 1939 they get into a pact with the Soviet Union.","And so this is, the Germans sign the Molotov–Ribbentrop Pact with the Soviet Union, this is in August, which is essentially mutual non-aggression","\"Hey, you know, you do what you need to do, we know what we need to do.\"","and the Germans secretly started saying \"Okay were gonna, all the countries out here, we're going to create these spheres of influence where Germany can take, uh, control of part of it and the Soviet Union, and Stalin is in charge of the Soviet Union at this point, can take over other parts of it.","And then that leads us to the formal start where in September, let me write this in a different color...","so September of 1939, on September 1st, Germany invades Poland Germany invades Poland on September 1st, which is generally considered the beginning of World War II.","and then you have","the Great Britain and France declares war on Germany so let me write this World War II... starts everyone is declaring war on each other, Germany invades Poland, Great Britain and France declare war on Germany, and you have to remember at this point Stalin isn't so concerned about Hitler Hitler's just signed the Molotov-Ribbentrop Pact and so in mid-September, Stalin himself invades Poland as well","so they both can kind of carve out... ...","their spheres of influence... so you can definitely sense that things are not looking good for the world at this point","you already have Asia in the Second Sino-Japanese War, incredibly bloody war, and now you have kind of, a lot of very similar actors that you had in","World War I","and then they're starting to get into a fairly extensive engagement."]]
ERROR:root:orig selected_specific len9
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents9
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['And then that leads us to the formal start where in September, let me write this in a different color... so September of 1939, on September 1st, Germany invades Poland Germany invades Poland on September 1st, which is generally considered the beginning of World War II.', "so in 1938 you have Austria, Austria and the Sudetenland ...and the Sudetenland... are taken over, are taken over by Germany and then as you go into 1939, as you go into 1939 in March they're able to take over all of Czechoslovakia so in 1938 you have Austria, Austria and the Sudetenland ...and the Sudetenland... are taken over, are taken over by Germany and then as you go into 1939, as you go into 1939 in March they're able to take over all of Czechoslovakia", "the Great Britain and France declares war on Germany so let me write this World War II... starts everyone is declaring war on each other, Germany invades Poland, Great Britain and France declare war on Germany, and you have to remember at this point Stalin isn't so concerned about Hitler Hitler's just signed the Molotov-Ribbentrop Pact and so in mid-September, Stalin himself invades Poland as well he's just signed the Molotov-Ribbentrop Pact and so in mid-September, Stalin himself invades Poland as well", "And then in August you have the Germans, and this is really in preparation for, what you could guess is about to happen, for the all-out war that's about to happen the Germans don't want to fight the Soviets right out the gate, as we will see, and as you might know, they do eventually take on the Soviet Union, but in 1939 they get into a pact with the Soviet Union. And then in August you have the Germans, and this is really in preparation for, what you could guess is about to happen, for the all-out war that's about to happen the Germans don't want to fight the Soviets right out the gate, as we will see, and as you might know, they do eventually take on the Soviet Union, but in 1939 they get into a pact with the Soviet Union.", 'And so this is, the Germans sign the Molotov–Ribbentrop Pact with the Soviet Union, this is in August, which is essentially mutual non-aggression And so this is, they sign the Molotov–Ribbentrop Pact with the Soviet Union, this is in August, which is essentially mutual non-aggression "Hey, you know, you do what you need to do, we know what we need to do.', 'I\'m sure I\'m mispronouncing, and you also have the takeover of the Sudetenland in Czechoslovakia. So the Anschluss was the unification with Austria and then you have the Germans taking over the of Sudetenland in Czechoslovakia and this is kind of the famous, you know, the rest of the, what will be called the Allied Powers kind of say, "Okay, yeah,', '"Hey, you know, you do what you need to do, we know what we need to do." " and they secretly started saying "Okay were gonna, all the countries out here, we\'re going to create these spheres of influence where Germany can take, uh, control of part of it and the Soviet Union, and Stalin is in charge of the Soviet Union at this point, can take over other parts of it.', 'you already have Asia in the Second Sino-Japanese War, incredibly bloody war, and now you have kind of, a lot of very similar actors that you had in you already have Asia in the Second Sino-Japanese War, incredibly bloody war, and now you have kind of, a lot of very similar actors that you had in']), ('questions', ['On what date did Germany invade Poland?', 'What are the three countries that Czechoslovakia is taken over by Germany in 1938?', 'When did Stalin invade Poland?', 'When did the Germans get into a pact with the Soviets?', 'When is the Germans signing the Molotov-Ribbentrop Pact?', 'Who took over Sudetenland in Czechoslovakia?', 'Who is in charge of the Soviet Union at this point?', 'What country had a lot of similar actors in the Second Sino-Japanese War?']), ('answers', ['September 1st', 'Austria, Austria and the Sudetenland', 'mid-September', '1939', 'August', 'Germans', 'Stalin', 'Asia']), ('options', [['October 1st', 'September 21st', 'September 11th'], ['Czechoslovakia, the Baltic states and Poland', 'Poland, Poland and the Baltic states', 'Germany, the Sudetenland and Austria'], ['early September', 'mid-June', 'early June'], ['1941'], ['April', 'July', 'September'], ['Czechs', 'Soviets', 'Slovaks'], ['Molotov', 'Yakovlev', 'Khrushchev'], ['Japan', 'China', 'America']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:10.633035
ERROR:root:api_check 0:00:00.336317
ERROR:root:payload: 'World War II was the largest conflict in all of human history. The largest and bloodiest conflict And so you can imagine it is quite complex My goal in this video is to start giving us a survey, an overview of the war. And I won\'t even be able to cover it all in this video. It is really just a think about how did things get started. Or what happened in the lead up? And to start I am actually going to focus on Asia and the Pacific. Which probably doesn\'t get enough attention when we look at it from a western point of view But if we go back even to the early 1900s. Japan is becoming more and more militaristic. More and more nationalistic. In the early 1900s it had already occupied... It had already occupied Korea as of 1910. and in 1931 it invades Manchuria. It invades Manchuria. So this right over here, this is in 1931. And it installs a puppet state, the puppet state of Manchukuo. And when we call something a puppet state, it means that there is a government there. And they kind of pretend to be in charge. But they\'re really controlled like a puppet by someone else. And in this case it is the Empire of Japan. And we do remember what is happening in China in the 1930s. China is embroiled in a civil war. So there is a civil war going on in China. And that civil war is between the Nationalists, the Kuomintang and the Communists versus the Communists The Communists led by Mao Zedong. The Kuomintang led by general Chiang Kai-shek. And so they\'re in the midst of the civil war. So you can imagine Imperial Japan is taking advantage of this to take more and more control over parts of China And that continues through the 30s until we get to 1937. And in 1937 the Japanese use some pretext with, you know, kind of a false flag, kind of... well, I won\'t go into the depths of what started it kind of this Marco-Polo Bridge Incident But it uses that as justifications to kind of have an all-out war with China so 1937...you have all-out war and this is often referred to as the Second Sino-Japanese War ...Sino-Japanese War Many historians actually would even consider this the beginning of World War II. While, some of them say, ok this is the beginning of the Asian Theater of World War II of the all-out war between Japan and China, but it isn\'t until Germany invades Poland in 1939 that you truly have the formal beginning, so to speak, of World War II. Regardless of whether you consider this the formal beginning or not, the Second Sino-Japanese War, and it\'s called the second because there was another Sino-Japanese War in the late 1800s that was called the First Sino-Japanese War, this is incredibly, incredibly brutal and incredibly bloody a lot of civilians affected we could do a whole series of videos just on that But at this point it does become all-out war and this causes the civil war to take a back seat to fighting off the aggressor of Japan in 1937. So that lays a foundation for what\'s happening in The Pacific, in the run-up to World War II. And now let\'s also remind ourselves what\'s happening... what\'s happening in Europe. As we go through the 1930s Hitler\'s Germany, the Nazi Party, is getting more and more militaristic. So this is Nazi Germany... Nazi Germany right over here. They\'re allied with Benito Mussolini\'s Italy. They\'re both extremely nationalistic; they both do not like the Communists, at all You might remember, that in 1938... 1938, you have the Anschluss, which I\'m sure I\'m mispronouncing, and you also have the takeover of the Sudetenland in Czechoslovakia. So the Anschluss was the unification with Austria and then you have the Germans taking over the of Sudetenland in Czechoslovakia and this is kind of the famous, you know, the rest of the, what will be called the Allied Powers kind of say, "Okay, yeah, okay maybe Hitler\'s just going to just do that... well we don\'t want to start another war. We still all remember World War I; it was really horrible. And so they kind of appease Hitler and he\'s able to, kind of, satisfy his aggression. so in 1938 you have Austria, Austria and the Sudetenland ...and the Sudetenland... are taken over, are taken over by Germany and then as you go into 1939, as you go into 1939 in March they\'re able to take over all of Czechoslovakia they\'re able to take over all of Czechoslovakia and once again the Allies are kind of, they\'re feeling very uncomfortable, they kind of, have seen something like this before they would like to push back, but they still are, kind of, are not feeling good about starting another World War so they\'re hoping that maybe Germany stops there.'
ERROR:root:orig input: 'World War II was the largest conflict in all of human history. The largest and bloodiest conflict And so you can imagine it is quite complex My goal in this video is to start giving us a survey, an overview of the war. And I won\'t even be able to cover it all in this video. It is really just a think about how did things get started. Or what happened in the lead up? And to start I am actually going to focus on Asia and the Pacific. Which probably doesn\'t get enough attention when we look at it from a western point of view But if we go back even to the early 1900s. Japan is becoming more and more militaristic. More and more nationalistic. In the early 1900s it had already occupied... It had already occupied Korea as of 1910. and in 1931 it invades Manchuria. It invades Manchuria. So this right over here, this is in 1931. And it installs a puppet state, the puppet state of Manchukuo. And when we call something a puppet state, it means that there is a government there. And they kind of pretend to be in charge. But they\'re really controlled like a puppet by someone else. And in this case it is the Empire of Japan. And we do remember what is happening in China in the 1930s. China is embroiled in a civil war. So there is a civil war going on in China. And that civil war is between the Nationalists, the Kuomintang and the Communists versus the Communists The Communists led by Mao Zedong. The Kuomintang led by general Chiang Kai-shek. And so they\'re in the midst of the civil war. So you can imagine Imperial Japan is taking advantage of this to take more and more control over parts of China And that continues through the 30s until we get to 1937. And in 1937 the Japanese use some pretext with, you know, kind of a false flag, kind of... well, I won\'t go into the depths of what started it kind of this Marco-Polo Bridge Incident But it uses that as justifications to kind of have an all-out war with China so 1937...you have all-out war and this is often referred to as the Second Sino-Japanese War ...Sino-Japanese War Many historians actually would even consider this the beginning of World War II. While, some of them say, ok this is the beginning of the Asian Theater of World War II of the all-out war between Japan and China, but it isn\'t until Germany invades Poland in 1939 that you truly have the formal beginning, so to speak, of World War II. Regardless of whether you consider this the formal beginning or not, the Second Sino-Japanese War, and it\'s called the second because there was another Sino-Japanese War in the late 1800s that was called the First Sino-Japanese War, this is incredibly, incredibly brutal and incredibly bloody a lot of civilians affected we could do a whole series of videos just on that But at this point it does become all-out war and this causes the civil war to take a back seat to fighting off the aggressor of Japan in 1937. So that lays a foundation for what\'s happening in The Pacific, in the run-up to World War II. And now let\'s also remind ourselves what\'s happening... what\'s happening in Europe. As we go through the 1930s Hitler\'s Germany, the Nazi Party, is getting more and more militaristic. So this is Nazi Germany... Nazi Germany right over here. They\'re allied with Benito Mussolini\'s Italy. They\'re both extremely nationalistic; they both do not like the Communists, at all You might remember, that in 1938... 1938, you have the Anschluss, which I\'m sure I\'m mispronouncing, and you also have the takeover of the Sudetenland in Czechoslovakia. So the Anschluss was the unification with Austria and then you have the Germans taking over the of Sudetenland in Czechoslovakia and this is kind of the famous, you know, the rest of the, what will be called the Allied Powers kind of say, "Okay, yeah, okay maybe Hitler\'s just going to just do that... well we don\'t want to start another war. We still all remember World War I; it was really horrible. And so they kind of appease Hitler and he\'s able to, kind of, satisfy his aggression. so in 1938 you have Austria, Austria and the Sudetenland ...and the Sudetenland... are taken over, are taken over by Germany and then as you go into 1939, as you go into 1939 in March they\'re able to take over all of Czechoslovakia they\'re able to take over all of Czechoslovakia and once again the Allies are kind of, they\'re feeling very uncomfortable, they kind of, have seen something like this before they would like to push back, but they still are, kind of, are not feeling good about starting another World War so they\'re hoping that maybe Germany stops there.'
ERROR:root:orig selected_specific len[[["so in 1938 you have Austria, Austria and the Sudetenland ...and the Sudetenland... are taken over, are taken over by Germany and then as you go into 1939, as you go into 1939 in March they're able to take over all of Czechoslovakia",{},56],["While, some of them say, ok this is the beginning of the Asian Theater of World War II of the all-out war between Japan and China, but it isn't until Germany invades Poland in 1939 that you truly have the formal beginning, so to speak, of World War II.",{},36],["Regardless of whether you consider this the formal beginning or not, the Second Sino-Japanese War, and it's called the second because there was another Sino-Japanese War in the late 1800s that was called the First Sino-Japanese War",{},37],["So the Anschluss was the unification with Austria and then you have the Germans taking over the of Sudetenland in Czechoslovakia and this is kind of the famous, you know, the rest of the, what will be called the Allied Powers kind of say, \"Okay, yeah,",{},50]],["World War II was the largest conflict in all of human history.","The largest and bloodiest conflict","And so you can imagine it is quite complex","My goal in this video is to start giving us a survey, an overview of the war.","And I won't even be able to cover it all in this video.","It is really just a think about how did things get started.","Or what happened in the lead up?","And to start I am actually going to focus on Asia and the Pacific.","Which probably doesn't get enough attention when we look at it from a western point of view","But if we go back even to the early 1900s.","Japan is becoming more and more militaristic.","More and more nationalistic.","In the early 1900s Japan had already occupied...","Japan had already occupied Korea as of 1910.","and in 1931 Japan invades Manchuria.","Japan invades Manchuria.","So this right over here, this is in 1931.","And Japan installs a puppet state, the puppet state of Manchukuo.","And when we call something a puppet state, Japan means that there is a government there.","And they kind of pretend to be in charge.","But they're really controlled like a puppet by someone else.","And in this case it is the Empire of Japan.","And we do remember what is happening in China in the 1930s.","China is embroiled in a civil war.","So there is a civil war going on in China.","And that civil war is between the Nationalists, the Kuomintang and the Communists versus the Communists","The Communists led by Mao Zedong.","The Kuomintang led by general Chiang Kai-shek.","And so Kuomintang're in the midst of the civil war.","So you can imagine Imperial Japan is taking advantage of this to take more and more control over parts of China","And that continues through the 30s until we get to 1937.","And in 1937 the Japanese use some pretext with, you know, kind of a false flag, kind of...","well, I won't go into the depths of what started it kind of this Marco-Polo Bridge Incident","But it uses that as justifications to kind of have an all-out war with China so 1937...you have all-out war and this is often referred to as the Second Sino-Japanese War ...","Sino-Japanese War","Many historians actually would even consider this the beginning of World War II.","While, some of Many historians say, ok this is the beginning of the Asian Theater of World War II of the all-out war between Japan and China, but it isn't until Germany invades Poland in 1939 that you truly have the formal beginning, so to speak, of World War II.","Regardless of whether you consider this the formal beginning or not, the Second Sino-Japanese War, and it's called the second because there was another Sino-Japanese War in the late 1800s that was called the First Sino-Japanese War",", this is incredibly, incredibly brutal and incredibly bloody a lot of civilians affected we could do a whole series of videos just on that","But at this point it does become all-out war and this causes the civil war to take a back seat to fighting off the aggressor of Japan in 1937.","So that lays a foundation for what's happening in The Pacific, in the run-up to World War II.","And now let's also remind ourselves what's happening...","what's happening in Europe.","As we go through the 1930s Hitler's Germany, the Nazi Party, is getting more and more militaristic.","So this is Nazi Germany...","Nazi Germany right over here.","Nazi Germany right over here're","allied with Benito Mussolini's Italy.","Nazi Germany right over here're","both extremely nationalistic; Nazi Germany right over here both do not like the Communists, at all You might remember, that in 1938...","1938, you have the Anschluss, which","I'm sure I'm mispronouncing, and you also have the takeover of the Sudetenland in Czechoslovakia.","So the Anschluss was the unification with Austria and then you have the Germans taking over the of Sudetenland in Czechoslovakia and this is kind of the famous, you know, the rest of the, what will be called the Allied Powers kind of say, \"Okay, yeah,","okay maybe Hitler's just going to just do that...","well we don't want to start another war.","We still all remember World War I; it was really horrible.","And so they kind of appease Hitler and Hitler's able to, kind of, satisfy Hitler's aggression.","so in 1938 you have Austria, Austria and the Sudetenland ...and the Sudetenland... are taken over, are taken over by Germany and then as you go into 1939, as you go into 1939 in March they're able to take over all of Czechoslovakia","they're able to take over all of Czechoslovakia and once again the Allies are kind of",", they're feeling very uncomfortable, they kind of, have seen something like this before they would like to push back, but they still are, kind of, are not feeling good about starting another World War","so they're hoping that maybe Germany stops there."]]
ERROR:root:orig selected_specific len4
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents4
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ["We still all remember World War I; it was really horrible. so in 1938 you have Austria, Austria and the Sudetenland ...and the Sudetenland... are taken over, are taken over by Germany and then as you go into 1939, as you go into 1939 in March they're able to take over all of Czechoslovakia", "Many historians actually would even consider this the beginning of World War II. While, some of them say, ok this is the beginning of the Asian Theater of World War II of the all-out war between Japan and China, but it isn't until Germany invades Poland in 1939 that you truly have the formal beginning, so to speak, of World War II.", "While, some of Many historians say, ok this is the beginning of the Asian Theater of World War II of the all-out war between Japan and China, but it isn't until Germany invades Poland in 1939 that you truly have the formal beginning, so to speak, of World War II. Regardless of whether you consider this the formal beginning or not, the Second Sino-Japanese War, and it's called the second because there was another Sino-Japanese War in the late 1800s that was called the First Sino-Japanese War", 'both extremely nationalistic; Nazi Germany right over here both do not like the Communists, at all You might remember, that in 1938... So the Anschluss was the unification with Austria and then you have the Germans taking over the of Sudetenland in Czechoslovakia and this is kind of the famous, you know, the rest of the, what will be called the Allied Powers kind of say, "Okay, yeah,']), ('questions', ['Which countries take over Czechoslovakia?', 'When did Germany invade Poland?', 'What is the name of the war that began in the late 1800s?', 'Who took over Sudetenland?']), ('answers', ['Austria, Austria and the Sudetenland', '1939', 'the Second Sino-Japanese War', 'Germans']), ('options', [['Germany, Italy and the Third Reich', 'Poland, Hungary and the Magyar Autonomous Region', 'Czechoslovakia, Yugoslavia and the Warsaw Pact'], ['1765', '1795'], ['the Vietnam War', 'World War I', 'the Korean War'], ['Czechs', 'Slovaks', 'Austrians']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:10.956510
ERROR:root:api_check 0:00:00.394721
ERROR:root:payload: "There were independent states and communities, as well. Indigenous Americans, escaped enslaved people, and others lived and governed at the edges of colonial control. In North America, the Iroquois Confederacy claimed territory from Canada to Kentucky. In other places, smaller communities and tribes governed themselves in ways that rejected and resisted colonial hierarchies, or levels of power.\nEuropean states didn't build empires thousands of miles away from London, Paris, and Madrid for no reason. Like any big business, these empires were expensive. European rulers sent administrators, soldiers, and sailors to their colonies to expand and maintain control. These armies and navies fought wars against Indigenous Americans and against other Europeans.\nEuropean governments were willing to pay this price in blood and gold because their colonies were hugely profitable. American resources and labor made Western European countries economic powerhouses.\nThe resources, labor, and markets of the Americas reshaped life in Afro-Eurasia. American food crops, like potatoes and corn, allowed Europe, Africa, and China to expand their populations. Raw materials from the Americas—such as sugar, fur, cotton, and timber—allowed European workshops to manufacture consumer goods and build huge navies.\nWith the resources of the Americas, Europeans produced more goods and fed more people. But they needed someone to buy the fur hats, furniture, and finery made in European workshops. Luckily for European producers, European governments controlled access to millions of consumers in their colonies. Colonial governments restricted trade with other European powers and limited production in the colonies. For example, in the eighteenth century, the British Parliament passed laws that limited the production and export of hats and iron goods from their American colonies. Notice they didn't stop them from sending fur and actual iron, though. Laws like these forced colonists to export raw materials to England while importing consumer goods from English manufacturers. It was like picking tomatoes and lettuce from the garden, then having to buy salad from the only country allowed to chop it up."
ERROR:root:orig input: "There were independent states and communities, as well. Indigenous Americans, escaped enslaved people, and others lived and governed at the edges of colonial control. In North America, the Iroquois Confederacy claimed territory from Canada to Kentucky. In other places, smaller communities and tribes governed themselves in ways that rejected and resisted colonial hierarchies, or levels of power.\r\nEuropean states didn't build empires thousands of miles away from London, Paris, and Madrid for no reason. Like any big business, these empires were expensive. European rulers sent administrators, soldiers, and sailors to their colonies to expand and maintain control. These armies and navies fought wars against Indigenous Americans and against other Europeans.\r\nEuropean governments were willing to pay this price in blood and gold because their colonies were hugely profitable. American resources and labor made Western European countries economic powerhouses.\r\nThe resources, labor, and markets of the Americas reshaped life in Afro-Eurasia. American food crops, like potatoes and corn, allowed Europe, Africa, and China to expand their populations. Raw materials from the Americas—such as sugar, fur, cotton, and timber—allowed European workshops to manufacture consumer goods and build huge navies.\r\nWith the resources of the Americas, Europeans produced more goods and fed more people. But they needed someone to buy the fur hats, furniture, and finery made in European workshops. Luckily for European producers, European governments controlled access to millions of consumers in their colonies. Colonial governments restricted trade with other European powers and limited production in the colonies. For example, in the eighteenth century, the British Parliament passed laws that limited the production and export of hats and iron goods from their American colonies. Notice they didn't stop them from sending fur and actual iron, though. Laws like these forced colonists to export raw materials to England while importing consumer goods from English manufacturers. It was like picking tomatoes and lettuce from the garden, then having to buy salad from the only country allowed to chop it up."
ERROR:root:orig selected_specific len[[["It was like picking tomatoes and lettuce from the garden, then having to buy salad from the only country allowed to chop it up.",{},20],["In North America, the Iroquois Confederacy claimed territory from Canada to Kentucky.",{},2],["American food crops, like potatoes and corn, allowed Europe, Africa, and China to expand their populations.",{},11],["Raw materials from the Americas—such as sugar, fur, cotton, and timber—allowed European workshops to manufacture consumer goods and build huge navies.",{},12],["Indigenous Americans, escaped enslaved people, and others lived and governed at the edges of colonial control.",{},1],["For example, in the eighteenth century, the British Parliament passed laws that limited the production and export of hats and iron goods from their American colonies.",{},17]],["There were independent states and communities, as well.","Indigenous Americans, escaped enslaved people, and others lived and governed at the edges of colonial control.","In North America, the Iroquois Confederacy claimed territory from Canada to Kentucky.","In other places, smaller communities and tribes governed themselves in ways that rejected and resisted colonial hierarchies, or levels of power.","European states didn't build empires thousands of miles away from London, Paris, and Madrid for no reason.","Like any big business, these empires were expensive.","European rulers sent administrators, soldiers, and sailors to their colonies to expand and maintain control.","These armies and navies fought wars against Indigenous Americans and against other Europeans.","European governments were willing to pay this price in blood and gold because their colonies were hugely profitable.","American resources and labor made Western European countries economic powerhouses.","The resources, labor, and markets of the Americas reshaped life in Afro-Eurasia.","American food crops, like potatoes and corn, allowed Europe, Africa, and China to expand their populations.","Raw materials from the Americas—such as sugar, fur, cotton, and timber—allowed European workshops to manufacture consumer goods and build huge navies.","With the resources of the Americas, Europeans produced more goods and fed more people.","But Europeans needed someone to buy the fur hats, furniture, and finery made in European workshops.","Luckily for European producers, European governments controlled access to millions of consumers in their colonies.","Colonial governments restricted trade with other European powers and limited production in the colonies.","For example, in the eighteenth century, the British Parliament passed laws that limited the production and export of hats and iron goods from their American colonies.","Notice they didn't stop them from sending fur and actual iron, though.","Laws like these forced colonists to export raw materials to England while importing consumer goods from English manufacturers.","It was like picking tomatoes and lettuce from the garden, then having to buy salad from the only country allowed to chop it up."]]
ERROR:root:orig selected_specific len6
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents6
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Laws like these forced colonists to export raw materials to England while importing consumer goods from English manufacturers. It was like picking tomatoes and lettuce from the garden, then having to buy salad from the only country allowed to chop it up.', 'Indigenous Americans, escaped enslaved people, and others lived and governed at the edges of colonial control. In North America, the Iroquois Confederacy claimed territory from Canada to Kentucky.', 'The resources, labor, and markets of the Americas reshaped life in Afro-Eurasia. American food crops, like potatoes and corn, allowed Europe, Africa, and China to expand their populations.', 'American food crops, like potatoes and corn, allowed Europe, Africa, and China to expand their populations. Raw materials from the Americas—such as sugar, fur, cotton, and timber—allowed European workshops to manufacture consumer goods and build huge navies.', 'There were independent states and communities, as well. Indigenous Americans, escaped enslaved people, and others lived and governed at the edges of colonial control.', 'Colonial governments restricted trade with other European powers and limited production in the colonies. For example, in the eighteenth century, the British Parliament passed laws that limited the production and export of hats and iron goods from their American colonies.']), ('questions', ['What was the English equivalent of exporting raw materials to England?', 'Where did the Iroquois claim territory in North America?', 'What crops were grown in the Americas?', 'What did the raw materials from the Americas allow to build large naval ships?', 'What did the indigenous people escape?', 'What body passed laws that restricted the production of iron goods from the colonies?']), ('answers', ['picking tomatoes and lettuce from the garden', 'Canada to Kentucky', 'potatoes and corn', 'European workshops', 'enslaved people', 'British Parliament']), ('options', [['collecting wood from the forest', 'plowing the fields', 'raising cattle'], ['New York to Texas', 'Ohio to California', 'Louisiana to Maine'], ['maize and beans', 'cotton and tobacco', 'wheat and rye'], ['Native American iron workers', 'Native American carpenters', 'European sail makers'], ['an earthquake', 'a volcano', 'the Spanish flu'], ['Virginia House of Burgesses', 'American Continental Congress', 'King George III']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:13.180720
ERROR:root:api_check 0:00:55.724947
ERROR:root:payload: "After the first 150 years of Mughal rule, under Emperors Jahangir and Shah Jahan, nobles became increasingly rich, emboldened by larger armies, and able to challenge the weak center in Delhi. Then, around 1700, the Mughal state reached the limits of territorial growth. When the state ran out of land, it was a lot like running out of money, since awarding land was how they bought the mansabdars' loyalty. Meanwhile, the mansabdars had grown extremely powerful. Imagine feeding your pet tiger kitten delicious meat until it grows to 500 pounds, then running out of meat. As the number of nobles, bureaucrats, and military commanders grew, the state feared those elites, some of whom could now maintain massive armies of 40,000 to 60,000. Factions rose and battles over succession for the imperial throne created political instability.\nTwo more problems that emerged were the decline of religious tolerance and an era of continuous war in the late seventeenth century. The vast Mughal state had benefitted, both financially and culturally, from generations of leaders who were practical and tolerant with their diverse subjects. Then came Emperor Aurangzeb, a religious and military zealot. After taking power in 1658, he spent most of his 49 years of rule conquering territories, amassing armies, violently suppressing rebellions, and brutally punishing his enemies, both Hindu and Muslim. Peace was rare in these times. Millions died in combat, and millions more civilians died from drought, plague, and famine during these wars.\nIt was unfortunate timing for the Mughals, but this was right when some well-armed foreign powers began to put increased pressure on the state."
ERROR:root:orig input: "After the first 150 years of Mughal rule, under Emperors Jahangir and Shah Jahan, nobles became increasingly rich, emboldened by larger armies, and able to challenge the weak center in Delhi. Then, around 1700, the Mughal state reached the limits of territorial growth. When the state ran out of land, it was a lot like running out of money, since awarding land was how they bought the mansabdars' loyalty. Meanwhile, the mansabdars had grown extremely powerful. Imagine feeding your pet tiger kitten delicious meat until it grows to 500 pounds, then running out of meat. As the number of nobles, bureaucrats, and military commanders grew, the state feared those elites, some of whom could now maintain massive armies of 40,000 to 60,000. Factions rose and battles over succession for the imperial throne created political instability.\r\nTwo more problems that emerged were the decline of religious tolerance and an era of continuous war in the late seventeenth century. The vast Mughal state had benefitted, both financially and culturally, from generations of leaders who were practical and tolerant with their diverse subjects. Then came Emperor Aurangzeb, a religious and military zealot. After taking power in 1658, he spent most of his 49 years of rule conquering territories, amassing armies, violently suppressing rebellions, and brutally punishing his enemies, both Hindu and Muslim. Peace was rare in these times. Millions died in combat, and millions more civilians died from drought, plague, and famine during these wars.\r\nIt was unfortunate timing for the Mughals, but this was right when some well-armed foreign powers began to put increased pressure on the state."
ERROR:root:orig selected_specific len[[["Imagine feeding your pet tiger kitten delicious meat until it grows to 500 pounds, then running out of meat.",{},4],["As the number of nobles, bureaucrats, and military commanders grew, the state feared those elites, some of whom could now maintain massive armies of 40,000 to 60,000.",{},5],["After taking power in 1658, he spent most of his 49 years of rule conquering territories, amassing armies, violently suppressing rebellions, and brutally punishing his enemies, both Hindu and Muslim.",{},10],["Millions died in combat, and millions more civilians died from drought, plague, and famine during these wars.",{},12],["After the first 150 years of Mughal rule, under Emperors Jahangir and Shah Jahan, nobles became increasingly rich, emboldened by larger armies, and able to challenge the weak center in Delhi.",{},0],["When the state ran out of land, it was a lot like running out of money, since awarding land was how they bought the mansabdars' loyalty.",{},2]],["After the first 150 years of Mughal rule, under Emperors Jahangir and Shah Jahan, nobles became increasingly rich, emboldened by larger armies, and able to challenge the weak center in Delhi.","Then, around 1700, the Mughal state reached the limits of territorial growth.","When the state ran out of land, it was a lot like running out of money, since awarding land was how they bought the mansabdars' loyalty.","Meanwhile, the mansabdars had grown extremely powerful.","Imagine feeding your pet tiger kitten delicious meat until it grows to 500 pounds, then running out of meat.","As the number of nobles, bureaucrats, and military commanders grew, the state feared those elites, some of whom could now maintain massive armies of 40,000 to 60,000.","Factions rose and battles over succession for the imperial throne created political instability.","Two more problems that emerged were the decline of religious tolerance and an era of continuous war in the late seventeenth century.","The vast Mughal state had benefitted, both financially and culturally, from generations of leaders who were practical and tolerant with Delhi's diverse subjects.","Then came Emperor Aurangzeb, a religious and military zealot.","After taking power in 1658, Emperor Aurangzeb, a religious and military zealot spent most of Emperor Aurangzeb, a religious and military zealot's 49 years of rule conquering territories, amassing armies, violently suppressing rebellions, and brutally punishing Emperor Aurangzeb, a religious and military zealot's enemies, both Hindu and Muslim.","Peace was rare in these times.","Millions died in combat, and millions more civilians died from drought, plague, and famine during these wars.","It was unfortunate timing for the Mughals, but this was right when some well-armed foreign powers began to put increased pressure on the state."]]
ERROR:root:orig selected_specific len6
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents6
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Meanwhile, the mansabdars had grown extremely powerful. Imagine feeding your pet tiger kitten delicious meat until it grows to 500 pounds, then running out of meat.', 'Imagine feeding your pet tiger kitten delicious meat until it grows to 500 pounds, then running out of meat. As the number of nobles, bureaucrats, and military commanders grew, the state feared those elites, some of whom could now maintain massive armies of 40,000 to 60,000.', 'Then came Emperor Aurangzeb, a religious and military zealot. After taking power in 1658, he spent most of his 49 years of rule conquering territories, amassing armies, violently suppressing rebellions, and brutally punishing his enemies, both Hindu and Muslim.', 'Peace was rare in these times. Millions died in combat, and millions more civilians died from drought, plague, and famine during these wars.', ' After the first 150 years of Mughal rule, under Emperors Jahangir and Shah Jahan, nobles became increasingly rich, emboldened by larger armies, and able to challenge the weak center in Delhi.', "Then, around 1700, the Mughal state reached the limits of territorial growth. When the state ran out of land, it was a lot like running out of money, since awarding land was how they bought the mansabdars' loyalty."]), ('questions', ['How much meat did a tiger kitten need to eat?', 'How large were the armies the elites had?', 'When did Aurangzeb take power?', 'How many people died in combat?', 'Which two rulers ruled the Mughal empire?', "How did the Mughals buy the mansabdars' loyalty?"]), ('answers', ['500 pounds', '40,000 to 60,000', '1658', 'Millions', 'Emperors Jahangir and Shah Jahan', 'awarding land']), ('options', [['25 pounds', '100 pounds', '1 pound'], ['20 to 30', '10,000 to 20,000', '1,000 to 5,000'], ['1707', '1652', '1670'], ["It's a myth", 'Thousands', 'Thousands of them died in a single day'], ['Emperor Aurangzeb and Emperor Muhammad Shah', 'Emperor Shah Jahan and Emperor Jehangir', 'Emperors Akbar and Jahangir'], ['giving them high-ranking positions in the government', 'threatening to kill them', 'paying them with money']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:13.481359
ERROR:root:api_check 0:00:00.358656
ERROR:root:payload: "BMW became an automobile manufacturer in 1928 when it purchased Fahrzeugfabrik Eisenach, which built Austin Sevens at that time under licence (under the Dixi marque).[4] The first car sold as a BMW was a rebadged Dixi called the BMW 3/15. Throughout the 1930s, BMW expanded its range into sports cars and larger luxury cars.\n\nAircraft engines, motorcycles, and automobiles would be BMW's main products until World War II. During the war, against the wishes of its director Franz Josef Popp, BMW concentrated on aircraft engine production, with motorcycles as a side line, and automobile manufacture stopped altogether. BMW's factories were heavily bombed during the war, and its remaining West German facilities were banned from producing motor vehicles or aircraft after the war. Again, the company survived by making pots, pans and bicycles. In 1948, BMW restarted motorcycle production. BMW resumed car production in Bavaria in 1952 with the BMW 501 luxury saloon. The range of cars was expanded in 1955, through the production of the cheaper Isetta microcar under licence. Slow sales of luxury cars and small profit margins from microcars meant BMW was in serious financial trouble, and in 1959, the company was nearly taken over by rival Daimler-Benz. A large investment in BMW by Herbert Quandt and Harald Quandt resulted in the company surviving as a separate entity.\n\nThe Quandt's father, Günther Quandt, was a well-known German industrialist. Quandt joined the Nazi party in 1933 and made a fortune arming the German Wehrmacht, manufacturing weapons and batteries.[5] Many of his enterprises had been appropriated from Jewish owners under duress and with minimal compensation. At least three of his enterprises made extensive use of slave laborers, as many as 50,000 in all.[6] One of his battery factories had its own on-site concentration camp, complete with gallows. Life expectancy for laborers was six months.[6] While the Quandt family and BMW were not directly connected during the war, funds amassed in the Nazi era by his father allowed Herbert Quandt to buy BMW.[7]\n\nThe BMW 700 was successful and assisted in the company's recovery.\n\nThe 1962 introduction of the BMW New Class compact sedans was the beginning of BMW's reputation as a leading manufacturer of sport-oriented cars. Throughout the 1960s, BMW expanded its range by adding coupe and luxury sedan models. The BMW 5 Series mid-size sedan range was introduced in 1972, followed by the BMW 3 Series compact sedans in 1975, the BMW 6 Series luxury coupes in 1976 and the BMW 7 Series large luxury sedans in 1978."
ERROR:root:orig input: "BMW became an automobile manufacturer in 1928 when it purchased Fahrzeugfabrik Eisenach, which built Austin Sevens at that time under licence (under the Dixi marque).[4] The first car sold as a BMW was a rebadged Dixi called the BMW 3/15. Throughout the 1930s, BMW expanded its range into sports cars and larger luxury cars.\r\n\r\nAircraft engines, motorcycles, and automobiles would be BMW's main products until World War II. During the war, against the wishes of its director Franz Josef Popp, BMW concentrated on aircraft engine production, with motorcycles as a side line, and automobile manufacture stopped altogether. BMW's factories were heavily bombed during the war, and its remaining West German facilities were banned from producing motor vehicles or aircraft after the war. Again, the company survived by making pots, pans and bicycles. In 1948, BMW restarted motorcycle production. BMW resumed car production in Bavaria in 1952 with the BMW 501 luxury saloon. The range of cars was expanded in 1955, through the production of the cheaper Isetta microcar under licence. Slow sales of luxury cars and small profit margins from microcars meant BMW was in serious financial trouble, and in 1959, the company was nearly taken over by rival Daimler-Benz. A large investment in BMW by Herbert Quandt and Harald Quandt resulted in the company surviving as a separate entity.\r\n\r\nThe Quandt's father, Günther Quandt, was a well-known German industrialist. Quandt joined the Nazi party in 1933 and made a fortune arming the German Wehrmacht, manufacturing weapons and batteries.[5] Many of his enterprises had been appropriated from Jewish owners under duress and with minimal compensation. At least three of his enterprises made extensive use of slave laborers, as many as 50,000 in all.[6] One of his battery factories had its own on-site concentration camp, complete with gallows. Life expectancy for laborers was six months.[6] While the Quandt family and BMW were not directly connected during the war, funds amassed in the Nazi era by his father allowed Herbert Quandt to buy BMW.[7]\r\n\r\nThe BMW 700 was successful and assisted in the company's recovery.\r\n\r\nThe 1962 introduction of the BMW New Class compact sedans was the beginning of BMW's reputation as a leading manufacturer of sport-oriented cars. Throughout the 1960s, BMW expanded its range by adding coupe and luxury sedan models. The BMW 5 Series mid-size sedan range was introduced in 1972, followed by the BMW 3 Series compact sedans in 1975, the BMW 6 Series luxury coupes in 1976 and the BMW 7 Series large luxury sedans in 1978."
ERROR:root:orig selected_specific len[[["The BMW 5 Series mid-size sedan range was introduced in 1972, followed by the BMW 3 Series compact sedans in 1975, the BMW 6 Series luxury coupes in 1976 and the BMW 7 Series large luxury sedans in 1978.",{},21],["BMW became an automobile manufacturer in 1928 when it purchased Fahrzeugfabrik Eisenach, which built Austin Sevens at that time under licence (under the Dixi marque).[4]",{},0],["The first car sold as a BMW was a rebadged Dixi called the BMW 3/15.",{},1],["BMW resumed car production in Bavaria in 1952 with the BMW 501 luxury saloon.",{},8],["While the Quandt family and BMW were not directly connected during the war, funds amassed in the Nazi era by his father allowed Herbert Quandt to buy BMW.[7]",{},17],["BMW's factories were heavily bombed during the war, and its remaining West German facilities were banned from producing motor vehicles or aircraft after the war.",{},5],["During the war, against the wishes of its director Franz Josef Popp, BMW concentrated on aircraft engine production, with motorcycles as a side line, and automobile manufacture stopped altogether.",{},4],["Slow sales of luxury cars and small profit margins from microcars meant BMW was in serious financial trouble, and in 1959, the company was nearly taken over by rival Daimler-Benz.",{},10],["The range of cars was expanded in 1955, through the production of the cheaper Isetta microcar under licence.",{},9],["Quandt joined the Nazi party in 1933 and made a fortune arming the German Wehrmacht, manufacturing weapons and batteries.[5] Many of his enterprises had been appropriated from Jewish owners under duress and with minimal compensation.",{},13],["The 1962 introduction of the BMW New Class compact sedans was the beginning of BMW's reputation as a leading manufacturer of sport-oriented cars.",{},19],["In 1948, BMW restarted motorcycle production.",{},7],["Throughout the 1960s, BMW expanded its range by adding coupe and luxury sedan models.",{},20],["One of his battery factories had its own on-site concentration camp, complete with gallows.",{},15],["Life expectancy for laborers was six months.[6]",{},16],["At least three of his enterprises made extensive use of slave laborers, as many as 50,000 in all.[6]",{},14],["Aircraft engines, motorcycles, and automobiles would be BMW's main products until World War II.",{},3],["Throughout the 1930s, BMW expanded its range into sports cars and larger luxury cars.",{},2],["The Quandt's father, Günther Quandt, was a well-known German industrialist.",{},12],["A large investment in BMW by Herbert Quandt and Harald Quandt resulted in the company surviving as a separate entity.",{},11]],["BMW became an automobile manufacturer in 1928 when it purchased Fahrzeugfabrik Eisenach, which built Austin Sevens at that time under licence (under the Dixi marque).[4]","The first car sold as a BMW was a rebadged Dixi called the BMW 3/15.","Throughout the 1930s, BMW expanded its range into sports cars and larger luxury cars.","Aircraft engines, motorcycles, and automobiles would be BMW's main products until World War II.","During the war, against the wishes of its director Franz Josef Popp, BMW concentrated on aircraft engine production, with motorcycles as a side line, and automobile manufacture stopped altogether.","BMW's factories were heavily bombed during the war, and its remaining West German facilities were banned from producing motor vehicles or aircraft after the war.","Again, the company survived by making pots, pans and bicycles.","In 1948, BMW restarted motorcycle production.","BMW resumed car production in Bavaria in 1952 with the BMW 501 luxury saloon.","The range of cars was expanded in 1955, through the production of the cheaper Isetta microcar under licence.","Slow sales of luxury cars and small profit margins from microcars meant BMW was in serious financial trouble, and in 1959, the company was nearly taken over by rival Daimler-Benz.","A large investment in BMW by Herbert Quandt and Harald Quandt resulted in the company surviving as a separate entity.","The Quandt's father, Günther Quandt, was a well-known German industrialist.","Quandt joined the Nazi party in 1933 and made a fortune arming the German Wehrmacht, manufacturing weapons and batteries.[5] Many of Herbert Quandt's enterprises had been appropriated from Jewish owners under duress and with minimal compensation.","At least three of Herbert Quandt's enterprises made extensive use of slave laborers, as many as 50,000 in all.[6]","One of Herbert Quandt's battery factories had its own on-site concentration camp, complete with gallows.","Life expectancy for laborers was six months.[6]","While the Quandt family and BMW were not directly connected during the war, funds amassed in the Nazi era by his father allowed Herbert Quandt to buy BMW.[7]","The BMW 700 was successful and assisted in the company's recovery.","The 1962 introduction of the BMW New Class compact sedans was the beginning of BMW's reputation as a leading manufacturer of sport-oriented cars.","Throughout the 1960s, BMW expanded its range by adding coupe and luxury sedan models.","The BMW 5 Series mid-size sedan range was introduced in 1972, followed by the BMW 3 Series compact sedans in 1975, the BMW 6 Series luxury coupes in 1976 and the BMW 7 Series large luxury sedans in 1978."]]
ERROR:root:orig selected_specific len20
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000828
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents10
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['Throughout the 1960s, BMW expanded its range by adding coupe and luxury sedan models. The BMW 5 Series mid-size sedan range was introduced in 1972, followed by the BMW 3 Series compact sedans in 1975, the BMW 6 Series luxury coupes in 1976 and the BMW 7 Series large luxury sedans in 1978.', ' BMW became an automobile manufacturer in 1928 when it purchased Fahrzeugfabrik Eisenach, which built Austin Sevens at that time under licence (under the Dixi marque).[4]', 'BMW became an automobile manufacturer in 1928 when it purchased Fahrzeugfabrik Eisenach, which built Austin Sevens at that time under licence (under the Dixi marque).[4] The first car sold as a BMW was a rebadged Dixi called the BMW 3/15.', 'In 1948, BMW restarted motorcycle production. BMW resumed car production in Bavaria in 1952 with the BMW 501 luxury saloon.', 'Life expectancy for laborers was six months.[6] While the Quandt family and BMW were not directly connected during the war, funds amassed in the Nazi era by his father allowed Herbert Quandt to buy BMW.[7]', "During the war, against the wishes of its director Franz Josef Popp, BMW concentrated on aircraft engine production, with motorcycles as a side line, and automobile manufacture stopped altogether. BMW's factories were heavily bombed during the war, and its remaining West German facilities were banned from producing motor vehicles or aircraft after the war.", "Aircraft engines, motorcycles, and automobiles would be BMW's main products until World War II. During the war, against the wishes of its director Franz Josef Popp, BMW concentrated on aircraft engine production, with motorcycles as a side line, and automobile manufacture stopped altogether.", 'The range of cars was expanded in 1955, through the production of the cheaper Isetta microcar under licence. Slow sales of luxury cars and small profit margins from microcars meant BMW was in serious financial trouble, and in 1959, the company was nearly taken over by rival Daimler-Benz.', 'BMW resumed car production in Bavaria in 1952 with the BMW 501 luxury saloon. The range of cars was expanded in 1955, through the production of the cheaper Isetta microcar under licence.', "The Quandt's father, Günther Quandt, was a well-known German industrialist. Quandt joined the Nazi party in 1933 and made a fortune arming the German Wehrmacht, manufacturing weapons and batteries.[5] Many of his enterprises had been appropriated from Jewish owners under duress and with minimal compensation."]), ('questions', ['What mid-size sedan was introduced in 1972?', 'When did BMW become an automobile manufacturer?', 'What was the name of the first BMW sold as a Dixi?', 'In what year did BMW resume its motorcycle production?', 'Who bought BMW in the Nazi era?', 'What was heavily bombed during the war?', "Who was BMW's director during the war?", 'In what year did Daimler-Benz take over BMW?', 'When was the Isetta microcar under licence produced?', 'When did Quandt join the Nazis?']), ('answers', ['BMW 5 Series', '1928', 'BMW 3/15', '1952', 'Herbert Quandt', "BMW's factories", 'Franz Josef Popp', '1959', '1955', '1933']), ('options', [['Plymouth Valiant', 'Datsun 710', 'Ford Pinto'], ['1905', '1885', '1889'], ['BMW 5/18', 'BMW 3/18', 'BMW 5/15'], ['1981', '1951'], ['Hermann Kuhr', "BMW's first sales manager", 'The Quandt family'], ['The Gestapo headquarters', 'The German rail network', 'The Reichstag'], ['Erich Raeder', 'Werner von Siemens', 'Albert Einstein'], ['1981', '1953', '1957'], ['1952', '1962', '1911'], ['1929', '1938', '1942']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Throughout the 1960s, BMW expanded its range by adding coupe and luxury sedan models. The BMW 5 Series mid-size sedan range was introduced in 1972, followed by the BMW 3 Series compact sedans in 1975, the BMW 6 Series luxury coupes in 1976 and the BMW 7 Series large luxury sedans in 1978.', ' BMW became an automobile manufacturer in 1928 when it purchased Fahrzeugfabrik Eisenach, which built Austin Sevens at that time under licence (under the Dixi marque).[4]', 'BMW became an automobile manufacturer in 1928 when it purchased Fahrzeugfabrik Eisenach, which built Austin Sevens at that time under licence (under the Dixi marque).[4] The first car sold as a BMW was a rebadged Dixi called the BMW 3/15.', 'In 1948, BMW restarted motorcycle production. BMW resumed car production in Bavaria in 1952 with the BMW 501 luxury saloon.', 'Life expectancy for laborers was six months.[6] While the Quandt family and BMW were not directly connected during the war, funds amassed in the Nazi era by his father allowed Herbert Quandt to buy BMW.[7]', "During the war, against the wishes of its director Franz Josef Popp, BMW concentrated on aircraft engine production, with motorcycles as a side line, and automobile manufacture stopped altogether. BMW's factories were heavily bombed during the war, and its remaining West German facilities were banned from producing motor vehicles or aircraft after the war.", "Aircraft engines, motorcycles, and automobiles would be BMW's main products until World War II. During the war, against the wishes of its director Franz Josef Popp, BMW concentrated on aircraft engine production, with motorcycles as a side line, and automobile manufacture stopped altogether.", 'The range of cars was expanded in 1955, through the production of the cheaper Isetta microcar under licence. Slow sales of luxury cars and small profit margins from microcars meant BMW was in serious financial trouble, and in 1959, the company was nearly taken over by rival Daimler-Benz.', 'BMW resumed car production in Bavaria in 1952 with the BMW 501 luxury saloon. The range of cars was expanded in 1955, through the production of the cheaper Isetta microcar under licence.', "The Quandt's father, Günther Quandt, was a well-known German industrialist. Quandt joined the Nazi party in 1933 and made a fortune arming the German Wehrmacht, manufacturing weapons and batteries.[5] Many of his enterprises had been appropriated from Jewish owners under duress and with minimal compensation."]), ('questions', ['What mid-size sedan was introduced in 1972?', 'When did BMW become an automobile manufacturer?', 'What was the name of the first BMW sold as a Dixi?', 'In what year did BMW resume its motorcycle production?', 'Who bought BMW in the Nazi era?', 'What was heavily bombed during the war?', "Who was BMW's director during the war?", 'In what year did Daimler-Benz take over BMW?', 'When was the Isetta microcar under licence produced?', 'When did Quandt join the Nazis?']), ('answers', ['BMW 5 Series', '1928', 'BMW 3/15', '1952', 'Herbert Quandt', "BMW's factories", 'Franz Josef Popp', '1959', '1955', '1933']), ('options', [['Plymouth Valiant', 'Datsun 710', 'Ford Pinto'], ['1905', '1885', '1889'], ['BMW 5/18', 'BMW 3/18', 'BMW 5/15'], ['1981', '1951'], ['Hermann Kuhr', "BMW's first sales manager", 'The Quandt family'], ['The Gestapo headquarters', 'The German rail network', 'The Reichstag'], ['Erich Raeder', 'Werner von Siemens', 'Albert Einstein'], ['1981', '1953', '1957'], ['1952', '1962', '1911'], ['1929', '1938', '1942']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:20.125611
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.374706
ERROR:root:payload: "Lovie Smith, hired on January 15, 2004, is the third post-Ditka head coach. Joining the Bears as a rookie head coach, Smith brought the highly successful Tampa 2 defensive scheme with him to Chicago. Before his second season with the Bears, the team rehired their former offensive coordinator and then Illinois head coach Ron Turner to improve the Bears' struggling offense.[40] In 2005, the Bears won their division and reached the playoffs for the first time in four years. Their previous playoff berth was earned by winning the NFC Central in 2001. The Bears improved upon their success the following season, by clinching their second consecutive NFC North title during Week 13 of the 2006 season, winning their first playoff game since 1995, and earning a trip to Super Bowl XLI.[41] However, they fell short of the championship, losing 29–17 to the Indianapolis Colts. Following the 2006 season, the club decided to give Smith a contract extension through 2011, at roughly $5 million per year. This comes a season after being the lowest-paid head coach in the National Football League.[42]\n\nThe club has played in over a thousand games since becoming a charter member of the NFL in 1920. Through the 2010 season, they led the NFL in overall franchise wins with 704 and had an overall record of 704–512–42 (going 687–494–42 during the regular season and 17–18 in the playoffs).[43] On November 18, 2010, the Bears recorded franchise win number 700 in a win against the Miami Dolphins.\nThe Bears made one of the biggest trades in team history by acquiring Pro Bowl quarterback Jay Cutler in 2009\n\nThe Bears made one of the biggest trades in franchise history, acquiring Pro Bowl quarterback Jay Cutler from the Denver Broncos in exchange for Kyle Orton and draft picks on April 2, 2009. After a disappointing 2009 campaign with the team going 7–9,[44] Mike Martz was hired as the team's offensive coordinator on February 1, 2010.[45] On March 5, 2010, the Bears signed defensive end Julius Peppers, running back Chester Taylor, and tight end Brandon Manumaleuna, spending over $100 million on the first day of free agency.[46] Also during the 2010 offseason, Michael McCaskey was replaced by brother George McCaskey as chairman of the Bears.[47] With a 38–34 win against the New York Jets, the Bears clinched the No. 2 seed and a first-round bye for the 2010–11 NFL playoffs. In their first Playoff game since Super Bowl XLI, The Bears defeated the No. 4 seed Seattle Seahawks 35–24 in the Divisional Round. The Bears reached the NFC Championship Game, where they played Green Bay Packers at Soldier Field – only the second playoff meeting between the two storied rivals, the only other game played in 1941.[48] The Bears lost the game, 21–14.\n\nThe team started the 2011 season strong with a 7–3 record, and running back Matt Forté led the NFL in total yards from scrimmage. Eventually, quarterback Jay Cutler fractured his thumb, and Forté also was lost for the season against the Kansas City Chiefs after spraining his MCL, and the Bears, with Caleb Hanie playing, lost five straight before winning against the Minnesota Vikings with Josh McCown starting over Hanie. At season's end, general manager Jerry Angelo was fired, and former Chiefs director of scouting and former Bears scout Phil Emery was brought in. Offensive coordinator Mike Martz resigned, and eventually retired, and was replaced by offensive line coach Mike Tice. The Bears made another notable move by trading for Miami Dolphins receiver and Pro Bowl MVP Brandon Marshall.[49] The Bears became the first team in NFL history to return six interceptions for touchdowns in the first seven games of the season, with another pick-six by Brian Urlacher in Week 9 bringing Chicago two behind the record set by the 1961 San Diego Chargers.[50] However, the Bears missed the playoffs with a record of 10–6 (after starting the season 7–1, the first team to start with the record and miss the playoffs since the 1996 Washington Redskins),[51] and Smith was fired on December 31.[52]"
ERROR:root:orig input: "Lovie Smith, hired on January 15, 2004, is the third post-Ditka head coach. Joining the Bears as a rookie head coach, Smith brought the highly successful Tampa 2 defensive scheme with him to Chicago. Before his second season with the Bears, the team rehired their former offensive coordinator and then Illinois head coach Ron Turner to improve the Bears' struggling offense.[40] In 2005, the Bears won their division and reached the playoffs for the first time in four years. Their previous playoff berth was earned by winning the NFC Central in 2001. The Bears improved upon their success the following season, by clinching their second consecutive NFC North title during Week 13 of the 2006 season, winning their first playoff game since 1995, and earning a trip to Super Bowl XLI.[41] However, they fell short of the championship, losing 29–17 to the Indianapolis Colts. Following the 2006 season, the club decided to give Smith a contract extension through 2011, at roughly $5 million per year. This comes a season after being the lowest-paid head coach in the National Football League.[42]\r\n\r\nThe club has played in over a thousand games since becoming a charter member of the NFL in 1920. Through the 2010 season, they led the NFL in overall franchise wins with 704 and had an overall record of 704–512–42 (going 687–494–42 during the regular season and 17–18 in the playoffs).[43] On November 18, 2010, the Bears recorded franchise win number 700 in a win against the Miami Dolphins.\r\nThe Bears made one of the biggest trades in team history by acquiring Pro Bowl quarterback Jay Cutler in 2009\r\n\r\nThe Bears made one of the biggest trades in franchise history, acquiring Pro Bowl quarterback Jay Cutler from the Denver Broncos in exchange for Kyle Orton and draft picks on April 2, 2009. After a disappointing 2009 campaign with the team going 7–9,[44] Mike Martz was hired as the team's offensive coordinator on February 1, 2010.[45] On March 5, 2010, the Bears signed defensive end Julius Peppers, running back Chester Taylor, and tight end Brandon Manumaleuna, spending over $100 million on the first day of free agency.[46] Also during the 2010 offseason, Michael McCaskey was replaced by brother George McCaskey as chairman of the Bears.[47] With a 38–34 win against the New York Jets, the Bears clinched the No. 2 seed and a first-round bye for the 2010–11 NFL playoffs. In their first Playoff game since Super Bowl XLI, The Bears defeated the No. 4 seed Seattle Seahawks 35–24 in the Divisional Round. The Bears reached the NFC Championship Game, where they played Green Bay Packers at Soldier Field – only the second playoff meeting between the two storied rivals, the only other game played in 1941.[48] The Bears lost the game, 21–14.\r\n\r\nThe team started the 2011 season strong with a 7–3 record, and running back Matt Forté led the NFL in total yards from scrimmage. Eventually, quarterback Jay Cutler fractured his thumb, and Forté also was lost for the season against the Kansas City Chiefs after spraining his MCL, and the Bears, with Caleb Hanie playing, lost five straight before winning against the Minnesota Vikings with Josh McCown starting over Hanie. At season's end, general manager Jerry Angelo was fired, and former Chiefs director of scouting and former Bears scout Phil Emery was brought in. Offensive coordinator Mike Martz resigned, and eventually retired, and was replaced by offensive line coach Mike Tice. The Bears made another notable move by trading for Miami Dolphins receiver and Pro Bowl MVP Brandon Marshall.[49] The Bears became the first team in NFL history to return six interceptions for touchdowns in the first seven games of the season, with another pick-six by Brian Urlacher in Week 9 bringing Chicago two behind the record set by the 1961 San Diego Chargers.[50] However, the Bears missed the playoffs with a record of 10–6 (after starting the season 7–1, the first team to start with the record and miss the playoffs since the 1996 Washington Redskins),[51] and Smith was fired on December 31.[52] \r\n"
ERROR:root:orig selected_specific len[[["The Bears became the first team in NFL history to return six interceptions for touchdowns in the first seven games of the season, with another pick-six by Brian Urlacher in Week 9 bringing Chicago two behind the record set by the 1961 San Diego Chargers.[50]",{},32],["On March 5, 2010, the Bears signed defensive end Julius Peppers, running back Chester Taylor, and tight end Brandon Manumaleuna, spending over $100 million on the first day of free agency.[46]",{},17],["On November 18, 2010, the Bears recorded franchise win number 700 in a win against the Miami Dolphins.",{},12],["Through the 2010 season, they led the NFL in overall franchise wins with 704 and had an overall record of 704–512–42 (going 687–494–42 during the regular season and 17–18 in the playoffs).[43]",{},11],["With a 38–34 win against the New York Jets, the Bears clinched the No. 2 seed and a first-round bye for the 2010–11 NFL playoffs.",{},19],["The team started the 2011 season strong with a 7–3 record, and running back Matt Forté led the NFL in total yards from scrimmage.",{},24],["Following the 2006 season, the club decided to give Smith a contract extension through 2011, at roughly $5 million per year.",{},8],["The Bears improved upon their success the following season, by clinching their second consecutive NFC North title during Week 13 of the 2006 season, winning their first playoff game since 1995, and earning a trip to Super Bowl XLI.[41]",{},6],["(after starting the season 7–1, the first team to start with the record and miss the playoffs since the 1996 Washington Redskins),[51] and Smith was fired on December 31.[52]",{},34],["The Bears reached the NFC Championship Game, where they played Green Bay Packers at Soldier Field – only the second playoff meeting between the two storied rivals, the only other game played in 1941.[48]",{},22],["In their first Playoff game since Super Bowl XLI, The Bears defeated the No. 4 seed Seattle Seahawks",{},20],["Eventually, quarterback Jay Cutler fractured his thumb, and Forté also was lost for the season against the Kansas City Chiefs after spraining his MCL, and the Bears, with Caleb Hanie playing, lost five straight before winning against the Minnesota Vikings with Josh McCown starting over Hanie.",{},25],["Mike Martz was hired as the team's offensive coordinator on February 1, 2010.[45]",{},16],["Lovie Smith, hired on January 15, 2004, is the third post-Ditka head coach.",{},0],["In 2005, the Bears won their division and reached the playoffs for the first time in four years.",{},4],["After a disappointing 2009 campaign with the team going 7–9,[44]",{},15],["The Bears made one of the biggest trades in franchise history, acquiring Pro Bowl quarterback Jay Cutler from the Denver Broncos in exchange for Kyle Orton and draft picks on April 2, 2009.",{},14],["Joining the Bears as a rookie head coach, Smith brought the highly successful Tampa 2 defensive scheme with him to Chicago.",{},1],["At season's end, general manager Jerry Angelo was fired, and former Chiefs director of scouting and former Bears scout Phil Emery was brought in.",{},26],["The Bears lost the game, 21–14.",{},23],["Their previous playoff berth was earned by winning the NFC Central in 2001.",{},5],["Offensive coordinator Mike Martz resigned, and eventually retired, and was replaced by offensive line coach Mike Tice.",{},27],["Before his second season with the Bears, the team rehired their former offensive coordinator and",{},2],["then Illinois head coach Ron Turner to improve the Bears' struggling offense.[40]",{},3],["The club has played in over a thousand games since becoming a charter member of the NFL in 1920.",{},10],["The Bears made one of the biggest trades in team history by acquiring Pro Bowl quarterback Jay Cutler in 2009",{},13],["35–24 in the Divisional Round.",{},21],["Also during the 2010 offseason, Michael McCaskey was replaced by brother George McCaskey as chairman of the Bears.[47]",{},18],["Pro Bowl MVP",{},29],["Brandon",{},30]],["Lovie Smith, hired on January 15, 2004, is the third post-Ditka head coach.","Joining the Bears as a rookie head coach, Smith brought the highly successful Tampa 2 defensive scheme with him to Chicago.","Before Smith's second season with the Bears, the team rehired their former offensive coordinator and","then Illinois head coach Ron Turner to improve the Bears' struggling offense.[40]","In 2005, the Bears won their division and reached the playoffs for the first time in four years.","the Bears's previous playoff berth was earned by winning the NFC Central in 2001.","The Bears improved upon the Bears's success the following season, by clinching the Bears's second consecutive NFC North title during Week 13 of the 2006 season, winning the Bears's first playoff game since 1995, and earning a trip to Super Bowl XLI.[41]","However, the Bears fell short of the championship, losing 29–17 to the Indianapolis Colts.","Following the 2006 season, the club decided to give Smith a contract extension through 2011, at roughly $5 million per year.","This comes a season after being the lowest-paid head coach in the National Football League.[42]","The club has played in over a thousand games since becoming a charter member of the NFL in 1920.","Through the 2010 season, the Bears led the NFL in overall franchise wins with 704 and had an overall record of 704–512–42 (going 687–494–42 during the regular season and 17–18 in the playoffs).[43]","On November 18, 2010, the Bears recorded franchise win number 700 in a win against the Miami Dolphins.","The Bears made one of the biggest trades in team history by acquiring Pro Bowl quarterback Jay Cutler in 2009","The Bears made one of the biggest trades in franchise history, acquiring Pro Bowl quarterback Jay Cutler from the Denver Broncos in exchange for Kyle Orton and draft picks on April 2, 2009.","After a disappointing 2009 campaign with the team going 7–9,[44]","Mike Martz was hired as the team's offensive coordinator on February 1, 2010.[45]","On March 5, 2010, the Bears signed defensive end Julius Peppers, running back Chester Taylor, and tight end Brandon Manumaleuna, spending over $100 million on the first day of free agency.[46]","Also during the 2010 offseason, Michael McCaskey was replaced by brother George McCaskey as chairman of the Bears.[47]","With a 38–34 win against the New York Jets, the Bears clinched the No. 2 seed and a first-round bye for the 2010–11 NFL playoffs.","In the 2010–11 NFL playoffs's first Playoff game since Super Bowl XLI, The Bears defeated the No. 4 seed Seattle Seahawks","35–24 in the Divisional Round.","The Bears reached the NFC Championship Game, where the Bears played Green Bay Packers at Soldier Field – only the second playoff meeting between the two storied rivals, the only other game played in 1941.[48]","The Bears lost the game, 21–14.","The team started the 2011 season strong with a 7–3 record, and running back Matt Forté led the NFL in total yards from scrimmage.","Eventually, quarterback Jay Cutler fractured his thumb, and Forté also was lost for the season against the Kansas City Chiefs after spraining his MCL, and the Bears, with Caleb Hanie playing, lost five straight before winning against the Minnesota Vikings with Josh McCown starting over Hanie.","At season's end, general manager Jerry Angelo was fired, and former Chiefs director of scouting and former Bears scout Phil Emery was brought in.","Offensive coordinator Mike Martz resigned, and eventually retired, and was replaced by offensive line coach Mike Tice.","The Bears made another notable move by trading for Miami Dolphins receiver and","Pro Bowl MVP","Brandon","Marshall.[49]","The Bears became the first team in NFL history to return six interceptions for touchdowns in the first seven games of the season, with another pick-six by Brian Urlacher in Week 9 bringing Chicago two behind the record set by the 1961 San Diego Chargers.[50]","However, the Bears missed the playoffs with a record of 10–6","(after starting the season 7–1, the first team to start with the record and miss the playoffs since the 1996 Washington Redskins),[51] and Smith was fired on December 31.[52]"]]
ERROR:root:orig selected_specific len30
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.005718
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents3
ERROR:root:total before 0:00:05.903409
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.006203
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 896, in new
    mcq_output = [call.result() for call in mcq_request]
  File "/datadrive/qgv1/text_prod/app.py", line 896, in <listcomp>
    mcq_output = [call.result() for call in mcq_request]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 94, in query
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.332094
ERROR:root:payload: "Lovie Smith, hired on January 15, 2004, is the third post-Ditka head coach. Joining the Bears as a rookie head coach, Smith brought the highly successful Tampa 2 defensive scheme with him to Chicago. Before his second season with the Bears, the team rehired their former offensive coordinator and then Illinois head coach Ron Turner to improve the Bears' struggling offense.[40] In 2005, the Bears won their division and reached the playoffs for the first time in four years. Their previous playoff berth was earned by winning the NFC Central in 2001. The Bears improved upon their success the following season, by clinching their second consecutive NFC North title during Week 13 of the 2006 season, winning their first playoff game since 1995, and earning a trip to Super Bowl XLI.[41] However, they fell short of the championship, losing 29–17 to the Indianapolis Colts. Following the 2006 season, the club decided to give Smith a contract extension through 2011, at roughly $5 million per year. This comes a season after being the lowest-paid head coach in the National Football League.[42]\n\nThe club has played in over a thousand games since becoming a charter member of the NFL in 1920. Through the 2010 season, they led the NFL in overall franchise wins with 704 and had an overall record of 704–512–42 (going 687–494–42 during the regular season and 17–18 in the playoffs).[43] On November 18, 2010, the Bears recorded franchise win number 700 in a win against the Miami Dolphins.\nThe Bears made one of the biggest trades in team history by acquiring Pro Bowl quarterback Jay Cutler in 2009\n\nThe Bears made one of the biggest trades in franchise history, acquiring Pro Bowl quarterback Jay Cutler from the Denver Broncos in exchange for Kyle Orton and draft picks on April 2, 2009. After a disappointing 2009 campaign with the team going 7–9,[44] Mike Martz was hired as the team's offensive coordinator on February 1, 2010.[45] On March 5, 2010, the Bears signed defensive end Julius Peppers, running back Chester Taylor, and tight end Brandon Manumaleuna, spending over $100 million on the first day of free agency.[46] Also during the 2010 offseason, Michael McCaskey was replaced by brother George McCaskey as chairman of the Bears.[47] With a 38–34 win against the New York Jets, the Bears clinched the No. 2 seed and a first-round bye for the 2010–11 NFL playoffs. In their first Playoff game since Super Bowl XLI, The Bears defeated the No. 4 seed Seattle Seahawks 35–24 in the Divisional Round. The Bears reached the NFC Championship Game, where they played Green Bay Packers at Soldier Field – only the second playoff meeting between the two storied rivals, the only other game played in 1941.[48] The Bears lost the game, 21–14.\n\nThe team started the 2011 season strong with a 7–3 record, and running back Matt Forté led the NFL in total yards from scrimmage. Eventually, quarterback Jay Cutler fractured his thumb, and Forté also was lost for the season against the Kansas City Chiefs after spraining his MCL, and the Bears, with Caleb Hanie playing, lost five straight before winning against the Minnesota Vikings with Josh McCown starting over Hanie. At season's end, general manager Jerry Angelo was fired, and former Chiefs director of scouting and former Bears scout Phil Emery was brought in. Offensive coordinator Mike Martz resigned, and eventually retired, and was replaced by offensive line coach Mike Tice. The Bears made another notable move by trading for Miami Dolphins receiver and Pro Bowl MVP Brandon Marshall.[49] The Bears became the first team in NFL history to return six interceptions for touchdowns in the first seven games of the season, with another pick-six by Brian Urlacher in Week 9 bringing Chicago two behind the record set by the 1961 San Diego Chargers.[50] However, the Bears missed the playoffs with a record of 10–6 (after starting the season 7–1, the first team to start with the record and miss the playoffs since the 1996 Washington Redskins),[51] and Smith was fired on December 31.[52]"
ERROR:root:orig input: "Lovie Smith, hired on January 15, 2004, is the third post-Ditka head coach. Joining the Bears as a rookie head coach, Smith brought the highly successful Tampa 2 defensive scheme with him to Chicago. Before his second season with the Bears, the team rehired their former offensive coordinator and then Illinois head coach Ron Turner to improve the Bears' struggling offense.[40] In 2005, the Bears won their division and reached the playoffs for the first time in four years. Their previous playoff berth was earned by winning the NFC Central in 2001. The Bears improved upon their success the following season, by clinching their second consecutive NFC North title during Week 13 of the 2006 season, winning their first playoff game since 1995, and earning a trip to Super Bowl XLI.[41] However, they fell short of the championship, losing 29–17 to the Indianapolis Colts. Following the 2006 season, the club decided to give Smith a contract extension through 2011, at roughly $5 million per year. This comes a season after being the lowest-paid head coach in the National Football League.[42]\r\n\r\nThe club has played in over a thousand games since becoming a charter member of the NFL in 1920. Through the 2010 season, they led the NFL in overall franchise wins with 704 and had an overall record of 704–512–42 (going 687–494–42 during the regular season and 17–18 in the playoffs).[43] On November 18, 2010, the Bears recorded franchise win number 700 in a win against the Miami Dolphins.\r\nThe Bears made one of the biggest trades in team history by acquiring Pro Bowl quarterback Jay Cutler in 2009\r\n\r\nThe Bears made one of the biggest trades in franchise history, acquiring Pro Bowl quarterback Jay Cutler from the Denver Broncos in exchange for Kyle Orton and draft picks on April 2, 2009. After a disappointing 2009 campaign with the team going 7–9,[44] Mike Martz was hired as the team's offensive coordinator on February 1, 2010.[45] On March 5, 2010, the Bears signed defensive end Julius Peppers, running back Chester Taylor, and tight end Brandon Manumaleuna, spending over $100 million on the first day of free agency.[46] Also during the 2010 offseason, Michael McCaskey was replaced by brother George McCaskey as chairman of the Bears.[47] With a 38–34 win against the New York Jets, the Bears clinched the No. 2 seed and a first-round bye for the 2010–11 NFL playoffs. In their first Playoff game since Super Bowl XLI, The Bears defeated the No. 4 seed Seattle Seahawks 35–24 in the Divisional Round. The Bears reached the NFC Championship Game, where they played Green Bay Packers at Soldier Field – only the second playoff meeting between the two storied rivals, the only other game played in 1941.[48] The Bears lost the game, 21–14.\r\n\r\nThe team started the 2011 season strong with a 7–3 record, and running back Matt Forté led the NFL in total yards from scrimmage. Eventually, quarterback Jay Cutler fractured his thumb, and Forté also was lost for the season against the Kansas City Chiefs after spraining his MCL, and the Bears, with Caleb Hanie playing, lost five straight before winning against the Minnesota Vikings with Josh McCown starting over Hanie. At season's end, general manager Jerry Angelo was fired, and former Chiefs director of scouting and former Bears scout Phil Emery was brought in. Offensive coordinator Mike Martz resigned, and eventually retired, and was replaced by offensive line coach Mike Tice. The Bears made another notable move by trading for Miami Dolphins receiver and Pro Bowl MVP Brandon Marshall.[49] The Bears became the first team in NFL history to return six interceptions for touchdowns in the first seven games of the season, with another pick-six by Brian Urlacher in Week 9 bringing Chicago two behind the record set by the 1961 San Diego Chargers.[50] However, the Bears missed the playoffs with a record of 10–6 (after starting the season 7–1, the first team to start with the record and miss the playoffs since the 1996 Washington Redskins),[51] and Smith was fired on December 31.[52] \r\n"
ERROR:root:orig selected_specific len[[["The Bears became the first team in NFL history to return six interceptions for touchdowns in the first seven games of the season, with another pick-six by Brian Urlacher in Week 9 bringing Chicago two behind the record set by the 1961 San Diego Chargers.[50]",{},32],["On March 5, 2010, the Bears signed defensive end Julius Peppers, running back Chester Taylor, and tight end Brandon Manumaleuna, spending over $100 million on the first day of free agency.[46]",{},17],["On November 18, 2010, the Bears recorded franchise win number 700 in a win against the Miami Dolphins.",{},12],["Through the 2010 season, they led the NFL in overall franchise wins with 704 and had an overall record of 704–512–42 (going 687–494–42 during the regular season and 17–18 in the playoffs).[43]",{},11],["With a 38–34 win against the New York Jets, the Bears clinched the No. 2 seed and a first-round bye for the 2010–11 NFL playoffs.",{},19],["The team started the 2011 season strong with a 7–3 record, and running back Matt Forté led the NFL in total yards from scrimmage.",{},24],["Following the 2006 season, the club decided to give Smith a contract extension through 2011, at roughly $5 million per year.",{},8],["The Bears improved upon their success the following season, by clinching their second consecutive NFC North title during Week 13 of the 2006 season, winning their first playoff game since 1995, and earning a trip to Super Bowl XLI.[41]",{},6],["(after starting the season 7–1, the first team to start with the record and miss the playoffs since the 1996 Washington Redskins),[51] and Smith was fired on December 31.[52]",{},34],["The Bears reached the NFC Championship Game, where they played Green Bay Packers at Soldier Field – only the second playoff meeting between the two storied rivals, the only other game played in 1941.[48]",{},22],["In their first Playoff game since Super Bowl XLI, The Bears defeated the No. 4 seed Seattle Seahawks",{},20],["Eventually, quarterback Jay Cutler fractured his thumb, and Forté also was lost for the season against the Kansas City Chiefs after spraining his MCL, and the Bears, with Caleb Hanie playing, lost five straight before winning against the Minnesota Vikings with Josh McCown starting over Hanie.",{},25],["Mike Martz was hired as the team's offensive coordinator on February 1, 2010.[45]",{},16],["Lovie Smith, hired on January 15, 2004, is the third post-Ditka head coach.",{},0],["In 2005, the Bears won their division and reached the playoffs for the first time in four years.",{},4],["After a disappointing 2009 campaign with the team going 7–9,[44]",{},15],["The Bears made one of the biggest trades in franchise history, acquiring Pro Bowl quarterback Jay Cutler from the Denver Broncos in exchange for Kyle Orton and draft picks on April 2, 2009.",{},14],["Joining the Bears as a rookie head coach, Smith brought the highly successful Tampa 2 defensive scheme with him to Chicago.",{},1],["At season's end, general manager Jerry Angelo was fired, and former Chiefs director of scouting and former Bears scout Phil Emery was brought in.",{},26],["The Bears lost the game, 21–14.",{},23],["Their previous playoff berth was earned by winning the NFC Central in 2001.",{},5],["Offensive coordinator Mike Martz resigned, and eventually retired, and was replaced by offensive line coach Mike Tice.",{},27],["Before his second season with the Bears, the team rehired their former offensive coordinator and",{},2],["then Illinois head coach Ron Turner to improve the Bears' struggling offense.[40]",{},3],["The club has played in over a thousand games since becoming a charter member of the NFL in 1920.",{},10],["The Bears made one of the biggest trades in team history by acquiring Pro Bowl quarterback Jay Cutler in 2009",{},13],["35–24 in the Divisional Round.",{},21],["Also during the 2010 offseason, Michael McCaskey was replaced by brother George McCaskey as chairman of the Bears.[47]",{},18],["Pro Bowl MVP",{},29],["Brandon",{},30]],["Lovie Smith, hired on January 15, 2004, is the third post-Ditka head coach.","Joining the Bears as a rookie head coach, Smith brought the highly successful Tampa 2 defensive scheme with him to Chicago.","Before Smith's second season with the Bears, the team rehired their former offensive coordinator and","then Illinois head coach Ron Turner to improve the Bears' struggling offense.[40]","In 2005, the Bears won their division and reached the playoffs for the first time in four years.","the Bears's previous playoff berth was earned by winning the NFC Central in 2001.","The Bears improved upon the Bears's success the following season, by clinching the Bears's second consecutive NFC North title during Week 13 of the 2006 season, winning the Bears's first playoff game since 1995, and earning a trip to Super Bowl XLI.[41]","However, the Bears fell short of the championship, losing 29–17 to the Indianapolis Colts.","Following the 2006 season, the club decided to give Smith a contract extension through 2011, at roughly $5 million per year.","This comes a season after being the lowest-paid head coach in the National Football League.[42]","The club has played in over a thousand games since becoming a charter member of the NFL in 1920.","Through the 2010 season, the Bears led the NFL in overall franchise wins with 704 and had an overall record of 704–512–42 (going 687–494–42 during the regular season and 17–18 in the playoffs).[43]","On November 18, 2010, the Bears recorded franchise win number 700 in a win against the Miami Dolphins.","The Bears made one of the biggest trades in team history by acquiring Pro Bowl quarterback Jay Cutler in 2009","The Bears made one of the biggest trades in franchise history, acquiring Pro Bowl quarterback Jay Cutler from the Denver Broncos in exchange for Kyle Orton and draft picks on April 2, 2009.","After a disappointing 2009 campaign with the team going 7–9,[44]","Mike Martz was hired as the team's offensive coordinator on February 1, 2010.[45]","On March 5, 2010, the Bears signed defensive end Julius Peppers, running back Chester Taylor, and tight end Brandon Manumaleuna, spending over $100 million on the first day of free agency.[46]","Also during the 2010 offseason, Michael McCaskey was replaced by brother George McCaskey as chairman of the Bears.[47]","With a 38–34 win against the New York Jets, the Bears clinched the No. 2 seed and a first-round bye for the 2010–11 NFL playoffs.","In the 2010–11 NFL playoffs's first Playoff game since Super Bowl XLI, The Bears defeated the No. 4 seed Seattle Seahawks","35–24 in the Divisional Round.","The Bears reached the NFC Championship Game, where the Bears played Green Bay Packers at Soldier Field – only the second playoff meeting between the two storied rivals, the only other game played in 1941.[48]","The Bears lost the game, 21–14.","The team started the 2011 season strong with a 7–3 record, and running back Matt Forté led the NFL in total yards from scrimmage.","Eventually, quarterback Jay Cutler fractured his thumb, and Forté also was lost for the season against the Kansas City Chiefs after spraining his MCL, and the Bears, with Caleb Hanie playing, lost five straight before winning against the Minnesota Vikings with Josh McCown starting over Hanie.","At season's end, general manager Jerry Angelo was fired, and former Chiefs director of scouting and former Bears scout Phil Emery was brought in.","Offensive coordinator Mike Martz resigned, and eventually retired, and was replaced by offensive line coach Mike Tice.","The Bears made another notable move by trading for Miami Dolphins receiver and","Pro Bowl MVP","Brandon","Marshall.[49]","The Bears became the first team in NFL history to return six interceptions for touchdowns in the first seven games of the season, with another pick-six by Brian Urlacher in Week 9 bringing Chicago two behind the record set by the 1961 San Diego Chargers.[50]","However, the Bears missed the playoffs with a record of 10–6","(after starting the season 7–1, the first team to start with the record and miss the playoffs since the 1996 Washington Redskins),[51] and Smith was fired on December 31.[52]"]]
ERROR:root:orig selected_specific len30
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.006981
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:05.061817
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001494
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'With a 38–34 win against the  _________ , the Bears clinched the No. 2 seed and a first-round bye for the 2010–11 NFL playoffs.', 'answer': 'New York Jets', 'options': ['Minnesota Vikings', 'Chicago Bears', 'Indianapolis Colts'], 'context': 'With a 38–34 win against the New York Jets, the Bears clinched the No. 2 seed and a first-round bye for the 2010–11 NFL playoffs.'}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['Marshall.[49] The Bears became the first team in NFL history to return six interceptions for touchdowns in the first seven games of the season, with another pick-six by Brian Urlacher in Week 9 bringing Chicago two behind the record set by the 1961 San Diego Chargers.[50]', "Mike Martz was hired as the team's offensive coordinator on February 1, 2010.[45] On March 5, 2010, the Bears signed defensive end Julius Peppers, running back Chester Taylor, and tight end Brandon Manumaleuna, spending over $100 million on the first day of free agency.[46]", 'With a 38–34 win against the New York Jets, the Bears clinched the No. 2 seed and a first-round bye for the 2010–11 NFL playoffs.']), ('questions', ['How many times did the Bears get a touchdown in the first seven games of the season?', 'What tight end did the Bears sign on March 5, 2010?', 'With a 38–34 win against the  _________ , the Bears clinched the No. 2 seed and a first-round bye for the 2010–11 NFL playoffs.']), ('answers', ['six', 'Brandon Manumaleuna', 'New York Jets']), ('options', [['seven', 'once', 'five'], ['Ben Watson', 'Heath Miller', 'Tony Moeaki'], ['Minnesota Vikings', 'Chicago Bears', 'Indianapolis Colts']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Marshall.[49] The Bears became the first team in NFL history to return six interceptions for touchdowns in the first seven games of the season, with another pick-six by Brian Urlacher in Week 9 bringing Chicago two behind the record set by the 1961 San Diego Chargers.[50]', "Mike Martz was hired as the team's offensive coordinator on February 1, 2010.[45] On March 5, 2010, the Bears signed defensive end Julius Peppers, running back Chester Taylor, and tight end Brandon Manumaleuna, spending over $100 million on the first day of free agency.[46]", 'With a 38–34 win against the New York Jets, the Bears clinched the No. 2 seed and a first-round bye for the 2010–11 NFL playoffs.']), ('questions', ['How many times did the Bears get a touchdown in the first seven games of the season?', 'What tight end did the Bears sign on March 5, 2010?', 'With a 38–34 win against the  _________ , the Bears clinched the No. 2 seed and a first-round bye for the 2010–11 NFL playoffs.']), ('answers', ['six', 'Brandon Manumaleuna', 'New York Jets']), ('options', [['seven', 'once', 'five'], ['Ben Watson', 'Heath Miller', 'Tony Moeaki'], ['Minnesota Vikings', 'Chicago Bears', 'Indianapolis Colts']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['On November 18, 2010, the Bears recorded franchise win number 700 in a win against the Miami Dolphins.']), ('incorrect', [['On November 18, 2010, the Bears recorded franchise win number 700 in the first game of their inaugural season.', 'On November 18, 2010, the Bears recorded franchise win number 700 in a 4-1 win over the New York Jets.', 'On November 18, 2010, the Bears recorded franchise win number 700 in the National Football League Championship Game.']])]))])
ERROR:root:Request 0:00:05.048877
ERROR:root:api_check 0:00:00.382964
ERROR:root:payload: "In Newtonian mechanics, linear momentum, translational momentum, or simply momentum is the product of the mass and velocity of an object. It is a vector quantity, possessing a magnitude and a direction. If m is an object's mass and v is its velocity (also a vector quantity), then the object's momentum p is : p = m v . {\\displaystyle \\mathbf {p} =m\\mathbf {v} .} \\mathbf{p} = m \\mathbf{v}.\n\nIn the International System of Units (SI), the unit of measurement of momentum is the kilogram metre per second (kg⋅m/s), which is equivalent to the newton-second.\n\nNewton's second law of motion states that the rate of change of a body's momentum is equal to the net force acting on it. Momentum depends on the frame of reference, but in any inertial frame it is a conserved quantity, meaning that if a closed system is not affected by external forces, its total linear momentum does not change. Momentum is also conserved in special relativity (with a modified formula) and, in a modified form, in electrodynamics, quantum mechanics, quantum field theory, and general relativity. It is an expression of one of the fundamental symmetries of space and time: translational symmetry.\n\nAdvanced formulations of classical mechanics, Lagrangian and Hamiltonian mechanics, allow one to choose coordinate systems that incorporate symmetries and constraints. In these systems the conserved quantity is generalized momentum, and in general this is different from the kinetic momentum defined above. The concept of generalized momentum is carried over into quantum mechanics, where it becomes an operator on a wave function. The momentum and position operators are related by the Heisenberg uncertainty principle.\n\nIn continuous systems such as electromagnetic fields, fluid dynamics and deformable bodies, a momentum density can be defined, and a continuum version of the conservation of momentum leads to equations such as the Navier–Stokes equations for fluids or the Cauchy momentum equation for deformable solids or fluids."
ERROR:root:orig input: "In Newtonian mechanics, linear momentum, translational momentum, or simply momentum is the product of the mass and velocity of an object. It is a vector quantity, possessing a magnitude and a direction. If m is an object's mass and v is its velocity (also a vector quantity), then the object's momentum p is : p = m v . {\\displaystyle \\mathbf {p} =m\\mathbf {v} .} \\mathbf{p} = m \\mathbf{v}.\r\n\r\nIn the International System of Units (SI), the unit of measurement of momentum is the kilogram metre per second (kg⋅m/s), which is equivalent to the newton-second.\r\n\r\nNewton's second law of motion states that the rate of change of a body's momentum is equal to the net force acting on it. Momentum depends on the frame of reference, but in any inertial frame it is a conserved quantity, meaning that if a closed system is not affected by external forces, its total linear momentum does not change. Momentum is also conserved in special relativity (with a modified formula) and, in a modified form, in electrodynamics, quantum mechanics, quantum field theory, and general relativity. It is an expression of one of the fundamental symmetries of space and time: translational symmetry.\r\n\r\nAdvanced formulations of classical mechanics, Lagrangian and Hamiltonian mechanics, allow one to choose coordinate systems that incorporate symmetries and constraints. In these systems the conserved quantity is generalized momentum, and in general this is different from the kinetic momentum defined above. The concept of generalized momentum is carried over into quantum mechanics, where it becomes an operator on a wave function. The momentum and position operators are related by the Heisenberg uncertainty principle.\r\n\r\nIn continuous systems such as electromagnetic fields, fluid dynamics and deformable bodies, a momentum density can be defined, and a continuum version of the conservation of momentum leads to equations such as the Navier–Stokes equations for fluids or the Cauchy momentum equation for deformable solids or fluids. "
ERROR:root:orig selected_specific len[[["In continuous systems such as electromagnetic fields, fluid dynamics and deformable bodies, a momentum density can be defined, and a continuum version of the conservation of momentum leads to equations such as the Navier–Stokes equations for fluids or the Cauchy momentum equation for deformable solids or fluids.",{},17],["In the International System of Units (SI), the unit of measurement of momentum is the kilogram metre per second",{},7],["In Newtonian mechanics, linear momentum, translational momentum, or simply momentum is the product of the mass and velocity of an object.",{},0],["If m is an object's mass and v is its velocity (also a vector quantity), then the object's momentum p is :",{},2],["Momentum depends on the frame of reference, but in any inertial frame it is a conserved quantity, meaning that if a closed system is not affected by external forces, its total linear momentum does not change.",{},10],["Newton's second law of motion states that the rate of change of a body's momentum is equal to the net force acting on it.",{},9],["Advanced formulations of classical mechanics, Lagrangian and Hamiltonian mechanics, allow one to choose coordinate systems that incorporate symmetries and constraints.",{},13],["Momentum is also conserved in special relativity (with a modified formula) and, in a modified form, in electrodynamics, quantum mechanics, quantum field theory, and general relativity.",{},11],["The concept of generalized momentum is carried over into quantum mechanics, where it becomes an operator on a wave function.",{},15],["{\\displaystyle \\mathbf {p} =",{},4],["\\mathbf{p} = m \\mathbf{v}.",{},6],["(kg⋅m/s), which is equivalent to the newton-second.",{},8]],["In Newtonian mechanics, linear momentum, translational momentum, or simply momentum is the product of the mass and velocity of an object.","It is a vector quantity, possessing a magnitude and a direction.","If m is an object's mass and v is its velocity (also a vector quantity), then the object's momentum p is :","p = m v .","{\\displaystyle \\mathbf {p} =","m\\mathbf {v} .}","\\mathbf{p} = m \\mathbf{v}.","In the International System of Units (SI), the unit of measurement of momentum is the kilogram metre per second","(kg⋅m/s), which is equivalent to the newton-second.","Newton's second law of motion states that the rate of change of a body's momentum is equal to the net force acting on it.","Momentum depends on the frame of reference, but in any inertial frame it is a conserved quantity, meaning that if a closed system is not affected by external forces, its total linear momentum does not change.","Momentum is also conserved in special relativity (with a modified formula) and, in a modified form, in electrodynamics, quantum mechanics, quantum field theory, and general relativity.","It is an expression of one of the fundamental symmetries of space and time: translational symmetry.","Advanced formulations of classical mechanics, Lagrangian and Hamiltonian mechanics, allow one to choose coordinate systems that incorporate symmetries and constraints.","In coordinate systems that incorporate symmetries and constraints the conserved quantity is generalized momentum, and in general this is different from the kinetic momentum defined above.","The concept of generalized momentum is carried over into quantum mechanics, where it becomes an operator on a wave function.","The momentum and position operators are related by the Heisenberg uncertainty principle.","In continuous systems such as electromagnetic fields, fluid dynamics and deformable bodies, a momentum density can be defined, and a continuum version of the conservation of momentum leads to equations such as the Navier–Stokes equations for fluids or the Cauchy momentum equation for deformable solids or fluids."]]
ERROR:root:orig selected_specific len12
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents4
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The momentum and position operators are related by the Heisenberg uncertainty principle. In continuous systems such as electromagnetic fields, fluid dynamics and deformable bodies, a momentum density can be defined, and a continuum version of the conservation of momentum leads to equations such as the Navier–Stokes equations for fluids or the Cauchy momentum equation for deformable solids or fluids.', '\\mathbf{p} = m \\mathbf{v}. In the International System of Units (SI), the unit of measurement of momentum is the kilogram metre per second', ' In Newtonian mechanics, linear momentum, translational momentum, or simply momentum is the product of the mass and velocity of an object.', "It is a vector quantity, possessing a magnitude and a direction. If m is an object's mass and v is its velocity (also a vector quantity), then the object's momentum p is :"]), ('questions', ['What is an example of continuous system?', 'What does SI stand for?', 'In what field is linear momentum the product of mass and velocity of an object?', 'What is the vector quantity of a vector quantity?']), ('answers', ['electromagnetic fields', 'International System of Units', 'Newtonian mechanics', 'm']), ('options', [['sound', 'gravity', 'the atmosphere'], ['Systeeme Internationale', 'Scientific International', 'Systeme Internationale'], ['gymnastics', 'physics', 'high school science'], ['n', 'k', 'p']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:07.773939
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.407154
ERROR:root:payload: "In Newtonian mechanics, linear momentum, translational momentum, or simply momentum is the product of the mass and velocity of an object. It is a vector quantity, possessing a magnitude and a direction. If m is an object's mass and v is its velocity (also a vector quantity), then the object's momentum p is : p = m v . {\\\\displaystyle \\\\mathbf {p} =m\\\\mathbf {v} .} \\\\mathbf{p} = m \\\\mathbf{v}.\\r\\n\\r\\nIn the International System of Units (SI), the unit of measurement of momentum is the kilogram metre per second (kg⋅m/s), which is equivalent to the newton-second. Newton's second law of motion states that the rate of change of a body's momentum is equal to the net force acting on it. Momentum depends on the frame of reference, but in any inertial frame it is a conserved quantity, meaning that if a closed system is not affected by external forces, its total linear momentum does not change. Momentum is also conserved in special relativity (with a modified formula) and, in a modified form, in electrodynamics, quantum mechanics, quantum field theory, and general relativity. It is an expression of one of the fundamental symmetries of space and time: translational symmetry. Advanced formulations of classical mechanics, Lagrangian and Hamiltonian mechanics, allow one to choose coordinate systems that incorporate symmetries and constraints. In these systems the conserved quantity is generalized momentum, and in general this is different from the kinetic momentum defined above. The concept of generalized momentum is carried over into quantum mechanics, where it becomes an operator on a wave function. The momentum and position operators are related by the Heisenberg uncertainty principle. In continuous systems such as electromagnetic fields, fluid dynamics and deformable bodies, a momentum density can be defined, and a continuum version of the conservation of momentum leads to equations such as the Navier–Stokes equations for fluids or the Cauchy momentum equation for deformable solids or fluids."
ERROR:root:orig input: "In Newtonian mechanics, linear momentum, translational momentum, or simply momentum is the product of the mass and velocity of an object. It is a vector quantity, possessing a magnitude and a direction. If m is an object's mass and v is its velocity (also a vector quantity), then the object's momentum p is : p = m v . {\\\\displaystyle \\\\mathbf {p} =m\\\\mathbf {v} .} \\\\mathbf{p} = m \\\\mathbf{v}.\\r\\n\\r\\nIn the International System of Units (SI), the unit of measurement of momentum is the kilogram metre per second (kg⋅m/s), which is equivalent to the newton-second. Newton's second law of motion states that the rate of change of a body's momentum is equal to the net force acting on it. Momentum depends on the frame of reference, but in any inertial frame it is a conserved quantity, meaning that if a closed system is not affected by external forces, its total linear momentum does not change. Momentum is also conserved in special relativity (with a modified formula) and, in a modified form, in electrodynamics, quantum mechanics, quantum field theory, and general relativity. It is an expression of one of the fundamental symmetries of space and time: translational symmetry. Advanced formulations of classical mechanics, Lagrangian and Hamiltonian mechanics, allow one to choose coordinate systems that incorporate symmetries and constraints. In these systems the conserved quantity is generalized momentum, and in general this is different from the kinetic momentum defined above. The concept of generalized momentum is carried over into quantum mechanics, where it becomes an operator on a wave function. The momentum and position operators are related by the Heisenberg uncertainty principle. In continuous systems such as electromagnetic fields, fluid dynamics and deformable bodies, a momentum density can be defined, and a continuum version of the conservation of momentum leads to equations such as the Navier–Stokes equations for fluids or the Cauchy momentum equation for deformable solids or fluids."
ERROR:root:orig selected_specific len[[["In continuous systems such as electromagnetic fields, fluid dynamics and deformable bodies, a momentum density can be defined, and a continuum version of the conservation of momentum leads to equations such as the Navier–Stokes equations for fluids or the Cauchy momentum equation for deformable solids or fluids.",{},17],["If m is an object's mass and v is its velocity (also a vector quantity), then the object's momentum p is : p = m v .",{},2],["In Newtonian mechanics, linear momentum, translational momentum, or simply momentum is the product of the mass and velocity of an object.",{},0],["the unit of measurement of momentum is the kilogram metre per second",{},7],["m \\\\mathbf{v}.\\r\\n\\r\\nIn the International System of Units (SI),",{},6],["Momentum depends on the frame of reference, but in any inertial frame it is a conserved quantity, meaning that if a closed system is not affected by external forces, its total linear momentum does not change.",{},10],["Newton's second law of motion states that the rate of change of a body's momentum is equal to the net force acting on it.",{},9],["Advanced formulations of classical mechanics, Lagrangian and Hamiltonian mechanics, allow one to choose coordinate systems that incorporate symmetries and constraints.",{},13],["Momentum is also conserved in special relativity (with a modified formula) and, in a modified form, in electrodynamics, quantum mechanics, quantum field theory, and general relativity.",{},11],["{\\\\displaystyle \\\\mathbf {p} =",{},3],["The concept of generalized momentum is carried over into quantum mechanics, where it becomes an operator on a wave function.",{},15],["\\\\mathbf{p} =",{},5],["(kg⋅m/s), which is equivalent to the newton-second.",{},8],["m\\\\mathbf {v} .}",{},4]],["In Newtonian mechanics, linear momentum, translational momentum, or simply momentum is the product of the mass and velocity of an object.","It is a vector quantity, possessing a magnitude and a direction.","If m is an object's mass and v is its velocity (also a vector quantity), then the object's momentum p is : p = m v .","{\\\\displaystyle \\\\mathbf {p} =","m\\\\mathbf {v} .}","\\\\mathbf{p} =","m \\\\mathbf{v}.\\r\\n\\r\\nIn the International System of Units (SI),","the unit of measurement of momentum is the kilogram metre per second","(kg⋅m/s), which is equivalent to the newton-second.","Newton's second law of motion states that the rate of change of a body's momentum is equal to the net force acting on it.","Momentum depends on the frame of reference, but in any inertial frame it is a conserved quantity, meaning that if a closed system is not affected by external forces, its total linear momentum does not change.","Momentum is also conserved in special relativity (with a modified formula) and, in a modified form, in electrodynamics, quantum mechanics, quantum field theory, and general relativity.","It is an expression of one of the fundamental symmetries of space and time: translational symmetry.","Advanced formulations of classical mechanics, Lagrangian and Hamiltonian mechanics, allow one to choose coordinate systems that incorporate symmetries and constraints.","In coordinate systems that incorporate symmetries and constraints the conserved quantity is generalized momentum, and in general this is different from the kinetic momentum defined above.","The concept of generalized momentum is carried over into quantum mechanics, where it becomes an operator on a wave function.","The momentum and position operators are related by the Heisenberg uncertainty principle.","In continuous systems such as electromagnetic fields, fluid dynamics and deformable bodies, a momentum density can be defined, and a continuum version of the conservation of momentum leads to equations such as the Navier–Stokes equations for fluids or the Cauchy momentum equation for deformable solids or fluids."]]
ERROR:root:orig selected_specific len14
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents10
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The momentum and position operators are related by the Heisenberg uncertainty principle. In continuous systems such as electromagnetic fields, fluid dynamics and deformable bodies, a momentum density can be defined, and a continuum version of the conservation of momentum leads to equations such as the Navier–Stokes equations for fluids or the Cauchy momentum equation for deformable solids or fluids.', "It is a vector quantity, possessing a magnitude and a direction. If m is an object's mass and v is its velocity (also a vector quantity), then the object's momentum p is : p = m v .", ' In Newtonian mechanics, linear momentum, translational momentum, or simply momentum is the product of the mass and velocity of an object.', 'm \\\\mathbf{v}.\\r\\n\\r\\nIn the International System of Units (SI), the unit of measurement of momentum is the kilogram metre per second', '\\\\mathbf{p} = m \\\\mathbf{v}.\\r\\n\\r\\nIn the International System of Units (SI),', "Newton's second law of motion states that the rate of change of a body's momentum is equal to the net force acting on it. Momentum depends on the frame of reference, but in any inertial frame it is a conserved quantity, meaning that if a closed system is not affected by external forces, its total linear momentum does not change.", "(kg⋅m/s), which is equivalent to the newton-second. Newton's second law of motion states that the rate of change of a body's momentum is equal to the net force acting on it.", 'It is an expression of one of the fundamental symmetries of space and time: translational symmetry. Advanced formulations of classical mechanics, Lagrangian and Hamiltonian mechanics, allow one to choose coordinate systems that incorporate symmetries and constraints.', 'Momentum depends on the frame of reference, but in any inertial frame it is a conserved quantity, meaning that if a closed system is not affected by external forces, its total linear momentum does not change. Momentum is also conserved in special relativity (with a modified formula) and, in a modified form, in electrodynamics, quantum mechanics, quantum field theory, and general relativity.']), ('questions', ['What is an example of continuous system?', 'What is the equation for the vector quantity p?', 'In what field is linear momentum the product of mass and velocity of an object?', 'In the SI, what is the unit of measurement of momentum?', 'What does SI stand for?', 'What does momentum depend on?', "What states that the rate of change of a body's momentum is equal to the net force acting on it?", 'What are two examples of advanced classical mechanics?', 'In what other area is momentum conserved?']), ('answers', ['electromagnetic fields', 'p = m v', 'Newtonian mechanics', 'metre', 'International System of Units', 'the frame of reference', "Newton's second law of motion", 'Lagrangian and Hamiltonian mechanics', 'special relativity']), ('options', [['gravity', 'the atmosphere', 'sound'], ['v = p m', 'p = (m)(v)'], ['physics', 'high school science', 'gymnastics'], ['cubic centimetre', 'gram', 'kilogram'], ['Systeme Internationale', 'Systeeme Internationale', 'Scientific International'], ['the observer', 'the direction of the force', 'the speed of the object'], ["Einstein's theory of relativity", "Newton's first law of motion", 'Higgs boson particle'], ['Lagrangian and Newtonian mechanics', 'Newtonian and relativity mechanics', 'Galilean and Hamiltonian mechanics'], ['classical mechanics', 'nuclear physics', 'quantum mechanics']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:27.656455
ERROR:root:api_check 0:00:00.357289
ERROR:root:payload: 'The causes of World War II are many and varied but in the end, it all boils down to the aggressive and expansionist policies of Adolf Hitler and his Nazi Party. Plus, the harsh Treaty of Versailles years before only laid the foundation of future conflicts. Other events such as the Spanish Civil War and the Japanese invasion of China only served to highlight the ineffectiveness of the League of Nations that had been created following the signing of the Treaty of Versailles. Both the conflicts saw the involvement of these future Axis powers and it showed that they could carry out their imperialistic whims with no consequences to be faced from other nations. As a result, the conflict became inevitable. World War II began on September 3, 1939, two days after Hitler’s armies invaded Poland. Poland’s sovereignty was guaranteed by Britain and France. When the protests by the two fell on Hitler’s deaf years, they declared war. The war would be fought between the Axis Powers consisting of Germany, Italy and Japan and the Allies – Britain, France, the Commonwealth countries, the United States and the Soviet Union. To know more about the differences between Axis and Central Powers, visit the linked article Initially, Hitler had signed a nonaggression pact with the Soviet Union. The Soviet Union launched an invasion of Poland from the east. It also took over Estonia, Latvia, Lithuania and launched campaigns against Finland. Nazi Germany followed up its invasion of Poland with the conquest of Denmark, Norway, and Belgium in the Spring of 1940. The invasion of France later lasted from 10 May 1940 – 25 June 1940. It was the pinnacle of the German ‘Blitzkrieg’ campaign. Only Britain stood against the full might of Germany. Italy joined the war in June 1940. To invade Britain, it was necessary to achieve total air superiority. Thus the German air force, the Luftwaffe, attacked southeast England and London in daylight raids. In August and September, the battle of Britain was fought over its skies in which the numerically inferior British Royal air force defeated the German air force. It shelved any future plans of the Germans to invade Britain, but it did not stop bombing campaigns that saw the devastation of many British cities and towns in the following months.'
ERROR:root:orig input: 'The causes of World War II are many and varied but in the end, it all boils down to the aggressive and expansionist policies of Adolf Hitler and his Nazi Party. Plus, the harsh Treaty of Versailles years before only laid the foundation of future conflicts. Other events such as the Spanish Civil War and the Japanese invasion of China only served to highlight the ineffectiveness of the League of Nations that had been created following the signing of the Treaty of Versailles. Both the conflicts saw the involvement of these future Axis powers and it showed that they could carry out their imperialistic whims with no consequences to be faced from other nations. As a result, the conflict became inevitable. World War II began on September 3, 1939, two days after Hitler’s armies invaded Poland. Poland’s sovereignty was guaranteed by Britain and France. When the protests by the two fell on Hitler’s deaf years, they declared war. The war would be fought between the Axis Powers consisting of Germany, Italy and Japan and the Allies – Britain, France, the Commonwealth countries, the United States and the Soviet Union. To know more about the differences between Axis and Central Powers, visit the linked article Initially, Hitler had signed a nonaggression pact with the Soviet Union. The Soviet Union launched an invasion of Poland from the east. It also took over Estonia, Latvia, Lithuania and launched campaigns against Finland. Nazi Germany followed up its invasion of Poland with the conquest of Denmark, Norway, and Belgium in the Spring of 1940. The invasion of France later lasted from 10 May 1940 – 25 June 1940. It was the pinnacle of the German ‘Blitzkrieg’ campaign. Only Britain stood against the full might of Germany. Italy joined the war in June 1940. To invade Britain, it was necessary to achieve total air superiority. Thus the German air force, the Luftwaffe, attacked southeast England and London in daylight raids. In August and September, the battle of Britain was fought over its skies in which the numerically inferior British Royal air force defeated the German air force. It shelved any future plans of the Germans to invade Britain, but it did not stop bombing campaigns that saw the devastation of many British cities and towns in the following months.'
ERROR:root:orig selected_specific len[[["In August and September, the battle of Britain was fought over its skies in which the numerically inferior British Royal air force defeated the German air force.",{},19],["Nazi Germany followed up its invasion of Poland with the conquest of Denmark, Norway, and Belgium in the Spring of 1940.",{},12],["World War II began on September 3, 1939, two days after Hitler’s armies invaded Poland.",{},5],["The invasion of France later lasted from 10 May 1940 – 25 June 1940.",{},13],["It shelved any future plans of the Germans to invade Britain, but it did not stop bombing campaigns that saw the devastation of many British cities and towns in the following months.",{},20],["The war would be fought between the Axis Powers consisting of Germany, Italy and Japan and the Allies – Britain, France, the Commonwealth countries, the United States and the Soviet Union.",{},8],["To know more about the differences between Axis and Central Powers, visit the linked article Initially, Hitler had signed a nonaggression pact with the Soviet Union.",{},9],["Italy joined the war in June 1940.",{},16]],["The causes of World War II are many and varied but in the end, it all boils down to the aggressive and expansionist policies of Adolf Hitler and his Nazi Party.","Plus, the harsh Treaty of Versailles years before only laid the foundation of future conflicts.","Other events such as the Spanish Civil War and the Japanese invasion of China only served to highlight the ineffectiveness of the League of Nations that had been created following the signing of the Treaty of Versailles.","Both the conflicts saw the involvement of these future Axis powers and it showed that Other events such as the Spanish Civil War and the Japanese invasion of China could carry out Other events such as the Spanish Civil War and the Japanese invasion of China's imperialistic whims with no consequences to be faced from other nations.","As a result, the conflict became inevitable.","World War II began on September 3, 1939, two days after Hitler’s armies invaded Poland.","Poland’s sovereignty was guaranteed by Britain and France.","When the protests by the two fell on Hitler’s deaf years, they declared war.","The war would be fought between the Axis Powers consisting of Germany, Italy and Japan and the Allies – Britain, France, the Commonwealth countries, the United States and the Soviet Union.","To know more about the differences between Axis and Central Powers, visit the linked article Initially, Hitler had signed a nonaggression pact with the Soviet Union.","The Soviet Union launched an invasion of Poland from the east.","It also took over Estonia, Latvia, Lithuania and launched campaigns against Finland.","Nazi Germany followed up its invasion of Poland with the conquest of Denmark, Norway, and Belgium in the Spring of 1940.","The invasion of France later lasted from 10 May 1940 – 25 June 1940.","It was the pinnacle of the German ‘Blitzkrieg’ campaign.","Only Britain stood against the full might of Germany.","Italy joined the war in June 1940.","To invade Britain, it was necessary to achieve total air superiority.","Thus the German air force, the Luftwaffe, attacked southeast England and London in daylight raids.","In August and September, the battle of Britain was fought over its skies in which the numerically inferior British Royal air force defeated the German air force.","the battle of Britain shelved any future plans of the Germans to invade Britain, but the battle of Britain did not stop bombing campaigns that saw the devastation of many British cities and towns in the following months."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents8
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Thus the German air force, the Luftwaffe, attacked southeast England and London in daylight raids. In August and September, the battle of Britain was fought over its skies in which the numerically inferior British Royal air force defeated the German air force.', 'It also took over Estonia, Latvia, Lithuania and launched campaigns against Finland. Nazi Germany followed up its invasion of Poland with the conquest of Denmark, Norway, and Belgium in the Spring of 1940.', 'As a result, the conflict became inevitable. World War II began on September 3, 1939, two days after Hitler’s armies invaded Poland.', 'Nazi Germany followed up its invasion of Poland with the conquest of Denmark, Norway, and Belgium in the Spring of 1940. The invasion of France later lasted from 10 May 1940 – 25 June 1940.', 'In August and September, the battle of Britain was fought over its skies in which the numerically inferior British Royal air force defeated the German air force. It shelved any future plans of the Germans to invade Britain, but it did not stop bombing campaigns that saw the devastation of many British cities and towns in the following months.', 'When the protests by the two fell on Hitler’s deaf years, they declared war. The war would be fought between the Axis Powers consisting of Germany, Italy and Japan and the Allies – Britain, France, the Commonwealth countries, the United States and the Soviet Union.', 'The war would be fought between the Axis Powers consisting of Germany, Italy and Japan and the Allies – Britain, France, the Commonwealth countries, the United States and the Soviet Union. To know more about the differences between Axis and Central Powers, visit the linked article Initially, Hitler had signed a nonaggression pact with the Soviet Union.', 'Only Britain stood against the full might of Germany. Italy joined the war in June 1940.']), ('questions', ['What was the result of the battle of Britain?', 'When did Nazi Germany conquer Denmark, Norway, and Belgium?', 'When did World War II begin?', 'How long did the invasion of France last?', 'What caused the destruction of many British cities and towns?', 'What countries were the Axis powers?', 'Who did Hitler sign a nonaggression pact with?', 'When did Italy join the war?']), ('answers', ['British Royal air force defeated the German air force', 'Spring of 1940', 'September 3, 1939', '10 May 1940 – 25 June 1940', 'bombing campaigns', 'Germany, Italy and Japan', 'the Soviet Union', 'June 1940']), ('options', [['German U-boats sank all British ships', 'British troops invaded Germany', 'Allied troops invaded France'], ['Autumn of 1940', 'Fall of 1939', 'Summer of 1940'], ['September 1, 1939', 'June 22, 1941'], ['1 September 1939 – 10 July 1940', '10 May 1940 – 10 July 1940', '1 September 1939 – 25 June 1940'], ['earthquakes', 'cholera epidemics', 'tornadoes'], ['Italy and the United States', 'Japan and the United States', 'Germany and the United States'], ['Great Britain', 'Poland', 'France'], ['May 1943', 'September 1943', 'December 1941']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:07.091207
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.318859
ERROR:root:payload: 'Providers can be implemented in any web frameworks. However, some of them have ready-to-use libraries to help integration: - Django django-oauth-toolkit - Flask flask-oauthlib - Pyramid pyramid-oauthlib - Bottle bottle-oauthlib For other frameworks, please get in touch by opening a GitHub issue or on Gitter OAuthLib community. If you have written an OAuthLib package that supports your favorite framework, please open a Pull Request to update the docs.'
ERROR:root:orig input: 'Providers can be implemented in any web frameworks. However, some of them have ready-to-use libraries to help integration: - Django django-oauth-toolkit - Flask flask-oauthlib - Pyramid pyramid-oauthlib - Bottle bottle-oauthlib For other frameworks, please get in touch by opening a GitHub issue or on Gitter OAuthLib community. If you have written an OAuthLib package that supports your favorite framework, please open a Pull Request to update the docs.'
ERROR:root:orig selected_specific len[[["If you have written an OAuthLib package that supports your favorite framework, please open a Pull Request to update the docs.",{},3]],["Providers can be implemented in any web frameworks.","However, some of Providers have ready-to-use libraries to help integration: - Django django-oauth-toolkit - Flask flask-oauthlib - Pyramid pyramid-oauthlib - Bottle bottle-oauthlib","For other frameworks, please get in touch by opening a GitHub issue or on Gitter OAuthLib community.","If you have written an OAuthLib package that supports your favorite framework, please open a Pull Request to update the docs."]]
ERROR:root:orig selected_specific len1
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['For other frameworks, please get in touch by opening a GitHub issue or on Gitter OAuthLib community. If you have written an OAuthLib package that supports your favorite framework, please open a Pull Request to update the docs.']), ('questions', ['What is the name of the request that you can open to update the OAuthLib documentation?']), ('answers', ['Pull Request']), ('options', [['Branch', 'GitHub Issue', 'Merge']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.645629
ERROR:root:api_check 0:00:00.342418
ERROR:root:payload: 'According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1] However, the earliest known human remains in South Asia date to 30,000 years ago. Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7,000 BCE. At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2] By 4,500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley Civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia. This civilisation flourished between 2,500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]\n\nEarly on in the second millennium BCE, persistent drought caused the population of the Indus Valley to scatter from large urban centres to villages. Around the same time, Indo-Aryan tribes moved into the Punjab from Central Asia in several waves of migration. Their Vedic Period (1500–500 BCE) was marked by the composition of the Vedas, large collections of hymns of these tribes. Their varna system, which evolved into the caste system, consisted of a hierarchy of priests, warriors, and free peasants. The pastoral and nomadic Indo-Aryans spread from the Punjab into the Gangetic plain, large swaths of which they deforested for agriculture usage. The composition of Vedic texts ended around 600 BCE, when a new, interregional culture arose. Small chieftaincies, or janapadas, were consolidated into larger states, or mahajanapadas, and a second urbanisation took place. This urbanisation was accompanied by the rise of new ascetic movements in Greater Magadha, including Jainism and Buddhism, which opposed the growing influence of Brahmanism and the primacy of rituals, presided by Brahmin priests, that had come to be associated with Vedic religion,[4] and gave rise to new religious concepts.[5] In response to the success of these movements, Vedic Brahmanism was synthesised with the preexisting religious cultures of the subcontinent, giving rise to Hinduism.'
ERROR:root:orig input: 'According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1] However, the earliest known human remains in South Asia date to 30,000 years ago. Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7,000 BCE. At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2] By 4,500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley Civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia. This civilisation flourished between 2,500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]\r\n\r\nEarly on in the second millennium BCE, persistent drought caused the population of the Indus Valley to scatter from large urban centres to villages. Around the same time, Indo-Aryan tribes moved into the Punjab from Central Asia in several waves of migration. Their Vedic Period (1500–500 BCE) was marked by the composition of the Vedas, large collections of hymns of these tribes. Their varna system, which evolved into the caste system, consisted of a hierarchy of priests, warriors, and free peasants. The pastoral and nomadic Indo-Aryans spread from the Punjab into the Gangetic plain, large swaths of which they deforested for agriculture usage. The composition of Vedic texts ended around 600 BCE, when a new, interregional culture arose. Small chieftaincies, or janapadas, were consolidated into larger states, or mahajanapadas, and a second urbanisation took place. This urbanisation was accompanied by the rise of new ascetic movements in Greater Magadha, including Jainism and Buddhism, which opposed the growing influence of Brahmanism and the primacy of rituals, presided by Brahmin priests, that had come to be associated with Vedic religion,[4] and gave rise to new religious concepts.[5] In response to the success of these movements, Vedic Brahmanism was synthesised with the preexisting religious cultures of the subcontinent, giving rise to Hinduism.\r\n\r\n'
ERROR:root:orig selected_specific len[[["By 4,500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley Civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia.",{},4],["According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1]",{},0],["At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2]",{},3],["This civilisation flourished between 2,500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]",{},5],["Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7,000 BCE.",{},2],["The pastoral and nomadic Indo-Aryans spread from the Punjab into the Gangetic plain, large swaths of which they deforested for agriculture usage.",{},10],["Early on in the second millennium BCE, persistent drought caused the population of the Indus Valley to scatter from large urban centres to villages.",{},6],["This urbanisation was accompanied by the rise of new ascetic movements in Greater Magadha, including Jainism and Buddhism, which opposed the growing influence of Brahmanism and the primacy of rituals, presided by Brahmin priests, that had come to be associated with Vedic religion,[4] and gave rise to new religious concepts.[5]",{},13],["The composition of Vedic texts ended around 600 BCE, when a new, interregional culture arose.",{},11],["Their Vedic Period (1500–500 BCE) was marked by the composition of the Vedas, large collections of hymns of these tribes.",{},8],["Small chieftaincies, or janapadas, were consolidated into larger states, or mahajanapadas, and a second urbanisation took place.",{},12],["Their varna system, which evolved into the caste system, consisted of a hierarchy of priests, warriors, and free peasants.",{},9],["In response to the success of these movements, Vedic Brahmanism was synthesised with the preexisting religious cultures of the subcontinent, giving rise to Hinduism.",{},14],["Around the same time, Indo-Aryan tribes moved into the Punjab from Central Asia in several waves of migration.",{},7]],["According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1]","However, the earliest known human remains in South Asia date to 30,000 years ago.","Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7,000 BCE.","At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2]","By 4,500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley Civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia.","This civilisation flourished between 2,500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]","Early on in the second millennium BCE, persistent drought caused the population of the Indus Valley to scatter from large urban centres to villages.","Around the same time, Indo-Aryan tribes moved into the Punjab from Central Asia in several waves of migration.","Indo-Aryan tribes's Vedic Period (1500–500 BCE) was marked by the composition of the Vedas, large collections of hymns of Indo-Aryan tribes.","Indo-Aryan tribes's varna system, which evolved into the caste system, consisted of a hierarchy of priests, warriors, and free peasants.","The pastoral and nomadic Indo-Aryans spread from the Punjab into the Gangetic plain, large swaths of which they deforested for agriculture usage.","The composition of Vedic texts ended around 600 BCE, when a new, interregional culture arose.","Small chieftaincies, or janapadas, were consolidated into larger states, or mahajanapadas, and a second urbanisation took place.","a second urbanisation was accompanied by the rise of new ascetic movements in Greater Magadha, including Jainism and Buddhism, which opposed the growing influence of Brahmanism and the primacy of rituals, presided by Brahmin priests, that had come to be associated with Vedic religion,[4] and gave rise to new religious concepts.[5]","In response to the success of these movements, Vedic Brahmanism was synthesised with the preexisting religious cultures of the subcontinent, giving rise to Hinduism."]]
ERROR:root:orig selected_specific len14
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.416944
ERROR:root:api_check 0:00:00.306515
ERROR:root:payload: 'According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1] However, the earliest known human remains in South Asia date to 30,000 years ago. Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7,000 BCE. At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2] By 4,500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley Civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia. This civilisation flourished between 2,500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]\n\nEarly on in the second millennium BCE, persistent drought caused the population of the Indus Valley to scatter from large urban centres to villages. Around the same time, Indo-Aryan tribes moved into the Punjab from Central Asia in several waves of migration. Their Vedic Period (1500–500 BCE) was marked by the composition of the Vedas, large collections of hymns of these tribes. Their varna system, which evolved into the caste system, consisted of a hierarchy of priests, warriors, and free peasants. The pastoral and nomadic Indo-Aryans spread from the Punjab into the Gangetic plain, large swaths of which they deforested for agriculture usage. The composition of Vedic texts ended around 600 BCE, when a new, interregional culture arose. Small chieftaincies, or janapadas, were consolidated into larger states, or mahajanapadas, and a second urbanisation took place. This urbanisation was accompanied by the rise of new ascetic movements in Greater Magadha, including Jainism and Buddhism, which opposed the growing influence of Brahmanism and the primacy of rituals, presided by Brahmin priests, that had come to be associated with Vedic religion,[4] and gave rise to new religious concepts.[5] In response to the success of these movements, Vedic Brahmanism was synthesised with the preexisting religious cultures of the subcontinent, giving rise to Hinduism.\n\n\nIndian Cultural Influence (Greater India)\nMost of the Indian subcontinent was conquered by the Maurya Empire during the 4th and 3rd centuries BCE. From the 3rd century BCE onwards Prakrit and Pali literature in the north and the Tamil Sangam literature in southern India started to flourish.[6][7] Wootz steel originated in south India in the 3rd century BCE and was exported to foreign countries.[8][9][10] During the Classical period, various parts of India were ruled by numerous dynasties for the next 1,500 years, among which the Gupta Empire stands out. This period, witnessing a Hindu religious and intellectual resurgence, is known as the classical or "Golden Age of India". During this period, aspects of Indian civilisation, administration, culture, and religion (Hinduism and Buddhism) spread to much of Asia, while kingdoms in southern India had maritime business links with the Middle East and the Mediterranean. Indian cultural influence spread over many parts of Southeast Asia, which led to the establishment of Indianised kingdoms in Southeast Asia (Greater India).[11][12]'
ERROR:root:orig input: 'According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1] However, the earliest known human remains in South Asia date to 30,000 years ago. Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7,000 BCE. At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2] By 4,500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley Civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia. This civilisation flourished between 2,500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]\r\n\r\nEarly on in the second millennium BCE, persistent drought caused the population of the Indus Valley to scatter from large urban centres to villages. Around the same time, Indo-Aryan tribes moved into the Punjab from Central Asia in several waves of migration. Their Vedic Period (1500–500 BCE) was marked by the composition of the Vedas, large collections of hymns of these tribes. Their varna system, which evolved into the caste system, consisted of a hierarchy of priests, warriors, and free peasants. The pastoral and nomadic Indo-Aryans spread from the Punjab into the Gangetic plain, large swaths of which they deforested for agriculture usage. The composition of Vedic texts ended around 600 BCE, when a new, interregional culture arose. Small chieftaincies, or janapadas, were consolidated into larger states, or mahajanapadas, and a second urbanisation took place. This urbanisation was accompanied by the rise of new ascetic movements in Greater Magadha, including Jainism and Buddhism, which opposed the growing influence of Brahmanism and the primacy of rituals, presided by Brahmin priests, that had come to be associated with Vedic religion,[4] and gave rise to new religious concepts.[5] In response to the success of these movements, Vedic Brahmanism was synthesised with the preexisting religious cultures of the subcontinent, giving rise to Hinduism.\r\n\r\n\r\nIndian Cultural Influence (Greater India)\r\nMost of the Indian subcontinent was conquered by the Maurya Empire during the 4th and 3rd centuries BCE. From the 3rd century BCE onwards Prakrit and Pali literature in the north and the Tamil Sangam literature in southern India started to flourish.[6][7] Wootz steel originated in south India in the 3rd century BCE and was exported to foreign countries.[8][9][10] During the Classical period, various parts of India were ruled by numerous dynasties for the next 1,500 years, among which the Gupta Empire stands out. This period, witnessing a Hindu religious and intellectual resurgence, is known as the classical or "Golden Age of India". During this period, aspects of Indian civilisation, administration, culture, and religion (Hinduism and Buddhism) spread to much of Asia, while kingdoms in southern India had maritime business links with the Middle East and the Mediterranean. Indian cultural influence spread over many parts of Southeast Asia, which led to the establishment of Indianised kingdoms in Southeast Asia (Greater India).[11][12]\r\n'
ERROR:root:orig selected_specific len[[["By 4,500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley Civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia.",{},4],["According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1]",{},0],["At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2]",{},3],["This civilisation flourished between 2,500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]",{},5],["Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7,000 BCE.",{},2],["The pastoral and nomadic Indo-Aryans spread from the Punjab into the Gangetic plain, large swaths of which they deforested for agriculture usage.",{},10],["Early on in the second millennium BCE, persistent drought caused the population of the Indus Valley to scatter from large urban centres to villages.",{},6],["Wootz steel originated in south India in the 3rd century BCE and was exported to foreign countries.[8][9][10]",{},18],["This urbanisation was accompanied by the rise of new ascetic movements in Greater Magadha, including Jainism and Buddhism, which opposed the growing influence of Brahmanism and the primacy of rituals, presided by Brahmin priests, that had come to be associated with Vedic religion,[4] and gave rise to new religious concepts.[5]",{},13],["During the Classical period, various parts of India were ruled by numerous dynasties for the next 1,500 years, among which the Gupta Empire stands out.",{},19],["The composition of Vedic texts ended around 600 BCE, when a new, interregional culture arose.",{},11],["Their Vedic Period (1500–500 BCE) was marked by the composition of the Vedas, large collections of hymns of these tribes.",{},8],["Most of the Indian subcontinent was conquered by the Maurya Empire during the 4th and 3rd centuries BCE.",{},16],["From the 3rd century BCE onwards Prakrit and Pali literature in the north and the Tamil Sangam literature in southern India started to flourish.[6][7]",{},17],["Indian cultural influence spread over many parts of Southeast Asia, which led to the establishment of Indianised kingdoms in Southeast Asia (Greater India).[11][12]",{},22],["Small chieftaincies, or janapadas, were consolidated into larger states, or mahajanapadas, and a second urbanisation took place.",{},12],["Their varna system, which evolved into the caste system, consisted of a hierarchy of priests, warriors, and free peasants.",{},9],["In response to the success of these movements, Vedic Brahmanism was synthesised with the preexisting religious cultures of the subcontinent, giving rise to Hinduism.",{},14],["During this period, aspects of Indian civilisation, administration, culture, and religion (Hinduism and Buddhism) spread to much of Asia, while kingdoms in southern India had maritime business links with the Middle East and the Mediterranean.",{},21],["This period, witnessing a Hindu religious and intellectual resurgence, is known as the classical or \"Golden Age of India\".",{},20],["Around the same time, Indo-Aryan tribes moved into the Punjab from Central Asia in several waves of migration.",{},7]],["According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1]","However, the earliest known human remains in South Asia date to 30,000 years ago.","Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7,000 BCE.","At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2]","By 4,500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley Civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia.","This civilisation flourished between 2,500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]","Early on in the second millennium BCE, persistent drought caused the population of the Indus Valley to scatter from large urban centres to villages.","Around the same time, Indo-Aryan tribes moved into the Punjab from Central Asia in several waves of migration.","Indo-Aryan tribes's Vedic Period (1500–500 BCE) was marked by the composition of the Vedas, large collections of hymns of Indo-Aryan tribes.","Indo-Aryan tribes's varna system, which evolved into the caste system, consisted of a hierarchy of priests, warriors, and free peasants.","The pastoral and nomadic Indo-Aryans spread from the Punjab into the Gangetic plain, large swaths of which they deforested for agriculture usage.","The composition of Vedic texts ended around 600 BCE, when a new, interregional culture arose.","Small chieftaincies, or janapadas, were consolidated into larger states, or mahajanapadas, and a second urbanisation took place.","a second urbanisation was accompanied by the rise of new ascetic movements in Greater Magadha, including Jainism and Buddhism, which opposed the growing influence of Brahmanism and the primacy of rituals, presided by Brahmin priests, that had come to be associated with Vedic religion,[4] and gave rise to new religious concepts.[5]","In response to the success of these movements, Vedic Brahmanism was synthesised with the preexisting religious cultures of the subcontinent, giving rise to Hinduism.","Indian Cultural Influence (Greater India)","Most of the Indian subcontinent was conquered by the Maurya Empire during the 4th and 3rd centuries BCE.","From the 3rd century BCE onwards Prakrit and Pali literature in the north and the Tamil Sangam literature in southern India started to flourish.[6][7]","Wootz steel originated in south India in the 3rd century BCE and was exported to foreign countries.[8][9][10]","During the Classical period, various parts of India were ruled by numerous dynasties for the next 1,500 years, among which the Gupta Empire stands out.","the Classical period, witnessing a Hindu religious and intellectual resurgence, is known as the classical or \"Golden Age of India\".","During the Classical period, aspects of Indian civilisation, administration, culture, and religion (Hinduism and Buddhism) spread to much of Asia, while kingdoms in southern India had maritime business links with the Middle East and the Mediterranean.","Indian cultural influence spread over many parts of Southeast Asia, which led to the establishment of Indianised kingdoms in Southeast Asia (Greater India).[11][12]"]]
ERROR:root:orig selected_specific len21
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.001869
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:03.527303
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001459
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'This civilisation flourished between  _________  in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]', 'answer': '2,500 BCE and 1900 BCE', 'options': ['1,500 BCE and 2,000 BCE', '2,000 BCE and 1,500 BCE', '1,000 BCE and 2,500 BCE'], 'context': 'This civilisation flourished between 2,500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]'}, {'question_statement': 'Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around  _________ .', 'answer': '7,000 BCE', 'options': ['2,000 BCE', '4,000 BCE', '10,000 BCE'], 'context': 'Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7,000 BCE.'}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2] By 4,500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley Civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia.', ' According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1]', 'This civilisation flourished between 2,500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]', 'Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7,000 BCE.']), ('questions', ['When did life spread more widely?', 'How many years ago did humans first arrive on the Indian subcontinent?', 'This civilisation flourished between  _________  in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]', 'Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around  _________ .']), ('answers', ['4,500 BCE', '73,000 and 55,000 years', '2,500 BCE and 1900 BCE', '7,000 BCE']), ('options', [['1,000 CE', '2 billion years ago', '5 million years ago'], ['73,000 and 73,000 years', '55,000 and 55,000 years', '55,000 and 73,000 years'], ['1,500 BCE and 2,000 BCE', '2,000 BCE and 1,500 BCE', '1,000 BCE and 2,500 BCE'], ['2,000 BCE', '4,000 BCE', '10,000 BCE']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2] By 4,500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley Civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia.', ' According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1]', 'This civilisation flourished between 2,500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]', 'Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7,000 BCE.']), ('questions', ['When did life spread more widely?', 'How many years ago did humans first arrive on the Indian subcontinent?', 'This civilisation flourished between  _________  in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]', 'Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around  _________ .']), ('answers', ['4,500 BCE', '73,000 and 55,000 years', '2,500 BCE and 1900 BCE', '7,000 BCE']), ('options', [['1,000 CE', '2 billion years ago', '5 million years ago'], ['73,000 and 73,000 years', '55,000 and 55,000 years', '55,000 and 73,000 years'], ['1,500 BCE and 2,000 BCE', '2,000 BCE and 1,500 BCE', '1,000 BCE and 2,500 BCE'], ['2,000 BCE', '4,000 BCE', '10,000 BCE']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:07.395719
ERROR:root:api_check 0:00:00.323813
ERROR:root:payload: 'Providers can be implemented in any web frameworks. However, some of them have ready-to-use libraries to help integration: - Django django-oauth-toolkit - Flask flask-oauthlib - Pyramid pyramid-oauthlib - Bottle bottle-oauthlib For other frameworks, please get in touch by opening a GitHub issue or on Gitter OAuthLib community. If you have written an OAuthLib package that supports your favorite framework, please open a Pull Request to update the docs.'
ERROR:root:orig input: 'Providers can be implemented in any web frameworks. However, some of them have ready-to-use libraries to help integration: - Django django-oauth-toolkit - Flask flask-oauthlib - Pyramid pyramid-oauthlib - Bottle bottle-oauthlib For other frameworks, please get in touch by opening a GitHub issue or on Gitter OAuthLib community. If you have written an OAuthLib package that supports your favorite framework, please open a Pull Request to update the docs.'
ERROR:root:orig selected_specific len[[["If you have written an OAuthLib package that supports your favorite framework, please open a Pull Request to update the docs.",{},3]],["Providers can be implemented in any web frameworks.","However, some of Providers have ready-to-use libraries to help integration: - Django django-oauth-toolkit - Flask flask-oauthlib - Pyramid pyramid-oauthlib - Bottle bottle-oauthlib","For other frameworks, please get in touch by opening a GitHub issue or on Gitter OAuthLib community.","If you have written an OAuthLib package that supports your favorite framework, please open a Pull Request to update the docs."]]
ERROR:root:orig selected_specific len1
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['For other frameworks, please get in touch by opening a GitHub issue or on Gitter OAuthLib community. If you have written an OAuthLib package that supports your favorite framework, please open a Pull Request to update the docs.']), ('questions', ['What is the name of the request that you can open to update the OAuthLib documentation?']), ('answers', ['Pull Request']), ('options', [['Branch', 'GitHub Issue', 'Merge']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.982733
ERROR:root:api_check 0:00:00.337460
ERROR:root:payload: 'Providers can be implemented in any web frameworks. However, some of them have ready-to-use libraries to help integration: - Django django-oauth-toolkit - Flask flask-oauthlib - Pyramid pyramid-oauthlib - Bottle bottle-oauthlib For other frameworks, please get in touch by opening a GitHub issue or on Gitter OAuthLib community. If you have written an OAuthLib package that supports your favorite framework, please open a Pull Request to update the docs.'
ERROR:root:orig input: 'Providers can be implemented in any web frameworks. However, some of them have ready-to-use libraries to help integration: - Django django-oauth-toolkit - Flask flask-oauthlib - Pyramid pyramid-oauthlib - Bottle bottle-oauthlib For other frameworks, please get in touch by opening a GitHub issue or on Gitter OAuthLib community. If you have written an OAuthLib package that supports your favorite framework, please open a Pull Request to update the docs.'
ERROR:root:orig selected_specific len[[["If you have written an OAuthLib package that supports your favorite framework, please open a Pull Request to update the docs.",{},3]],["Providers can be implemented in any web frameworks.","However, some of Providers have ready-to-use libraries to help integration: - Django django-oauth-toolkit - Flask flask-oauthlib - Pyramid pyramid-oauthlib - Bottle bottle-oauthlib","For other frameworks, please get in touch by opening a GitHub issue or on Gitter OAuthLib community.","If you have written an OAuthLib package that supports your favorite framework, please open a Pull Request to update the docs."]]
ERROR:root:orig selected_specific len1
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['For other frameworks, please get in touch by opening a GitHub issue or on Gitter OAuthLib community. If you have written an OAuthLib package that supports your favorite framework, please open a Pull Request to update the docs.']), ('questions', ['What is the name of the request that you can open to update the OAuthLib documentation?']), ('answers', ['Pull Request']), ('options', [['Branch', 'GitHub Issue', 'Merge']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:02.910199
ERROR:root:api_check 0:00:00.331169
ERROR:root:payload: 'According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1] However, the earliest known human remains in South Asia date to 30,000 years ago. Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7,000 BCE. At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2] By 4,500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley Civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia. This civilisation flourished between 2,500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]\n\nEarly on in the second millennium BCE, persistent drought caused the population of the Indus Valley to scatter from large urban centres to villages. Around the same time, Indo-Aryan tribes moved into the Punjab from Central Asia in several waves of migration. Their Vedic Period (1500–500 BCE) was marked by the composition of the Vedas, large collections of hymns of these tribes. Their varna system, which evolved into the caste system, consisted of a hierarchy of priests, warriors, and free peasants. The pastoral and nomadic Indo-Aryans spread from the Punjab into the Gangetic plain, large swaths of which they deforested for agriculture usage. The composition of Vedic texts ended around 600 BCE, when a new, interregional culture arose. Small chieftaincies, or janapadas, were consolidated into larger states, or mahajanapadas, and a second urbanisation took place. This urbanisation was accompanied by the rise of new ascetic movements in Greater Magadha, including Jainism and Buddhism, which opposed the growing influence of Brahmanism and the primacy of rituals, presided by Brahmin priests, that had come to be associated with Vedic religion,[4] and gave rise to new religious concepts.[5] In response to the success of these movements, Vedic Brahmanism was synthesised with the preexisting religious cultures of the subcontinent, giving rise to Hinduism.'
ERROR:root:orig input: 'According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1] However, the earliest known human remains in South Asia date to 30,000 years ago. Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7,000 BCE. At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2] By 4,500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley Civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia. This civilisation flourished between 2,500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]\r\n\r\nEarly on in the second millennium BCE, persistent drought caused the population of the Indus Valley to scatter from large urban centres to villages. Around the same time, Indo-Aryan tribes moved into the Punjab from Central Asia in several waves of migration. Their Vedic Period (1500–500 BCE) was marked by the composition of the Vedas, large collections of hymns of these tribes. Their varna system, which evolved into the caste system, consisted of a hierarchy of priests, warriors, and free peasants. The pastoral and nomadic Indo-Aryans spread from the Punjab into the Gangetic plain, large swaths of which they deforested for agriculture usage. The composition of Vedic texts ended around 600 BCE, when a new, interregional culture arose. Small chieftaincies, or janapadas, were consolidated into larger states, or mahajanapadas, and a second urbanisation took place. This urbanisation was accompanied by the rise of new ascetic movements in Greater Magadha, including Jainism and Buddhism, which opposed the growing influence of Brahmanism and the primacy of rituals, presided by Brahmin priests, that had come to be associated with Vedic religion,[4] and gave rise to new religious concepts.[5] In response to the success of these movements, Vedic Brahmanism was synthesised with the preexisting religious cultures of the subcontinent, giving rise to Hinduism.'
ERROR:root:orig selected_specific len[[["By 4,500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley Civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia.",{},4],["According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1]",{},0],["At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2]",{},3],["This civilisation flourished between 2,500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]",{},5],["Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7,000 BCE.",{},2],["The pastoral and nomadic Indo-Aryans spread from the Punjab into the Gangetic plain, large swaths of which they deforested for agriculture usage.",{},10],["Early on in the second millennium BCE, persistent drought caused the population of the Indus Valley to scatter from large urban centres to villages.",{},6],["This urbanisation was accompanied by the rise of new ascetic movements in Greater Magadha, including Jainism and Buddhism, which opposed the growing influence of Brahmanism and the primacy of rituals, presided by Brahmin priests, that had come to be associated with Vedic religion,[4] and gave rise to new religious concepts.[5]",{},13],["The composition of Vedic texts ended around 600 BCE, when a new, interregional culture arose.",{},11],["Their Vedic Period (1500–500 BCE) was marked by the composition of the Vedas, large collections of hymns of these tribes.",{},8],["Small chieftaincies, or janapadas, were consolidated into larger states, or mahajanapadas, and a second urbanisation took place.",{},12],["Their varna system, which evolved into the caste system, consisted of a hierarchy of priests, warriors, and free peasants.",{},9],["In response to the success of these movements, Vedic Brahmanism was synthesised with the preexisting religious cultures of the subcontinent, giving rise to Hinduism.",{},14],["Around the same time, Indo-Aryan tribes moved into the Punjab from Central Asia in several waves of migration.",{},7]],["According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1]","However, the earliest known human remains in South Asia date to 30,000 years ago.","Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7,000 BCE.","At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2]","By 4,500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley Civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia.","This civilisation flourished between 2,500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]","Early on in the second millennium BCE, persistent drought caused the population of the Indus Valley to scatter from large urban centres to villages.","Around the same time, Indo-Aryan tribes moved into the Punjab from Central Asia in several waves of migration.","Indo-Aryan tribes's Vedic Period (1500–500 BCE) was marked by the composition of the Vedas, large collections of hymns of Indo-Aryan tribes.","Indo-Aryan tribes's varna system, which evolved into the caste system, consisted of a hierarchy of priests, warriors, and free peasants.","The pastoral and nomadic Indo-Aryans spread from the Punjab into the Gangetic plain, large swaths of which they deforested for agriculture usage.","The composition of Vedic texts ended around 600 BCE, when a new, interregional culture arose.","Small chieftaincies, or janapadas, were consolidated into larger states, or mahajanapadas, and a second urbanisation took place.","a second urbanisation was accompanied by the rise of new ascetic movements in Greater Magadha, including Jainism and Buddhism, which opposed the growing influence of Brahmanism and the primacy of rituals, presided by Brahmin priests, that had come to be associated with Vedic religion,[4] and gave rise to new religious concepts.[5]","In response to the success of these movements, Vedic Brahmanism was synthesised with the preexisting religious cultures of the subcontinent, giving rise to Hinduism."]]
ERROR:root:orig selected_specific len14
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents10
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2] By 4,500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley Civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia.', ' According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1]', 'Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7,000 BCE. At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2]', 'By 4,500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley Civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia. This civilisation flourished between 2,500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]', 'However, the earliest known human remains in South Asia date to 30,000 years ago. Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7,000 BCE.', "Indo-Aryan tribes's varna system, which evolved into the caste system, consisted of a hierarchy of priests, warriors, and free peasants. The pastoral and nomadic Indo-Aryans spread from the Punjab into the Gangetic plain, large swaths of which they deforested for agriculture usage.", 'This civilisation flourished between 2,500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3] Early on in the second millennium BCE, persistent drought caused the population of the Indus Valley to scatter from large urban centres to villages.', 'Small chieftaincies, or janapadas, were consolidated into larger states, or mahajanapadas, and a second urbanisation took place. This urbanisation was accompanied by the rise of new ascetic movements in Greater Magadha, including Jainism and Buddhism, which opposed the growing influence of Brahmanism and the primacy of rituals, presided by Brahmin priests, that had come to be associated with Vedic religion,[4] and gave rise to new religious concepts.[5]', 'The pastoral and nomadic Indo-Aryans spread from the Punjab into the Gangetic plain, large swaths of which they deforested for agriculture usage. The composition of Vedic texts ended around 600 BCE, when a new, interregional culture arose.', 'Around the same time, Indo-Aryan tribes moved into the Punjab from Central Asia in several waves of migration. Their Vedic Period (1500–500 BCE) was marked by the composition of the Vedas, large collections of hymns of these tribes.']), ('questions', ['When did life spread more widely?', 'How many years ago did humans first arrive on the Indian subcontinent?', 'What is the main staple of the diet of Mehrgarh?', 'When did the Indus Valley Civilization flourish?', 'When did settled life begin?', 'Where did the Indo-Aryans spread?', 'What caused the population of the Indus Valley to scatter?', 'What religion did the new ascetic movements oppose?', 'When did the composition of Vedic texts end?', 'When was the Vedic Period?']), ('answers', ['4,500 BCE', '73,000 and 55,000 years', 'wheat and barley', '2,500 BCE and 1900 BCE', '7,000 BCE', 'the Gangetic plain', 'persistent drought', 'Brahmanism', 'around 600 BCE', '1500–500 BCE']), ('options', [['1,000 CE', '2 billion years ago', '5 million years ago'], ['73,000 and 73,000 years', '55,000 and 55,000 years', '55,000 and 73,000 years'], ['dates and milk', 'goat and sheep', 'pulses and fruits'], ['2200 BCE and 2200 BCE', '3500 BCE and 3500 BCE', '3500 BCE and 2200 BCE'], ['500,000 BCE', '50,000 BCE', '15,000 BCE'], ['the Indus River Valley', 'the Huang He (Yellow River)', 'the Deccan'], ['overcrowding in the cities', 'famine', 'attack by nomadic tribes'], ['Judaism', 'Christianity', 'Islam'], ['around 200 BCE', 'around 400 CE', 'no one knows for sure'], ['500–1000 BCE', '1000–500 BCE', '1000–1500 BCE']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:12.139585
ERROR:root:api_check 0:00:00.336433
ERROR:root:payload: 'Most of the Indian subcontinent was conquered by the Maurya Empire during the 4th and 3rd centuries BCE. From the 3rd century BCE onwards Prakrit and Pali literature in the north and the Tamil Sangam literature in southern India started to flourish.[6][7] Wootz steel originated in south India in the 3rd century BCE and was exported to foreign countries.[8][9][10] During the Classical period, various parts of India were ruled by numerous dynasties for the next 1,500 years, among which the Gupta Empire stands out. This period, witnessing a Hindu religious and intellectual resurgence, is known as the classical or "Golden Age of India". During this period, aspects of Indian civilisation, administration, culture, and religion (Hinduism and Buddhism) spread to much of Asia, while kingdoms in southern India had maritime business links with the Middle East and the Mediterranean. Indian cultural influence spread over many parts of Southeast Asia, which led to the establishment of Indianised kingdoms in Southeast Asia (Greater India).[11][12]\n\nThe most significant event between the 7th and 11th century was the Tripartite struggle centred on Kannauj that lasted for more than two centuries between the Pala Empire, Rashtrakuta Empire, and Gurjara-Pratihara Empire. Southern India saw the rise of multiple imperial powers from the middle of the fifth century, most notably the Chalukya, Chola, Pallava, Chera, Pandyan, and Western Chalukya Empires. The Chola dynasty conquered southern India and successfully invaded parts of Southeast Asia, Sri Lanka, the Maldives, and Bengal[13] in the 11th century.[14][15] In the early medieval period Indian mathematics, including Hindu numerals, influenced the development of mathematics and astronomy in the Arab world.[16]'
ERROR:root:orig input: 'Most of the Indian subcontinent was conquered by the Maurya Empire during the 4th and 3rd centuries BCE. From the 3rd century BCE onwards Prakrit and Pali literature in the north and the Tamil Sangam literature in southern India started to flourish.[6][7] Wootz steel originated in south India in the 3rd century BCE and was exported to foreign countries.[8][9][10] During the Classical period, various parts of India were ruled by numerous dynasties for the next 1,500 years, among which the Gupta Empire stands out. This period, witnessing a Hindu religious and intellectual resurgence, is known as the classical or "Golden Age of India". During this period, aspects of Indian civilisation, administration, culture, and religion (Hinduism and Buddhism) spread to much of Asia, while kingdoms in southern India had maritime business links with the Middle East and the Mediterranean. Indian cultural influence spread over many parts of Southeast Asia, which led to the establishment of Indianised kingdoms in Southeast Asia (Greater India).[11][12]\r\n\r\nThe most significant event between the 7th and 11th century was the Tripartite struggle centred on Kannauj that lasted for more than two centuries between the Pala Empire, Rashtrakuta Empire, and Gurjara-Pratihara Empire. Southern India saw the rise of multiple imperial powers from the middle of the fifth century, most notably the Chalukya, Chola, Pallava, Chera, Pandyan, and Western Chalukya Empires. The Chola dynasty conquered southern India and successfully invaded parts of Southeast Asia, Sri Lanka, the Maldives, and Bengal[13] in the 11th century.[14][15] In the early medieval period Indian mathematics, including Hindu numerals, influenced the development of mathematics and astronomy in the Arab world.[16]'
ERROR:root:orig selected_specific len[[["The Chola dynasty conquered southern India and successfully invaded parts of Southeast Asia, Sri Lanka, the Maldives, and Bengal[13] in the 11th century.[14][15]",{},10],["India).[11][12]  The most significant event between the 7th and 11th century was the Tripartite struggle centred on Kannauj that lasted for more than two centuries between the Pala Empire, Rashtrakuta Empire, and Gurjara-Pratihara Empire.",{},8],["Wootz steel originated in south India in the 3rd century BCE and was exported to foreign countries.[8][9][10]",{},2],["During the Classical period, various parts of India were ruled by numerous dynasties for the next 1,500 years, among which the Gupta Empire stands out.",{},3],["Most of the Indian subcontinent was conquered by the Maurya Empire during the 4th and 3rd centuries BCE.",{},0],["From the 3rd century BCE onwards Prakrit and Pali literature in the north and the Tamil Sangam literature in southern India started to flourish.[6][7]",{},1],["Southern India saw the rise of multiple imperial powers from the middle of the fifth century, most notably the Chalukya, Chola, Pallava, Chera, Pandyan, and Western Chalukya Empires.",{},9],["In the early medieval period Indian mathematics, including Hindu numerals, influenced the development of mathematics and astronomy in the Arab world.[16]",{},11],["During this period, aspects of Indian civilisation, administration, culture, and religion (Hinduism and Buddhism) spread to much of Asia, while kingdoms in southern India had maritime business links with the Middle East and the Mediterranean.",{},5],["Indian cultural influence spread over many parts of Southeast Asia, which led to the establishment of Indianised kingdoms in Southeast Asia",{},6],["This period, witnessing a Hindu religious and intellectual resurgence, is known as the classical or \"Golden Age of India\".",{},4]],["Most of the Indian subcontinent was conquered by the Maurya Empire during the 4th and 3rd centuries BCE.","From the 3rd century BCE onwards Prakrit and Pali literature in the north and the Tamil Sangam literature in southern India started to flourish.[6][7]","Wootz steel originated in south India in the 3rd century BCE and was exported to foreign countries.[8][9][10]","During the Classical period, various parts of India were ruled by numerous dynasties for the next 1,500 years, among which the Gupta Empire stands out.","the Classical period, witnessing a Hindu religious and intellectual resurgence, is known as the classical or \"Golden Age of India\".","During the Classical period, aspects of Indian civilisation, administration, culture, and religion (Hinduism and Buddhism) spread to much of Asia, while kingdoms in southern India had maritime business links with the Middle East and the Mediterranean.","Indian cultural influence spread over many parts of Southeast Asia, which led to the establishment of Indianised kingdoms in Southeast Asia","(Greater","India).[11][12]  The most significant event between the 7th and 11th century was the Tripartite struggle centred on Kannauj that lasted for more than two centuries between the Pala Empire, Rashtrakuta Empire, and Gurjara-Pratihara Empire.","Southern India saw the rise of multiple imperial powers from the middle of the fifth century, most notably the Chalukya, Chola, Pallava, Chera, Pandyan, and Western Chalukya Empires.","The Chola dynasty conquered southern India and successfully invaded parts of Southeast Asia, Sri Lanka, the Maldives, and Bengal[13] in the 11th century.[14][15]","In the early medieval period Indian mathematics, including Hindu numerals, influenced the development of mathematics and astronomy in the Arab world.[16]"]]
ERROR:root:orig selected_specific len11
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents10
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Southern India saw the rise of multiple imperial powers from the middle of the fifth century, most notably the Chalukya, Chola, Pallava, Chera, Pandyan, and Western Chalukya Empires. The Chola dynasty conquered southern India and successfully invaded parts of Southeast Asia, Sri Lanka, the Maldives, and Bengal[13] in the 11th century.[14][15]', '(Greater India).[11][12]  The most significant event between the 7th and 11th century was the Tripartite struggle centred on Kannauj that lasted for more than two centuries between the Pala Empire, Rashtrakuta Empire, and Gurjara-Pratihara Empire.', 'From the 3rd century BCE onwards Prakrit and Pali literature in the north and the Tamil Sangam literature in southern India started to flourish.[6][7] Wootz steel originated in south India in the 3rd century BCE and was exported to foreign countries.[8][9][10]', 'Wootz steel originated in south India in the 3rd century BCE and was exported to foreign countries.[8][9][10] During the Classical period, various parts of India were ruled by numerous dynasties for the next 1,500 years, among which the Gupta Empire stands out.', ' Most of the Indian subcontinent was conquered by the Maurya Empire during the 4th and 3rd centuries BCE.', 'Most of the Indian subcontinent was conquered by the Maurya Empire during the 4th and 3rd centuries BCE. From the 3rd century BCE onwards Prakrit and Pali literature in the north and the Tamil Sangam literature in southern India started to flourish.[6][7]', 'India).[11][12]  The most significant event between the 7th and 11th century was the Tripartite struggle centred on Kannauj that lasted for more than two centuries between the Pala Empire, Rashtrakuta Empire, and Gurjara-Pratihara Empire. Southern India saw the rise of multiple imperial powers from the middle of the fifth century, most notably the Chalukya, Chola, Pallava, Chera, Pandyan, and Western Chalukya Empires.', 'The Chola dynasty conquered southern India and successfully invaded parts of Southeast Asia, Sri Lanka, the Maldives, and Bengal[13] in the 11th century.[14][15] In the early medieval period Indian mathematics, including Hindu numerals, influenced the development of mathematics and astronomy in the Arab world.[16]', 'the Classical period, witnessing a Hindu religious and intellectual resurgence, is known as the classical or "Golden Age of India". During this period, aspects of Indian civilisation, administration, culture, and religion (Hinduism and Buddhism) spread to much of Asia, while kingdoms in southern India had maritime business links with the Middle East and the Mediterranean.', 'During the Classical period, aspects of Indian civilisation, administration, culture, and religion (Hinduism and Buddhism) spread to much of Asia, while kingdoms in southern India had maritime business links with the Middle East and the Mediterranean. Indian cultural influence spread over many parts of Southeast Asia, which led to the establishment of Indianised kingdoms in Southeast Asia']), ('questions', ['Which dynasty conquered southern India?', 'What was the Tripartite struggle centred on?', 'When did Wootz steel originate in south India?', 'What dynasty ruled India during the Classical period?', 'What empire conquered most of India?', 'When did Pali literature begin to flourish in the north of India?', 'When did the Empires of Chalukya, Chola, Pallava, Chera, and Pandyan rise?', 'What mathematical concept was influenced by the Chola dynasty?', 'What type of business links did southern India have?', 'What did Indian cultural influence lead to in Southeast Asia?']), ('answers', ['Chola', 'Kannauj', '3rd century BCE', 'Gupta Empire', 'Maurya Empire', '3rd century BCE', 'middle of the fifth century', 'Hindu numerals', 'maritime', 'Indianised kingdoms']), ('options', [['Hindu', 'Mughal', 'Gupta'], ['Gangetic Plain', 'Hinduism', 'Ayodhya'], ['200 CE', '6th century BCE', '1000 CE'], ['Maurya Empire', 'Rashtra Empire', 'Mughal Empire'], ['Rashtra Empire', 'Gupta Empire', 'Mughal Empire'], ["Shortly before the Buddha's death", "Shortly after the Buddha's death", '1st century BCE'], ['middle of the third century', 'middle of the first century', 'before the Christian era'], ['prime numbers', 'algebra', 'geometry'], ['rail', 'air', 'road'], ['Islamic empires', 'European colonialism', 'Chinese colonies']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:11.389024
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.315490
ERROR:root:payload: "linear momentum, translational momentum, or simply momentum is the product of the mass and velocity of an object. It is a vector quantity, possessing a magnitude and a direction. If m is an object's mass and v is its velocity (also a vector quantity), then the object's momentum p is : {\\displaystyle \\mathbf {p} =m\\mathbf {v} .}\\mathbf{p} = m \\mathbf{v}."
ERROR:root:orig input: "linear momentum, translational momentum, or simply momentum is the product of the mass and velocity of an object. It is a vector quantity, possessing a magnitude and a direction. If m is an object's mass and v is its velocity (also a vector quantity), then the object's momentum p is : {\\displaystyle \\mathbf {p} =m\\mathbf {v} .}\\mathbf{p} = m \\mathbf{v}."
ERROR:root:orig selected_specific len[[["If m is an object's mass and v is its velocity (also a vector quantity), then the object's momentum p is : {\\displaystyle \\mathbf",{},2],["linear momentum, translational momentum, or simply momentum is the product of the mass and velocity of an object.",{},0],["m\\mathbf {v} .}\\mathbf{p} = m \\mathbf{v}.",{},4],["{p} =",{},3]],["linear momentum, translational momentum, or simply momentum is the product of the mass and velocity of an object.","It is a vector quantity, possessing a magnitude and a direction.","If m is an object's mass and v is its velocity (also a vector quantity), then the object's momentum p is : {\\displaystyle \\mathbf","{p} =","m\\mathbf {v} .}\\mathbf{p} = m \\mathbf{v}."]]
ERROR:root:orig selected_specific len4
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000712
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:total before 0:00:01.044452
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001213
ERROR:root:output sents fb [{'Multiple Choice': {'questions': []}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ["It is a vector quantity, possessing a magnitude and a direction. If m is an object's mass and v is its velocity (also a vector quantity), then the object's momentum p is : {\\displaystyle \\mathbf"]), ('questions', ['If v is the velocity of an object, what is the vector quantity?']), ('answers', ['m']), ('options', [['w', 'x', 'v']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ["It is a vector quantity, possessing a magnitude and a direction. If m is an object's mass and v is its velocity (also a vector quantity), then the object's momentum p is : {\\displaystyle \\mathbf"]), ('questions', ['If v is the velocity of an object, what is the vector quantity?']), ('answers', ['m']), ('options', [['w', 'x', 'v']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['linear momentum, translational momentum, or simply momentum is the product of the mass and velocity of an object.']), ('incorrect', [['linear momentum, translational momentum, or simply momentum is the product of all three.', 'linear momentum, translational momentum, or simply momentum is the product of all the forces on the axis of the rotation.', 'linear momentum, translational momentum, or simply momentum is the product of an acceleration in velocity, as described in Section 4.2.']])]))])
ERROR:root:Request 0:00:06.600486
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.358518
ERROR:root:payload: '. According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1] However, the earliest known human remains in South Asia date to 30,000 years ago. Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7000 BCE. At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2] By 4500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia. This civilisation flourished between 2500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]\n\nEarly on in the second millennium BCE, persistent drought caused the population of the Indus Valley to scatter from large urban centres to villages. Around the same time, Indo-Aryan tribes moved into the Punjab from Central Asia in several waves of migration. Their Vedic Period (1500–500 BCE) was marked by the composition of the Vedas, large collections of hymns of these tribes. Their varna system, which evolved into the caste system, consisted of a hierarchy of priests, warriors, and free peasants. The pastoral and nomadic Indo-Aryans spread from the Punjab into the Gangetic plain, large swaths of which they deforested for agriculture usage. The composition of Vedic texts ended around 600 BCE, when a new, interregional culture arose. Small chieftaincies, or janapadas, were consolidated into larger states, or mahajanapadas, and a second urbanisation took place. This urbanisation was accompanied by the rise of new ascetic movements in Greater Magadha, including Jainism and Buddhism, which opposed the growing influence of Brahmanism and the primacy of rituals, presided by Brahmin priests, that had come to be associated with Vedic religion,[4] and gave rise to new religious concepts.[5] In response to the success of these movements, Vedic Brahmanism was synthesised with the preexisting religious cultures of the subcontinent, giving rise to Hinduism.s'
ERROR:root:orig input: '. According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1] However, the earliest known human remains in South Asia date to 30,000 years ago. Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7000 BCE. At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2] By 4500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia. This civilisation flourished between 2500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]\r\n\r\nEarly on in the second millennium BCE, persistent drought caused the population of the Indus Valley to scatter from large urban centres to villages. Around the same time, Indo-Aryan tribes moved into the Punjab from Central Asia in several waves of migration. Their Vedic Period (1500–500 BCE) was marked by the composition of the Vedas, large collections of hymns of these tribes. Their varna system, which evolved into the caste system, consisted of a hierarchy of priests, warriors, and free peasants. The pastoral and nomadic Indo-Aryans spread from the Punjab into the Gangetic plain, large swaths of which they deforested for agriculture usage. The composition of Vedic texts ended around 600 BCE, when a new, interregional culture arose. Small chieftaincies, or janapadas, were consolidated into larger states, or mahajanapadas, and a second urbanisation took place. This urbanisation was accompanied by the rise of new ascetic movements in Greater Magadha, including Jainism and Buddhism, which opposed the growing influence of Brahmanism and the primacy of rituals, presided by Brahmin priests, that had come to be associated with Vedic religion,[4] and gave rise to new religious concepts.[5] In response to the success of these movements, Vedic Brahmanism was synthesised with the preexisting religious cultures of the subcontinent, giving rise to Hinduism.s'
ERROR:root:orig selected_specific len[[["By 4500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia.",{},5],["According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1]",{},1],["At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2]",{},4],["This civilisation flourished between 2500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]",{},6],["The pastoral and nomadic Indo-Aryans spread from the Punjab into the Gangetic plain, large swaths of which they deforested for agriculture usage.",{},11],["Early on in the second millennium BCE, persistent drought caused the population of the Indus Valley to scatter from large urban centres to villages.",{},7],["Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7000 BCE.",{},3],["This urbanisation was accompanied by the rise of new ascetic movements in Greater Magadha, including Jainism and Buddhism, which opposed the growing influence of Brahmanism and the primacy of rituals, presided by Brahmin priests, that had come to be associated with Vedic religion,[4] and gave rise to new religious concepts.[5]",{},14],["The composition of Vedic texts ended around 600 BCE, when a new, interregional culture arose.",{},12],["Their Vedic Period (1500–500 BCE) was marked by the composition of the Vedas, large collections of hymns of these tribes.",{},9],["Small chieftaincies, or janapadas, were consolidated into larger states, or mahajanapadas, and a second urbanisation took place.",{},13],["Their varna system, which evolved into the caste system, consisted of a hierarchy of priests, warriors, and free peasants.",{},10],["In response to the success of these movements, Vedic Brahmanism was synthesised with the preexisting religious cultures of the subcontinent, giving rise to Hinduism.s",{},15],["Around the same time, Indo-Aryan tribes moved into the Punjab from Central Asia in several waves of migration.",{},8]],[".","According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1]","However, the earliest known human remains in South Asia date to 30,000 years ago.","Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7000 BCE.","At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2]","By 4500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia.","This civilisation flourished between 2500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]","Early on in the second millennium BCE, persistent drought caused the population of the Indus Valley to scatter from large urban centres to villages.","Around the same time, Indo-Aryan tribes moved into the Punjab from Central Asia in several waves of migration.","Indo-Aryan tribes's Vedic Period (1500–500 BCE) was marked by the composition of the Vedas, large collections of hymns of Indo-Aryan tribes.","Indo-Aryan tribes's varna system, which evolved into the caste system, consisted of a hierarchy of priests, warriors, and free peasants.","The pastoral and nomadic Indo-Aryans spread from the Punjab into the Gangetic plain, large swaths of which they deforested for agriculture usage.","The composition of Vedic texts ended around 600 BCE, when a new, interregional culture arose.","Small chieftaincies, or janapadas, were consolidated into larger states, or mahajanapadas, and a second urbanisation took place.","a second urbanisation was accompanied by the rise of new ascetic movements in Greater Magadha, including Jainism and Buddhism, which opposed the growing influence of Brahmanism and the primacy of rituals, presided by Brahmin priests, that had come to be associated with Vedic religion,[4] and gave rise to new religious concepts.[5]","In response to the success of these movements, Vedic Brahmanism was synthesised with the preexisting religious cultures of the subcontinent, giving rise to Hinduism.s"]]
ERROR:root:orig selected_specific len14
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.001713
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:03.269775
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001133
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 896, in new
    mcq_output = [call.result() for call in mcq_request]
  File "/datadrive/qgv1/text_prod/app.py", line 896, in <listcomp>
    mcq_output = [call.result() for call in mcq_request]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 94, in query
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.348176
ERROR:root:payload: 'According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1] However, the earliest known human remains in South Asia date to 30,000 years ago. Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7000 BCE. At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2] By 4500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia. This civilisation flourished between 2500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]\n\nEarly on in the second millennium BCE, persistent drought caused the population of the Indus Valley to scatter from large urban centres to villages. Around the same time, Indo-Aryan tribes moved into the Punjab from Central Asia in several waves of migration. Their Vedic Period (1500–500 BCE) was marked by the composition of the Vedas, large collections of hymns of these tribes. Their varna system, which evolved into the caste system, consisted of a hierarchy of priests, warriors, and free peasants. The pastoral and nomadic Indo-Aryans spread from the Punjab into the Gangetic plain, large swaths of which they deforested for agriculture usage. The composition of Vedic texts ended around 600 BCE, when a new, interregional culture arose. Small chieftaincies, or janapadas, were consolidated into larger states, or mahajanapadas, and a second urbanisation took place. This urbanisation was accompanied by the rise of new ascetic movements in Greater Magadha, including Jainism and Buddhism, which opposed the growing influence of Brahmanism and the primacy of rituals, presided by Brahmin priests, that had come to be associated with Vedic religion,[4] and gave rise to new religious concepts.[5] In response to the success of these movements, Vedic Brahmanism was synthesised with the preexisting religious cultures of the subcontinent, giving rise to Hinduism.'
ERROR:root:orig input: 'According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1] However, the earliest known human remains in South Asia date to 30,000 years ago. Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7000 BCE. At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2] By 4500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia. This civilisation flourished between 2500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]\r\n\r\nEarly on in the second millennium BCE, persistent drought caused the population of the Indus Valley to scatter from large urban centres to villages. Around the same time, Indo-Aryan tribes moved into the Punjab from Central Asia in several waves of migration. Their Vedic Period (1500–500 BCE) was marked by the composition of the Vedas, large collections of hymns of these tribes. Their varna system, which evolved into the caste system, consisted of a hierarchy of priests, warriors, and free peasants. The pastoral and nomadic Indo-Aryans spread from the Punjab into the Gangetic plain, large swaths of which they deforested for agriculture usage. The composition of Vedic texts ended around 600 BCE, when a new, interregional culture arose. Small chieftaincies, or janapadas, were consolidated into larger states, or mahajanapadas, and a second urbanisation took place. This urbanisation was accompanied by the rise of new ascetic movements in Greater Magadha, including Jainism and Buddhism, which opposed the growing influence of Brahmanism and the primacy of rituals, presided by Brahmin priests, that had come to be associated with Vedic religion,[4] and gave rise to new religious concepts.[5] In response to the success of these movements, Vedic Brahmanism was synthesised with the preexisting religious cultures of the subcontinent, giving rise to Hinduism.'
ERROR:root:orig selected_specific len[[["By 4500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia.",{},4],["According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1]",{},0],["At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2]",{},3],["This civilisation flourished between 2500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]",{},5],["The pastoral and nomadic Indo-Aryans spread from the Punjab into the Gangetic plain, large swaths of which they deforested for agriculture usage.",{},10],["Early on in the second millennium BCE, persistent drought caused the population of the Indus Valley to scatter from large urban centres to villages.",{},6],["Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7000 BCE.",{},2],["This urbanisation was accompanied by the rise of new ascetic movements in Greater Magadha, including Jainism and Buddhism, which opposed the growing influence of Brahmanism and the primacy of rituals, presided by Brahmin priests, that had come to be associated with Vedic religion,[4] and gave rise to new religious concepts.[5]",{},13],["The composition of Vedic texts ended around 600 BCE, when a new, interregional culture arose.",{},11],["Their Vedic Period (1500–500 BCE) was marked by the composition of the Vedas, large collections of hymns of these tribes.",{},8],["Small chieftaincies, or janapadas, were consolidated into larger states, or mahajanapadas, and a second urbanisation took place.",{},12],["Their varna system, which evolved into the caste system, consisted of a hierarchy of priests, warriors, and free peasants.",{},9],["In response to the success of these movements, Vedic Brahmanism was synthesised with the preexisting religious cultures of the subcontinent, giving rise to Hinduism.",{},14],["Around the same time, Indo-Aryan tribes moved into the Punjab from Central Asia in several waves of migration.",{},7]],["According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1]","However, the earliest known human remains in South Asia date to 30,000 years ago.","Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7000 BCE.","At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2]","By 4500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia.","This civilisation flourished between 2500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]","Early on in the second millennium BCE, persistent drought caused the population of the Indus Valley to scatter from large urban centres to villages.","Around the same time, Indo-Aryan tribes moved into the Punjab from Central Asia in several waves of migration.","Indo-Aryan tribes's Vedic Period (1500–500 BCE) was marked by the composition of the Vedas, large collections of hymns of Indo-Aryan tribes.","Indo-Aryan tribes's varna system, which evolved into the caste system, consisted of a hierarchy of priests, warriors, and free peasants.","The pastoral and nomadic Indo-Aryans spread from the Punjab into the Gangetic plain, large swaths of which they deforested for agriculture usage.","The composition of Vedic texts ended around 600 BCE, when a new, interregional culture arose.","Small chieftaincies, or janapadas, were consolidated into larger states, or mahajanapadas, and a second urbanisation took place.","a second urbanisation was accompanied by the rise of new ascetic movements in Greater Magadha, including Jainism and Buddhism, which opposed the growing influence of Brahmanism and the primacy of rituals, presided by Brahmin priests, that had come to be associated with Vedic religion,[4] and gave rise to new religious concepts.[5]","In response to the success of these movements, Vedic Brahmanism was synthesised with the preexisting religious cultures of the subcontinent, giving rise to Hinduism."]]
ERROR:root:orig selected_specific len14
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000630
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:02.529341
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001031
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 896, in new
    mcq_output = [call.result() for call in mcq_request]
  File "/datadrive/qgv1/text_prod/app.py", line 896, in <listcomp>
    mcq_output = [call.result() for call in mcq_request]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 94, in query
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.331967
ERROR:root:payload: 'According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1] However, the earliest known human remains in South Asia date to 30,000 years ago. Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7000 BCE. At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2] By 4500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia. This civilisation flourished between 2500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]'
ERROR:root:orig input: 'According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1] However, the earliest known human remains in South Asia date to 30,000 years ago. Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7000 BCE. At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2] By 4500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia. This civilisation flourished between 2500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]'
ERROR:root:orig selected_specific len[[["By 4500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia.",{},4],["According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1]",{},0],["At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2]",{},3],["This civilisation flourished between 2500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]",{},5],["Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7000 BCE.",{},2]],["According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1]","However, the earliest known human remains in South Asia date to 30,000 years ago.","Settled life, which involves the transition from foraging to farming and pastoralism, began in South Asia around 7000 BCE.","At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2]","By 4500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia.","This civilisation flourished between 2500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]"]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000569
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:00.957522
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.000407
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'This civilisation flourished  _________  in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]', 'answer': 'between 2500 BCE and 1900 BCE', 'options': ['between 2500 BCE and 1900 CE', 'between 1900 BCE and 1000 BCE', 'between 1000 BCE and 2500 BCE'], 'context': 'This civilisation flourished between 2500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]'}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2] By 4500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia.', ' According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1]', 'This civilisation flourished between 2500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]']), ('questions', ['When did life spread more widely?', 'How many years ago did humans first arrive on the Indian subcontinent?', 'This civilisation flourished  _________  in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]']), ('answers', ['4500 BCE', '73,000 and 55,000 years', 'between 2500 BCE and 1900 BCE']), ('options', [['1450 CE', '3500 BCE'], ['55,000 and 73,000 years', '73,000 and 73,000 years', '55,000 and 55,000 years'], ['between 2500 BCE and 1900 CE', 'between 1900 BCE and 1000 BCE', 'between 1000 BCE and 2500 BCE']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['At the site of Mehrgarh presence can be documented of the domestication of wheat and barley, rapidly followed by that of goats, sheep, and cattle.[2] By 4500 BCE, settled life had spread more widely,[2] and began to gradually evolve into the Indus Valley civilization, an early civilization of the Old world, which was contemporaneous with Ancient Egypt and Mesopotamia.', ' According to consensus in modern genetics, anatomically modern humans first arrived on the Indian subcontinent from Africa between 73,000 and 55,000 years ago.[1]', 'This civilisation flourished between 2500 BCE and 1900 BCE in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]']), ('questions', ['When did life spread more widely?', 'How many years ago did humans first arrive on the Indian subcontinent?', 'This civilisation flourished  _________  in what today is Pakistan and north-western India, and was noted for its urban planning, baked brick houses, elaborate drainage, and water supply.[3]']), ('answers', ['4500 BCE', '73,000 and 55,000 years', 'between 2500 BCE and 1900 BCE']), ('options', [['1450 CE', '3500 BCE'], ['55,000 and 73,000 years', '73,000 and 73,000 years', '55,000 and 55,000 years'], ['between 2500 BCE and 1900 CE', 'between 1900 BCE and 1000 BCE', 'between 1000 BCE and 2500 BCE']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:13.823656
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:root:api_check 0:00:00.355326
ERROR:root:payload: 'Ancient Greece was comprised of hundreds of essentially independent city-states, partly due to the geography of Greece. Communities were separated by mountains, hills, and water. Rather than a unified nation, Ancient Greece was more like a network of communities with a shared religion and language that sometimes led to a sense of common belonging. Despite these cultural commonalities, affiliations between city-states were loose and short-lived. The Delian and Peloponnesian Leagues, for example, were dominated by one strong city-state. Another good example is how conflict with Persia prompted several city-states to unify against a common enemy, but not all Greek city-states were involved; further, once the external threat was diminished, conflict between the city-states resumed. Even as Greeks colonized the Mediterranean and Black seas, new colonies, while recognizing a “mother” city-state, were largely independent. Even after Philip II of Macedon brought mainland Greece under his League of Corinth, the individual city-states still retained much of their essential independence. Ancient Greeks were unified by traditions like the panhellenic games and other athletic competitions. These competitions also had religious significance and were often tied to Greek mythology. The most significant of these games were the Olympic Games. The ancient Olympic Games were a sporting event held every four years at the sacred site of Olympia in honor of Zeus, the supreme god of Greek religion. Involving participants and spectators from all over Greece and beyond, the Olympic Games were the most important cultural event in ancient Greece and were held from 776 BCE to 393 CE, a run of 293 consecutive Olympiads. In the ancient Greek world, religion was personal, direct, and present in all areas of life. It revolved around myths which explained the origins of mankind and gave the gods a human face. Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek. Individuals in Greek society probably had varying degrees of religious belief—and some may have been skeptics—but Greek society could only function as it did because certain fundamentals were generally accepted throughout society: the gods existed, they could influence human affairs, and they welcomed and responded to acts of piety and worship.'
ERROR:root:orig input: 'Ancient Greece was comprised of hundreds of essentially independent city-states, partly due to the geography of Greece. Communities were separated by mountains, hills, and water. Rather than a unified nation, Ancient Greece was more like a network of communities with a shared religion and language that sometimes led to a sense of common belonging. Despite these cultural commonalities, affiliations between city-states were loose and short-lived. The Delian and Peloponnesian Leagues, for example, were dominated by one strong city-state. Another good example is how conflict with Persia prompted several city-states to unify against a common enemy, but not all Greek city-states were involved; further, once the external threat was diminished, conflict between the city-states resumed. Even as Greeks colonized the Mediterranean and Black seas, new colonies, while recognizing a “mother” city-state, were largely independent. Even after Philip II of Macedon brought mainland Greece under his League of Corinth, the individual city-states still retained much of their essential independence. Ancient Greeks were unified by traditions like the panhellenic games and other athletic competitions. These competitions also had religious significance and were often tied to Greek mythology. The most significant of these games were the Olympic Games. The ancient Olympic Games were a sporting event held every four years at the sacred site of Olympia in honor of Zeus, the supreme god of Greek religion. Involving participants and spectators from all over Greece and beyond, the Olympic Games were the most important cultural event in ancient Greece and were held from 776 BCE to 393 CE, a run of 293 consecutive Olympiads. In the ancient Greek world, religion was personal, direct, and present in all areas of life. It revolved around myths which explained the origins of mankind and gave the gods a human face. Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek. Individuals in Greek society probably had varying degrees of religious belief—and some may have been skeptics—but Greek society could only function as it did because certain fundamentals were generally accepted throughout society: the gods existed, they could influence human affairs, and they welcomed and responded to acts of piety and worship.'
ERROR:root:orig selected_specific len[[["The ancient Olympic Games were a sporting event held every four years at the sacred site of Olympia in honor of Zeus, the supreme god of Greek religion.",{},11],["Involving participants and spectators from all over Greece and beyond, the Olympic Games were the most important cultural event in ancient Greece and were held from 776 BCE to 393 CE, a run of 293 consecutive Olympiads.",{},12],["Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek.",{},15],["Ancient Greece was comprised of hundreds of essentially independent city-states, partly due to the geography of Greece.",{},0]],["Ancient Greece was comprised of hundreds of essentially independent city-states, partly due to the geography of Greece.","Communities were separated by mountains, hills, and water.","Rather than a unified nation, Ancient Greece was more like a network of communities with a shared religion and language that sometimes led to a sense of common belonging.","Despite these cultural commonalities, affiliations between city-states were loose and short-lived.","The Delian and Peloponnesian Leagues, for example, were dominated by one strong city-state.","Another good example is how conflict with Persia prompted several city-states to unify against a common enemy, but not all Greek city-states were involved; further, once the external threat was diminished, conflict between the city-states resumed.","Even as Greeks colonized the Mediterranean and Black seas, new colonies, while recognizing a “mother” city-state, were largely independent.","Even after Philip II of Macedon brought mainland Greece under his League of Corinth, the individual city-states still retained much of their essential independence.","Ancient Greeks were unified by traditions like the panhellenic games and other athletic competitions.","the panhellenic games and other athletic competitions also had religious significance and were often tied to Greek mythology.","The most significant of the panhellenic games and other athletic competitions were the Olympic Games.","The ancient Olympic Games were a sporting event held every four years at the sacred site of Olympia in honor of Zeus, the supreme god of Greek religion.","Involving participants and spectators from all over Greece and beyond, the Olympic Games were the most important cultural event in ancient Greece and were held from 776 BCE to 393 CE, a run of 293 consecutive Olympiads.","In the ancient Greek world, religion was personal, direct, and present in all areas of life.","It revolved around myths which explained the origins of mankind and gave the gods a human face.","Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek.","Individuals in Greek society probably had varying degrees of religious belief—and some may have been skeptics—but Greek society could only function as it did because certain fundamentals were generally accepted throughout society",": the gods existed, they could influence human affairs, and they welcomed and responded to acts of piety and worship."]]
ERROR:root:orig selected_specific len4
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents4
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The most significant of the panhellenic games and other athletic competitions were the Olympic Games. The ancient Olympic Games were a sporting event held every four years at the sacred site of Olympia in honor of Zeus, the supreme god of Greek religion.', 'The ancient Olympic Games were a sporting event held every four years at the sacred site of Olympia in honor of Zeus, the supreme god of Greek religion. Involving participants and spectators from all over Greece and beyond, the Olympic Games were the most important cultural event in ancient Greece and were held from 776 BCE to 393 CE, a run of 293 consecutive Olympiads.', 'It revolved around myths which explained the origins of mankind and gave the gods a human face. Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek.', ' Ancient Greece was comprised of hundreds of essentially independent city-states, partly due to the geography of Greece.']), ('questions', ['Who was the supreme god of Greek religion?', 'How many consecutive Olympiads were held?', 'What dominated the urban landscape of Greece?', 'How many independent city-states were in Ancient Greece?']), ('answers', ['Zeus', '293', 'Temples', 'hundreds']), ('options', [['Poseidon', 'Aphrodite', 'Hercules'], ['15', '13', '18'], ['Government buildings', 'The Parthenon', 'Shops'], ['two', 'thirteen', 'fifty-two']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:06.956264
ERROR:root:api_check 0:00:00.363960
ERROR:root:payload: 'Ancient Greece was comprised of hundreds of essentially independent city-states, partly due to the geography of Greece. Communities were separated by mountains, hills, and water. Rather than a unified nation, Ancient Greece was more like a network of communities with a shared religion and language that sometimes led to a sense of common belonging. Despite these cultural commonalities, affiliations between city-states were loose and short-lived. The Delian and Peloponnesian Leagues, for example, were dominated by one strong city-state. Another good example is how conflict with Persia prompted several city-states to unify against a common enemy, but not all Greek city-states were involved; further, once the external threat was diminished, conflict between the city-states resumed. Even as Greeks colonized the Mediterranean and Black seas, new colonies, while recognizing a “mother” city-state, were largely independent. Even after Philip II of Macedon brought mainland Greece under his League of Corinth, the individual city-states still retained much of their essential independence. Ancient Greeks were unified by traditions like the panhellenic games and other athletic competitions. These competitions also had religious significance and were often tied to Greek mythology. The most significant of these games were the Olympic Games. The ancient Olympic Games were a sporting event held every four years at the sacred site of Olympia in honor of Zeus, the supreme god of Greek religion. Involving participants and spectators from all over Greece and beyond, the Olympic Games were the most important cultural event in ancient Greece and were held from 776 BCE to 393 CE, a run of 293 consecutive Olympiads. In the ancient Greek world, religion was personal, direct, and present in all areas of life. It revolved around myths which explained the origins of mankind and gave the gods a human face. Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek. Individuals in Greek society probably had varying degrees of religious belief—and some may have been skeptics—but Greek society could only function as it did because certain fundamentals were generally accepted throughout society: the gods existed, they could influence human affairs, and they welcomed and responded to acts of piety and worship.'
ERROR:root:orig input: 'Ancient Greece was comprised of hundreds of essentially independent city-states, partly due to the geography of Greece. Communities were separated by mountains, hills, and water. Rather than a unified nation, Ancient Greece was more like a network of communities with a shared religion and language that sometimes led to a sense of common belonging. Despite these cultural commonalities, affiliations between city-states were loose and short-lived. The Delian and Peloponnesian Leagues, for example, were dominated by one strong city-state. Another good example is how conflict with Persia prompted several city-states to unify against a common enemy, but not all Greek city-states were involved; further, once the external threat was diminished, conflict between the city-states resumed. Even as Greeks colonized the Mediterranean and Black seas, new colonies, while recognizing a “mother” city-state, were largely independent. Even after Philip II of Macedon brought mainland Greece under his League of Corinth, the individual city-states still retained much of their essential independence. Ancient Greeks were unified by traditions like the panhellenic games and other athletic competitions. These competitions also had religious significance and were often tied to Greek mythology. The most significant of these games were the Olympic Games. The ancient Olympic Games were a sporting event held every four years at the sacred site of Olympia in honor of Zeus, the supreme god of Greek religion. Involving participants and spectators from all over Greece and beyond, the Olympic Games were the most important cultural event in ancient Greece and were held from 776 BCE to 393 CE, a run of 293 consecutive Olympiads. In the ancient Greek world, religion was personal, direct, and present in all areas of life. It revolved around myths which explained the origins of mankind and gave the gods a human face. Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek. Individuals in Greek society probably had varying degrees of religious belief—and some may have been skeptics—but Greek society could only function as it did because certain fundamentals were generally accepted throughout society: the gods existed, they could influence human affairs, and they welcomed and responded to acts of piety and worship.'
ERROR:root:orig selected_specific len[[["The ancient Olympic Games were a sporting event held every four years at the sacred site of Olympia in honor of Zeus, the supreme god of Greek religion.",{},11],["Involving participants and spectators from all over Greece and beyond, the Olympic Games were the most important cultural event in ancient Greece and were held from 776 BCE to 393 CE, a run of 293 consecutive Olympiads.",{},12],["Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek.",{},15],["Ancient Greece was comprised of hundreds of essentially independent city-states, partly due to the geography of Greece.",{},0]],["Ancient Greece was comprised of hundreds of essentially independent city-states, partly due to the geography of Greece.","Communities were separated by mountains, hills, and water.","Rather than a unified nation, Ancient Greece was more like a network of communities with a shared religion and language that sometimes led to a sense of common belonging.","Despite these cultural commonalities, affiliations between city-states were loose and short-lived.","The Delian and Peloponnesian Leagues, for example, were dominated by one strong city-state.","Another good example is how conflict with Persia prompted several city-states to unify against a common enemy, but not all Greek city-states were involved; further, once the external threat was diminished, conflict between the city-states resumed.","Even as Greeks colonized the Mediterranean and Black seas, new colonies, while recognizing a “mother” city-state, were largely independent.","Even after Philip II of Macedon brought mainland Greece under his League of Corinth, the individual city-states still retained much of their essential independence.","Ancient Greeks were unified by traditions like the panhellenic games and other athletic competitions.","the panhellenic games and other athletic competitions also had religious significance and were often tied to Greek mythology.","The most significant of the panhellenic games and other athletic competitions were the Olympic Games.","The ancient Olympic Games were a sporting event held every four years at the sacred site of Olympia in honor of Zeus, the supreme god of Greek religion.","Involving participants and spectators from all over Greece and beyond, the Olympic Games were the most important cultural event in ancient Greece and were held from 776 BCE to 393 CE, a run of 293 consecutive Olympiads.","In the ancient Greek world, religion was personal, direct, and present in all areas of life.","It revolved around myths which explained the origins of mankind and gave the gods a human face.","Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek.","Individuals in Greek society probably had varying degrees of religious belief—and some may have been skeptics—but Greek society could only function as it did because certain fundamentals were generally accepted throughout society",": the gods existed, they could influence human affairs, and they welcomed and responded to acts of piety and worship."]]
ERROR:root:orig selected_specific len4
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents4
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The most significant of the panhellenic games and other athletic competitions were the Olympic Games. The ancient Olympic Games were a sporting event held every four years at the sacred site of Olympia in honor of Zeus, the supreme god of Greek religion.', 'The ancient Olympic Games were a sporting event held every four years at the sacred site of Olympia in honor of Zeus, the supreme god of Greek religion. Involving participants and spectators from all over Greece and beyond, the Olympic Games were the most important cultural event in ancient Greece and were held from 776 BCE to 393 CE, a run of 293 consecutive Olympiads.', 'It revolved around myths which explained the origins of mankind and gave the gods a human face. Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek.', ' Ancient Greece was comprised of hundreds of essentially independent city-states, partly due to the geography of Greece.']), ('questions', ['Who was the supreme god of Greek religion?', 'How many consecutive Olympiads were held?', 'What dominated the urban landscape of Greece?', 'How many independent city-states were in Ancient Greece?']), ('answers', ['Zeus', '293', 'Temples', 'hundreds']), ('options', [['Ares', 'Poseidon', 'Hera'], ['15', '13', '18'], ['Government buildings', 'The Parthenon', 'Shops'], ['two', 'thirteen', 'fifty-two']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:14.343350
ERROR:root:api_check 0:00:00.322959
ERROR:root:payload: 'Ancient Greece was comprised of hundreds of essentially independent city-states, partly due to the geography of Greece. Communities were separated by mountains, hills, and water. Rather than a unified nation, Ancient Greece was more like a network of communities with a shared religion and language that sometimes led to a sense of common belonging. Despite these cultural commonalities, affiliations between city-states were loose and short-lived. The Delian and Peloponnesian Leagues, for example, were dominated by one strong city-state. Another good example is how conflict with Persia prompted several city-states to unify against a common enemy, but not all Greek city-states were involved; further, once the external threat was diminished, conflict between the city-states resumed. Even as Greeks colonized the Mediterranean and Black seas, new colonies, while recognizing a “mother” city-state, were largely independent. Even after Philip II of Macedon brought mainland Greece under his League of Corinth, the individual city-states still retained much of their essential independence. Ancient Greeks were unified by traditions like the panhellenic games and other athletic competitions. These competitions also had religious significance and were often tied to Greek mythology. The most significant of these games were the Olympic Games. The ancient Olympic Games were a sporting event held every four years at the sacred site of Olympia in honor of Zeus, the supreme god of Greek religion. Involving participants and spectators from all over Greece and beyond, the Olympic Games were the most important cultural event in ancient Greece and were held from 776 BCE to 393 CE, a run of 293 consecutive Olympiads. In the ancient Greek world, religion was personal, direct, and present in all areas of life. It revolved around myths which explained the origins of mankind and gave the gods a human face. Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek. Individuals in Greek society probably had varying degrees of religious belief—and some may have been skeptics—but Greek society could only function as it did because certain fundamentals were generally accepted throughout society: the gods existed, they could influence human affairs, and they welcomed and responded to acts of piety and worship.'
ERROR:root:orig input: 'Ancient Greece was comprised of hundreds of essentially independent city-states, partly due to the geography of Greece. Communities were separated by mountains, hills, and water. Rather than a unified nation, Ancient Greece was more like a network of communities with a shared religion and language that sometimes led to a sense of common belonging. Despite these cultural commonalities, affiliations between city-states were loose and short-lived. The Delian and Peloponnesian Leagues, for example, were dominated by one strong city-state. Another good example is how conflict with Persia prompted several city-states to unify against a common enemy, but not all Greek city-states were involved; further, once the external threat was diminished, conflict between the city-states resumed. Even as Greeks colonized the Mediterranean and Black seas, new colonies, while recognizing a “mother” city-state, were largely independent. Even after Philip II of Macedon brought mainland Greece under his League of Corinth, the individual city-states still retained much of their essential independence. Ancient Greeks were unified by traditions like the panhellenic games and other athletic competitions. These competitions also had religious significance and were often tied to Greek mythology. The most significant of these games were the Olympic Games. The ancient Olympic Games were a sporting event held every four years at the sacred site of Olympia in honor of Zeus, the supreme god of Greek religion. Involving participants and spectators from all over Greece and beyond, the Olympic Games were the most important cultural event in ancient Greece and were held from 776 BCE to 393 CE, a run of 293 consecutive Olympiads. In the ancient Greek world, religion was personal, direct, and present in all areas of life. It revolved around myths which explained the origins of mankind and gave the gods a human face. Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek. Individuals in Greek society probably had varying degrees of religious belief—and some may have been skeptics—but Greek society could only function as it did because certain fundamentals were generally accepted throughout society: the gods existed, they could influence human affairs, and they welcomed and responded to acts of piety and worship.'
ERROR:root:orig selected_specific len[[["The ancient Olympic Games were a sporting event held every four years at the sacred site of Olympia in honor of Zeus, the supreme god of Greek religion.",{},11],["Involving participants and spectators from all over Greece and beyond, the Olympic Games were the most important cultural event in ancient Greece and were held from 776 BCE to 393 CE, a run of 293 consecutive Olympiads.",{},12],["Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek.",{},15],["Ancient Greece was comprised of hundreds of essentially independent city-states, partly due to the geography of Greece.",{},0]],["Ancient Greece was comprised of hundreds of essentially independent city-states, partly due to the geography of Greece.","Communities were separated by mountains, hills, and water.","Rather than a unified nation, Ancient Greece was more like a network of communities with a shared religion and language that sometimes led to a sense of common belonging.","Despite these cultural commonalities, affiliations between city-states were loose and short-lived.","The Delian and Peloponnesian Leagues, for example, were dominated by one strong city-state.","Another good example is how conflict with Persia prompted several city-states to unify against a common enemy, but not all Greek city-states were involved; further, once the external threat was diminished, conflict between the city-states resumed.","Even as Greeks colonized the Mediterranean and Black seas, new colonies, while recognizing a “mother” city-state, were largely independent.","Even after Philip II of Macedon brought mainland Greece under his League of Corinth, the individual city-states still retained much of their essential independence.","Ancient Greeks were unified by traditions like the panhellenic games and other athletic competitions.","the panhellenic games and other athletic competitions also had religious significance and were often tied to Greek mythology.","The most significant of the panhellenic games and other athletic competitions were the Olympic Games.","The ancient Olympic Games were a sporting event held every four years at the sacred site of Olympia in honor of Zeus, the supreme god of Greek religion.","Involving participants and spectators from all over Greece and beyond, the Olympic Games were the most important cultural event in ancient Greece and were held from 776 BCE to 393 CE, a run of 293 consecutive Olympiads.","In the ancient Greek world, religion was personal, direct, and present in all areas of life.","It revolved around myths which explained the origins of mankind and gave the gods a human face.","Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek.","Individuals in Greek society probably had varying degrees of religious belief—and some may have been skeptics—but Greek society could only function as it did because certain fundamentals were generally accepted throughout society",": the gods existed, they could influence human affairs, and they welcomed and responded to acts of piety and worship."]]
ERROR:root:orig selected_specific len4
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents4
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The most significant of the panhellenic games and other athletic competitions were the Olympic Games. The ancient Olympic Games were a sporting event held every four years at the sacred site of Olympia in honor of Zeus, the supreme god of Greek religion.', 'The ancient Olympic Games were a sporting event held every four years at the sacred site of Olympia in honor of Zeus, the supreme god of Greek religion. Involving participants and spectators from all over Greece and beyond, the Olympic Games were the most important cultural event in ancient Greece and were held from 776 BCE to 393 CE, a run of 293 consecutive Olympiads.', 'It revolved around myths which explained the origins of mankind and gave the gods a human face. Temples dominated the urban landscape and city festivals and national sporting and artistic competitions were frequent, so religion was never far from the mind of an ancient Greek.', ' Ancient Greece was comprised of hundreds of essentially independent city-states, partly due to the geography of Greece.']), ('questions', ['Who was the supreme god of Greek religion?', 'How many consecutive Olympiads were held?', 'What dominated the urban landscape of Greece?', 'How many independent city-states were in Ancient Greece?']), ('answers', ['Zeus', '293', 'Temples', 'hundreds']), ('options', [['Ares', 'Poseidon', 'Hera'], ['15', '13', '18'], ['Government buildings', 'The Parthenon', 'Shops'], ['two', 'thirteen', 'fifty-two']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:10.846979
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:29.574095
ERROR:root:payload: 'The group has four YouTube channels, Sidemen, MoreSidemen, SidemenReacts and SidemenShorts across which it publishes a variety of videos including challenges, sketches and video game commentaries.[13][14][15]\n\nAs of January 2022, the Sidemen channel has over 14.2 million subscribers and 3.5 billion views,[16] MoreSidemen has over 6.2 million subscribers and 2.2 billion views,[17] SidemenReacts has over 3.9 million subscribers and 1 billion views,[18] and SidemenShorts has over 1.5 million subscribers and 560 million views.[19]\n\nOn 18 June 2018, the group released a web television series titled The Sidemen Show, available exclusively on YouTube Premium.[20] It comprises seven 30-minute episodes filmed around the world alongside a number of celebrity guests.[21][22]\n\nIn March 2020, the Sidemen released a twenty-minute YouTube video titled "#StayHome". The video featured the Sidemen and more than one hundred other YouTube video creators and other celebrities raising awareness of the UK\'s "stay at home" campaign which aimed to reduce the spread of COVID-19 in the UK.[23][24] All of the advertising revenue generated from the video was donated to the NHS'
ERROR:root:orig input: 'The group has four YouTube channels, Sidemen, MoreSidemen, SidemenReacts and SidemenShorts across which it publishes a variety of videos including challenges, sketches and video game commentaries.[13][14][15]\r\n\r\nAs of January 2022, the Sidemen channel has over 14.2 million subscribers and 3.5 billion views,[16] MoreSidemen has over 6.2 million subscribers and 2.2 billion views,[17] SidemenReacts has over 3.9 million subscribers and 1 billion views,[18] and SidemenShorts has over 1.5 million subscribers and 560 million views.[19]\r\n\r\nOn 18 June 2018, the group released a web television series titled The Sidemen Show, available exclusively on YouTube Premium.[20] It comprises seven 30-minute episodes filmed around the world alongside a number of celebrity guests.[21][22]\r\n\r\nIn March 2020, the Sidemen released a twenty-minute YouTube video titled "#StayHome". The video featured the Sidemen and more than one hundred other YouTube video creators and other celebrities raising awareness of the UK\'s "stay at home" campaign which aimed to reduce the spread of COVID-19 in the UK.[23][24] All of the advertising revenue generated from the video was donated to the NHS'
ERROR:root:orig selected_specific len[[["As of January 2022, the Sidemen channel has over 14.2 million subscribers and 3.5 billion views,[16]",{},1],["MoreSidemen has over 6.2 million subscribers and 2.2 billion views,[17] SidemenReacts has over 3.9 million subscribers and 1 billion views,[18]",{},2],["In March 2020, the Sidemen released a twenty-minute YouTube video titled \"#StayHome\".",{},7],["On 18 June 2018, the group released a web television series titled The Sidemen Show, available exclusively on YouTube Premium.[20]",{},5],["The video featured the Sidemen and more than one hundred other YouTube video creators and other celebrities raising awareness of the UK's \"stay at home\" campaign which aimed to reduce the spread of COVID-19 in the UK.[23][24]",{},8],["and SidemenShorts has over 1.5 million subscribers and 560 million",{},3],["The group has four YouTube channels, Sidemen, MoreSidemen, SidemenReacts and SidemenShorts across which it publishes a variety of videos including challenges, sketches and video game commentaries.[13][14][15]",{},0],["It comprises seven 30-minute episodes filmed around the world alongside a number of celebrity guests.[21][22]",{},6]],["The group has four YouTube channels, Sidemen, MoreSidemen, SidemenReacts and SidemenShorts across which it publishes a variety of videos including challenges, sketches and video game commentaries.[13][14][15]","As of January 2022, the Sidemen channel has over 14.2 million subscribers and 3.5 billion views,[16]","MoreSidemen has over 6.2 million subscribers and 2.2 billion views,[17] SidemenReacts has over 3.9 million subscribers and 1 billion views,[18]","and SidemenShorts has over 1.5 million subscribers and 560 million","views.[19]","On 18 June 2018, the group released a web television series titled The Sidemen Show, available exclusively on YouTube Premium.[20]","The group comprises seven 30-minute episodes filmed around the world alongside a number of celebrity guests.[21][22]","In March 2020, the Sidemen released a twenty-minute YouTube video titled \"#StayHome\".","The video featured the Sidemen and more than one hundred other YouTube video creators and other celebrities raising awareness of the UK's \"stay at home\" campaign which aimed to reduce the spread of COVID-19 in the UK.[23][24]","All of the advertising revenue generated from the video was donated to the NHS"]]
ERROR:root:orig selected_specific len8
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000664
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 896, in new
    mcq_output = [call.result() for call in mcq_request]
  File "/datadrive/qgv1/text_prod/app.py", line 896, in <listcomp>
    mcq_output = [call.result() for call in mcq_request]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 94, in query
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.630227
ERROR:root:payload: 'World War II or the Second World War, often abbreviated as WWII or WW2, was a global war that lasted from 1939 to 1945. It involved the vast majority of the world\'s countries—including all of the great powers—forming two opposing military alliances: the Allies and the Axis powers. In a total war directly involving more than 100 million personnel from more than 30 countries, the major participants threw their entire economic, industrial, and scientific capabilities behind the war effort, blurring the distinction between civilian and military resources. Aircraft played a major role in the conflict, enabling the strategic bombing of population centres and the only two uses of nuclear weapons in war. World War II was by far the deadliest conflict in human history; it resulted in 70 to 85 million fatalities, a majority being civilians. Tens of millions of people died due to genocides (including the Holocaust), starvation, massacres, and disease. In the wake of the Axis defeat, Germany and Japan were occupied, and war crimes tribunals were conducted against German and Japanese leaders.\n\nThe exact causes of World War II are debated, but contributing factors included the Second Italo-Ethiopian War, the Spanish Civil War, the Second Sino-Japanese War, the Soviet–Japanese border conflicts and rising European tensions since World War I. World War II is generally considered to have begun on 1 September 1939, when Nazi Germany, under Adolf Hitler, invaded Poland. The United Kingdom and France subsequently declared war on Germany on 3 September. Under the Molotov–Ribbentrop Pact of August 1939, Germany and the Soviet Union had partitioned Poland and marked out their "spheres of influence" across Finland, Estonia, Latvia, Lithuania and Romania. From late 1939 to early 1941, in a series of campaigns and treaties, Germany conquered or controlled much of continental Europe, and formed the Axis alliance with Italy and Japan (along with other countries later on). Following the onset of campaigns in North Africa and East Africa, and the fall of France in mid-1940, the war continued primarily between the European Axis powers and the British Empire, with war in the Balkans, the aerial Battle of Britain, the Blitz of the UK, and the Battle of the Atlantic. On 22 June 1941, Germany led the European Axis powers in an invasion of the Soviet Union, opening the Eastern Front, the largest land theatre of war in history.\n\nJapan, which aimed to dominate Asia and the Pacific, was at war with the Republic of China by 1937. In December 1941, Japan attacked American and British territories with near-simultaneous offensives against Southeast Asia and the Central Pacific, including an attack on the US fleet at Pearl Harbor which resulted in the United States declaring war against Japan. Therefore, the European Axis powers declared war on the United States in solidarity. Japan soon captured much of the western Pacific, but its advances were halted in 1942 after losing the critical Battle of Midway; later, Germany and Italy were defeated in North Africa and at Stalingrad in the Soviet Union. Key setbacks in 1943—including a series of German defeats on the Eastern Front, the Allied invasions of Sicily and the Italian mainland, and Allied offensives in the Pacific—cost the Axis powers their initiative and forced them into strategic retreat on all fronts. In 1944, the Western Allies invaded German-occupied France, while the Soviet Union regained its territorial losses and turned towards Germany and its allies. During 1944 and 1945, Japan suffered reversals in mainland Asia, while the Allies crippled the Japanese Navy and captured key western Pacific islands.\n\nThe war in Europe concluded with the liberation of German-occupied territories, and the invasion of Germany by the Western Allies and the Soviet Union, culminating in the fall of Berlin to Soviet troops, Hitler\'s suicide and the German unconditional surrender on 8 May 1945. Following the Potsdam Declaration by the Allies on 26 July 1945 and the refusal of Japan to surrender on its terms, the United States dropped the first atomic bombs on the Japanese cities of Hiroshima, on 6 August, and Nagasaki, on 9 August. Faced with an imminent invasion of the Japanese archipelago, the possibility of additional atomic bombings, and the Soviet\'s declared entry into the war against Japan on the eve of invading Manchuria, Japan announced on 15 August its intention to surrender, then signed the surrender document on 2 September 1945, cementing total victory in Asia for the Allies.'
ERROR:root:orig input: 'World War II or the Second World War, often abbreviated as WWII or WW2, was a global war that lasted from 1939 to 1945. It involved the vast majority of the world\'s countries—including all of the great powers—forming two opposing military alliances: the Allies and the Axis powers. In a total war directly involving more than 100 million personnel from more than 30 countries, the major participants threw their entire economic, industrial, and scientific capabilities behind the war effort, blurring the distinction between civilian and military resources. Aircraft played a major role in the conflict, enabling the strategic bombing of population centres and the only two uses of nuclear weapons in war. World War II was by far the deadliest conflict in human history; it resulted in 70 to 85 million fatalities, a majority being civilians. Tens of millions of people died due to genocides (including the Holocaust), starvation, massacres, and disease. In the wake of the Axis defeat, Germany and Japan were occupied, and war crimes tribunals were conducted against German and Japanese leaders.\r\n\r\nThe exact causes of World War II are debated, but contributing factors included the Second Italo-Ethiopian War, the Spanish Civil War, the Second Sino-Japanese War, the Soviet–Japanese border conflicts and rising European tensions since World War I. World War II is generally considered to have begun on 1 September 1939, when Nazi Germany, under Adolf Hitler, invaded Poland. The United Kingdom and France subsequently declared war on Germany on 3 September. Under the Molotov–Ribbentrop Pact of August 1939, Germany and the Soviet Union had partitioned Poland and marked out their "spheres of influence" across Finland, Estonia, Latvia, Lithuania and Romania. From late 1939 to early 1941, in a series of campaigns and treaties, Germany conquered or controlled much of continental Europe, and formed the Axis alliance with Italy and Japan (along with other countries later on). Following the onset of campaigns in North Africa and East Africa, and the fall of France in mid-1940, the war continued primarily between the European Axis powers and the British Empire, with war in the Balkans, the aerial Battle of Britain, the Blitz of the UK, and the Battle of the Atlantic. On 22 June 1941, Germany led the European Axis powers in an invasion of the Soviet Union, opening the Eastern Front, the largest land theatre of war in history.\r\n\r\nJapan, which aimed to dominate Asia and the Pacific, was at war with the Republic of China by 1937. In December 1941, Japan attacked American and British territories with near-simultaneous offensives against Southeast Asia and the Central Pacific, including an attack on the US fleet at Pearl Harbor which resulted in the United States declaring war against Japan. Therefore, the European Axis powers declared war on the United States in solidarity. Japan soon captured much of the western Pacific, but its advances were halted in 1942 after losing the critical Battle of Midway; later, Germany and Italy were defeated in North Africa and at Stalingrad in the Soviet Union. Key setbacks in 1943—including a series of German defeats on the Eastern Front, the Allied invasions of Sicily and the Italian mainland, and Allied offensives in the Pacific—cost the Axis powers their initiative and forced them into strategic retreat on all fronts. In 1944, the Western Allies invaded German-occupied France, while the Soviet Union regained its territorial losses and turned towards Germany and its allies. During 1944 and 1945, Japan suffered reversals in mainland Asia, while the Allies crippled the Japanese Navy and captured key western Pacific islands.\r\n\r\nThe war in Europe concluded with the liberation of German-occupied territories, and the invasion of Germany by the Western Allies and the Soviet Union, culminating in the fall of Berlin to Soviet troops, Hitler\'s suicide and the German unconditional surrender on 8 May 1945. Following the Potsdam Declaration by the Allies on 26 July 1945 and the refusal of Japan to surrender on its terms, the United States dropped the first atomic bombs on the Japanese cities of Hiroshima, on 6 August, and Nagasaki, on 9 August. Faced with an imminent invasion of the Japanese archipelago, the possibility of additional atomic bombings, and the Soviet\'s declared entry into the war against Japan on the eve of invading Manchuria, Japan announced on 15 August its intention to surrender, then signed the surrender document on 2 September 1945, cementing total victory in Asia for the Allies.'
ERROR:root:orig selected_specific len[[["Following the Potsdam Declaration by the Allies on 26 July 1945 and the refusal of Japan to surrender on its terms, the United States dropped the first atomic bombs on the Japanese cities of Hiroshima, on 6 August, and Nagasaki, on 9 August.",{},22],["Faced with an imminent invasion of the Japanese archipelago, the possibility of additional atomic bombings, and the Soviet's declared entry into the war against Japan on the eve of invading Manchuria, Japan announced on 15 August its intention to surrender, then signed the surrender document on 2 September 1945, cementing total victory in Asia for the Allies.",{},23],["In December 1941, Japan attacked American and British territories with near-simultaneous offensives against Southeast Asia and the Central Pacific, including an attack on the US fleet at Pearl Harbor which resulted in the United States declaring war against Japan.",{},14],["The war in Europe concluded with the liberation of German-occupied territories, and the invasion of Germany by the Western Allies and the Soviet Union, culminating in the fall of Berlin to Soviet troops, Hitler's suicide and the German unconditional surrender on 8 May 1945.",{},21],["World War II was by far the deadliest conflict in human history; it resulted in 70 to 85 million fatalities, a majority being civilians.",{},4],["On 22 June 1941, Germany led the European Axis powers in an invasion of the Soviet Union, opening the Eastern Front, the largest land theatre of war in history.",{},12],["In 1944, the Western Allies invaded German-occupied France, while the Soviet Union regained its territorial losses and turned towards Germany and its allies.",{},19],["Japan soon captured much of the western Pacific, but its advances were halted in 1942 after losing the critical Battle of Midway; later, Germany and Italy were defeated in North Africa and at Stalingrad in the Soviet Union.",{},16],["Tens of millions of people died due to genocides (including the Holocaust), starvation, massacres, and disease.",{},5],["Following the onset of campaigns in North Africa and East Africa, and the fall of France in mid-1940, the war continued primarily between the European Axis powers and the British Empire, with war in the Balkans, the aerial Battle of Britain, the Blitz of the UK, and the Battle of the Atlantic.",{},11],["From late 1939 to early 1941, in a series of campaigns and treaties, Germany conquered or controlled much of continental Europe, and formed the Axis alliance with Italy and Japan (along with other countries later on).",{},10],["During 1944 and 1945, Japan suffered reversals in mainland Asia, while the Allies crippled the Japanese Navy and captured key western Pacific islands.",{},20],["In a total war directly involving more than 100 million personnel from more than 30 countries, the major participants threw their entire economic, industrial, and scientific capabilities behind the war effort, blurring the distinction between civilian and military resources.",{},2],["Under the Molotov–Ribbentrop Pact of August 1939, Germany and the Soviet Union had partitioned Poland and marked out their \"spheres of influence\" across Finland, Estonia, Latvia, Lithuania and Romania.",{},9],["The exact causes of World War II are debated, but contributing factors included the Second Italo-Ethiopian War, the Spanish Civil War, the Second Sino-Japanese War, the Soviet–Japanese border conflicts and rising European tensions since World War I. World War II is generally considered to have begun on 1 September 1939, when Nazi Germany, under Adolf Hitler, invaded Poland.",{},7],["World War II or the Second World War, often abbreviated as WWII or WW2, was a global war that lasted from 1939 to 1945.",{},0],["Japan, which aimed to dominate Asia and the Pacific, was at war with the Republic of China by 1937.",{},13],["The United Kingdom and France subsequently declared war on Germany on 3 September.",{},8],["the Allied invasions of Sicily and the Italian mainland, and Allied offensives in the Pacific—cost the Axis powers their initiative and forced them into strategic retreat on all fronts.",{},18],["In the wake of the Axis defeat, Germany and Japan were occupied, and war crimes tribunals were conducted against German and Japanese leaders.",{},6]],["World War II or the Second World War, often abbreviated as WWII or WW2, was a global war that lasted from 1939 to 1945.","It involved the vast majority of the world's countries—including all of the great powers—forming two opposing military alliances: the Allies and the Axis powers.","In a total war directly involving more than 100 million personnel from more than 30 countries, the major participants threw their entire economic, industrial, and scientific capabilities behind the war effort, blurring the distinction between civilian and military resources.","Aircraft played a major role in the conflict, enabling the strategic bombing of population centres and the only two uses of nuclear weapons in war.","World War II was by far the deadliest conflict in human history; it resulted in 70 to 85 million fatalities, a majority being civilians.","Tens of millions of people died due to genocides (including the Holocaust), starvation, massacres, and disease.","In the wake of the Axis defeat, Germany and Japan were occupied, and war crimes tribunals were conducted against German and Japanese leaders.","The exact causes of World War II are debated, but contributing factors included the Second Italo-Ethiopian War, the Spanish Civil War, the Second Sino-Japanese War, the Soviet–Japanese border conflicts and rising European tensions since World War I. World War II is generally considered to have begun on 1 September 1939, when Nazi Germany, under Adolf Hitler, invaded Poland.","The United Kingdom and France subsequently declared war on Germany on 3 September.","Under the Molotov–Ribbentrop Pact of August 1939, Germany and the Soviet Union had partitioned Poland and marked out their \"spheres of influence\" across Finland, Estonia, Latvia, Lithuania and Romania.","From late 1939 to early 1941, in a series of campaigns and treaties, Germany conquered or controlled much of continental Europe, and formed the Axis alliance with Italy and Japan (along with other countries later on).","Following the onset of campaigns in North Africa and East Africa, and the fall of France in mid-1940, the war continued primarily between the European Axis powers and the British Empire, with war in the Balkans, the aerial Battle of Britain, the Blitz of the UK, and the Battle of the Atlantic.","On 22 June 1941, Germany led the European Axis powers in an invasion of the Soviet Union, opening the Eastern Front, the largest land theatre of war in history.","Japan, which aimed to dominate Asia and the Pacific, was at war with the Republic of China by 1937.","In December 1941, Japan attacked American and British territories with near-simultaneous offensives against Southeast Asia and the Central Pacific, including an attack on the US fleet at Pearl Harbor which resulted in the United States declaring war against Japan.","Therefore, the European Axis powers declared war on the United States in solidarity.","Japan soon captured much of the western Pacific, but its advances were halted in 1942 after losing the critical Battle of Midway; later, Germany and Italy were defeated in North Africa and at Stalingrad in the Soviet Union.","Key setbacks in 1943—including a series of German defeats on the Eastern Front,","the Allied invasions of Sicily and the Italian mainland, and Allied offensives in the Pacific—cost the Axis powers their initiative and forced them into strategic retreat on all fronts.","In 1944, the Western Allies invaded German-occupied France, while the Soviet Union regained its territorial losses and turned towards Germany and its allies.","During 1944 and 1945, Japan suffered reversals in mainland Asia, while the Allies crippled the Japanese Navy and captured key western Pacific islands.","The war in Europe concluded with the liberation of German-occupied territories, and the invasion of Germany by the Western Allies and the Soviet Union, culminating in the fall of Berlin to Soviet troops, Hitler's suicide and the German unconditional surrender on 8 May 1945.","Following the Potsdam Declaration by the Allies on 26 July 1945 and the refusal of Japan to surrender on its terms, the United States dropped the first atomic bombs on the Japanese cities of Hiroshima, on 6 August, and Nagasaki, on 9 August.","Faced with an imminent invasion of the Japanese archipelago, the possibility of additional atomic bombings, and the Soviet's declared entry into the war against Japan on the eve of invading Manchuria, Japan announced on 15 August its intention to surrender, then signed the surrender document on 2 September 1945, cementing total victory in Asia for the Allies."]]
ERROR:root:orig selected_specific len20
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000695
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents4
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ["The war in Europe concluded with the liberation of German-occupied territories, and the invasion of Germany by the Western Allies and the Soviet Union, culminating in the fall of Berlin to Soviet troops, Hitler's suicide and the German unconditional surrender on 8 May 1945. Following the Potsdam Declaration by the Allies on 26 July 1945 and the refusal of Japan to surrender on its terms, the United States dropped the first atomic bombs on the Japanese cities of Hiroshima, on 6 August, and Nagasaki, on 9 August.", "Following the Potsdam Declaration by the Allies on 26 July 1945 and the refusal of Japan to surrender on its terms, the United States dropped the first atomic bombs on the Japanese cities of Hiroshima, on 6 August, and Nagasaki, on 9 August. Faced with an imminent invasion of the Japanese archipelago, the possibility of additional atomic bombings, and the Soviet's declared entry into the war against Japan on the eve of invading Manchuria, Japan announced on 15 August its intention to surrender, then signed the surrender document on 2 September 1945, cementing total victory in Asia for the Allies.", 'Japan, which aimed to dominate Asia and the Pacific, was at war with the Republic of China by 1937. In December 1941, Japan attacked American and British territories with near-simultaneous offensives against Southeast Asia and the Central Pacific, including an attack on the US fleet at Pearl Harbor which resulted in the United States declaring war against Japan.', "During 1944 and 1945, Japan suffered reversals in mainland Asia, while the Allies crippled the Japanese Navy and captured key western Pacific islands. The war in Europe concluded with the liberation of German-occupied territories, and the invasion of Germany by the Western Allies and the Soviet Union, culminating in the fall of Berlin to Soviet troops, Hitler's suicide and the German unconditional surrender on 8 May 1945."]), ('questions', ['What Japanese city was bombed on 6 August 1945?', 'What country did Japan invade on the eve of invasion by the Soviets?', 'Which country attacked the US and the US in 1941?', 'When did Germany surrender to the Allies?']), ('answers', ['Hiroshima', 'Manchuria', 'Japan', '8 May 1945']), ('options', [['Nagasaki', 'Osaka', 'Tokyo'], ['Korea', 'China', 'Japan'], ['Germany', 'Great Britain', 'Italy'], ['8 August 1914', '4 January 1918', '1 January 1918']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ["The war in Europe concluded with the liberation of German-occupied territories, and the invasion of Germany by the Western Allies and the Soviet Union, culminating in the fall of Berlin to Soviet troops, Hitler's suicide and the German unconditional surrender on 8 May 1945. Following the Potsdam Declaration by the Allies on 26 July 1945 and the refusal of Japan to surrender on its terms, the United States dropped the first atomic bombs on the Japanese cities of Hiroshima, on 6 August, and Nagasaki, on 9 August.", "Following the Potsdam Declaration by the Allies on 26 July 1945 and the refusal of Japan to surrender on its terms, the United States dropped the first atomic bombs on the Japanese cities of Hiroshima, on 6 August, and Nagasaki, on 9 August. Faced with an imminent invasion of the Japanese archipelago, the possibility of additional atomic bombings, and the Soviet's declared entry into the war against Japan on the eve of invading Manchuria, Japan announced on 15 August its intention to surrender, then signed the surrender document on 2 September 1945, cementing total victory in Asia for the Allies.", 'Japan, which aimed to dominate Asia and the Pacific, was at war with the Republic of China by 1937. In December 1941, Japan attacked American and British territories with near-simultaneous offensives against Southeast Asia and the Central Pacific, including an attack on the US fleet at Pearl Harbor which resulted in the United States declaring war against Japan.', "During 1944 and 1945, Japan suffered reversals in mainland Asia, while the Allies crippled the Japanese Navy and captured key western Pacific islands. The war in Europe concluded with the liberation of German-occupied territories, and the invasion of Germany by the Western Allies and the Soviet Union, culminating in the fall of Berlin to Soviet troops, Hitler's suicide and the German unconditional surrender on 8 May 1945."]), ('questions', ['What Japanese city was bombed on 6 August 1945?', 'What country did Japan invade on the eve of invasion by the Soviets?', 'Which country attacked the US and the US in 1941?', 'When did Germany surrender to the Allies?']), ('answers', ['Hiroshima', 'Manchuria', 'Japan', '8 May 1945']), ('options', [['Nagasaki', 'Osaka', 'Tokyo'], ['Korea', 'China', 'Japan'], ['Germany', 'Great Britain', 'Italy'], ['8 August 1914', '4 January 1918', '1 January 1918']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['World War II was by far the deadliest conflict in human history; it resulted in 70 to 85 million fatalities, a majority being civilians.', 'On 22 June 1941, Germany led the European Axis powers in an invasion of the Soviet Union, opening the Eastern Front, the largest land theatre of war in history.']), ('incorrect', [['World War II was by far the deadliest conflict in human history; it resulted in a total loss of life over an extended period of time.', 'World War II was by far the deadliest conflict in human history; it resulted in the destruction of over 100,000 villages and destroyed a staggering 70% of all settlements in a short span of time.', 'World War II was by far the deadliest conflict in human history; it resulted in at least one death, and many more.'], ['On 22 June 1941, Germany led the European Axis powers in an invasion of the Soviet Union, opening the gates of the Baltic Sea to Germany and the Soviet Union.', 'On 22 June 1941, Germany led the European Axis powers in an invasion of the Soviet Union, opening up the Baltic Sea to the Japanese forces and the Atlantic to German bombers.', 'On 22 June 1941, Germany led the European Axis powers in an invasion of the Soviet Union, opening the way for Japan to join the Axis in its invasion of Eastern Europe.']])]))])
ERROR:root:Request 0:00:12.226455
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.326928
ERROR:root:payload: 'In May 2022, Google, Apple and Microsoft jointly announced support for passkeys in our platforms and respective ecosystems with cross-platform compatibility that will usher in the new passwordless future.\nPasskeys give people a simple, secure way to sign in to apps and websites across platforms — with no passwords required.\nPasskeys are based on FIDO Alliance and W3C standards. They replace passwords with cryptographic key pairs - a private key on the device that is securely synced via keychain technology and a public key that is stored on the web server. \n\nAn announcement of this magnitude between Google, Apple and Microsoft and many more players that changes the way that the world authenticates doesn’t happen in a vacuum. \nSo let’s take a journey through the last decade to understand the FIDO and passkeys journey\n\n[Slide title] The genesis of gNubby security keys at Google \nJust over a decade ago, malicious hackers found their way inside Google’s networks\nTime based OTPs that were in use at the time for Googlers were still phishable via man in the middle relay attacks\nA team of security experts at Google assembled to see how public key cryptography, secure hardware, and verified user presence could solve the phishing problem\nIn 2012, Google worked with Yuibico to create the gnubby and Googlers wrote chrome extensions and a backend server to store public keys and validate assertions. \nhttps://fidoalliance.org/google-launches-security-key-worlds-first-deployment-of-fast-identity-online-universal-second-factor-fido-u2f-authentication/\n\nThis gnubby technology was eventually rolled out mandatorily to all Googlers and the rest is history. We have never suffered another successful hacking attack. \n\n[Slide title] In 2013 Google joined the FIDO alliance to make secure authentication a first class primitive on the web\nGoogle joined the FIDO Alliance, a then, months-old organization in 2013\nThe goal was to make secure authentication a first class primitive on the web\nGoogle and Yubico created the FIDO U2F standard within the FIDO Alliance with the vision to take strong public key crypto to the mass market\n\n[Slide title] FIDO U2F in a nutshell\nImage\nCompanies including Google, Facebook, Ebay, Dropbox and GitHub and many other security-conscious companies have successfully deployed FIDO U2F.\n\n[Transition Slide title] Could phones act as security keys?\nSecurity keys are great, but you have to buy them, register them, and carry them around. Make sure you don’t lose them. A natural question surfaced: Could phones act as security keys?\n\n[Slide title] PaaSK and Auto enrollment of FIDO credentials on mobile devices\nAround 2017, Google started experimenting with auto-enrollment of FIDO credentials for google users on their Androids and iPhones and storing the corresponding public keys being stored in Cryptauth. By turning a mobile device into a security key, Google would be able to provide the strongest 2SV to anyone with compatible devices.\n\n[Slide title] Services within Google start leveraging phone-based FIDO credentials\nSince 2017, several services have successfully leveraged phone-based, auto-enrolled FIDO credentials. \nOne example is same-device fingerprint re-auth (also called LUV or Local User Verification) when a user performs a sensitive action on their Google account. LUV was first launched in 2018.  \nDevice Prompt Challenge or Authzen (externally known as Google Prompt) also made use of auto-enrolled FIDO credentials. \nOther examples include Google Payments and SmartSetup.\n\n[Slide Title] How can you solve secure cross device authentication when there is a phone-based FIDO credential?\n[Slide subtitle] a cross-device handshake using bluetooth and cloud called caBLE\n\nHow can you solve secure cross device authentication when there is a phone-based FIDO credential? The answer lies in a cross-device handshake that using bluetooth for proximity and the a secure tunnel in the cloud to marshall data back and forth between devices.\n\ncaBLE or Cloud Assisted BLE was rolled out to Google users in 2019 and a new version of the protocol called caBLEv2 started rolling out in 2021. \n\nGoogle submitted the caBLE protocol to the standards body so it could become a cross-device industry standard for phones being used as security keys and the caBLE protocol is now officially named “Hybrid”. \n\nThe invention of the Hybrid Client to Authenticator protocol is another great example of how Googlers push the boundary on innovation and then work with standards bodies to make the protocol implementable by everyone.'
ERROR:root:orig input: 'In May 2022, Google, Apple and Microsoft jointly announced support for passkeys in our platforms and respective ecosystems with cross-platform compatibility that will usher in the new passwordless future.\r\nPasskeys give people a simple, secure way to sign in to apps and websites across platforms — with no passwords required.\r\nPasskeys are based on FIDO Alliance and W3C standards. They replace passwords with cryptographic key pairs - a private key on the device that is securely synced via keychain technology and a public key that is stored on the web server. \r\n\r\nAn announcement of this magnitude between Google, Apple and Microsoft and many more players that changes the way that the world authenticates doesn’t happen in a vacuum. \r\nSo let’s take a journey through the last decade to understand the FIDO and passkeys journey\r\n\r\n[Slide title] The genesis of gNubby security keys at Google \r\nJust over a decade ago, malicious hackers found their way inside Google’s networks\r\nTime based OTPs that were in use at the time for Googlers were still phishable via man in the middle relay attacks\r\nA team of security experts at Google assembled to see how public key cryptography, secure hardware, and verified user presence could solve the phishing problem\r\nIn 2012, Google worked with Yuibico to create the gnubby and Googlers wrote chrome extensions and a backend server to store public keys and validate assertions. \r\nhttps://fidoalliance.org/google-launches-security-key-worlds-first-deployment-of-fast-identity-online-universal-second-factor-fido-u2f-authentication/\r\n\r\nThis gnubby technology was eventually rolled out mandatorily to all Googlers and the rest is history. We have never suffered another successful hacking attack. \r\n\r\n[Slide title] In 2013 Google joined the FIDO alliance to make secure authentication a first class primitive on the web\r\nGoogle joined the FIDO Alliance, a then, months-old organization in 2013\r\nThe goal was to make secure authentication a first class primitive on the web\r\nGoogle and Yubico created the FIDO U2F standard within the FIDO Alliance with the vision to take strong public key crypto to the mass market\r\n\r\n[Slide title] FIDO U2F in a nutshell\r\nImage\r\nCompanies including Google, Facebook, Ebay, Dropbox and GitHub and many other security-conscious companies have successfully deployed FIDO U2F.\r\n\r\n[Transition Slide title] Could phones act as security keys?\r\nSecurity keys are great, but you have to buy them, register them, and carry them around. Make sure you don’t lose them. A natural question surfaced: Could phones act as security keys?\r\n\r\n[Slide title] PaaSK and Auto enrollment of FIDO credentials on mobile devices\r\nAround 2017, Google started experimenting with auto-enrollment of FIDO credentials for google users on their Androids and iPhones and storing the corresponding public keys being stored in Cryptauth. By turning a mobile device into a security key, Google would be able to provide the strongest 2SV to anyone with compatible devices.\r\n\r\n[Slide title] Services within Google start leveraging phone-based FIDO credentials\r\nSince 2017, several services have successfully leveraged phone-based, auto-enrolled FIDO credentials. \r\nOne example is same-device fingerprint re-auth (also called LUV or Local User Verification) when a user performs a sensitive action on their Google account. LUV was first launched in 2018.  \r\nDevice Prompt Challenge or Authzen (externally known as Google Prompt) also made use of auto-enrolled FIDO credentials. \r\nOther examples include Google Payments and SmartSetup.\r\n\r\n[Slide Title] How can you solve secure cross device authentication when there is a phone-based FIDO credential?\r\n[Slide subtitle] a cross-device handshake using bluetooth and cloud called caBLE\r\n\r\nHow can you solve secure cross device authentication when there is a phone-based FIDO credential? The answer lies in a cross-device handshake that using bluetooth for proximity and the a secure tunnel in the cloud to marshall data back and forth between devices.\r\n\r\ncaBLE or Cloud Assisted BLE was rolled out to Google users in 2019 and a new version of the protocol called caBLEv2 started rolling out in 2021. \r\n\r\nGoogle submitted the caBLE protocol to the standards body so it could become a cross-device industry standard for phones being used as security keys and the caBLE protocol is now officially named “Hybrid”. \r\n\r\nThe invention of the Hybrid Client to Authenticator protocol is another great example of how Googlers push the boundary on innovation and then work with standards bodies to make the protocol implementable by everyone. '
ERROR:root:orig selected_specific len[[["or Cloud Assisted BLE was rolled out to Google users in 2019 and a new version of the protocol called caBLEv2 started rolling out in 2021.",{},35],["Just over a decade ago, malicious hackers found their way inside Google’s networks Time based OTPs that were in use at the time for Googlers were still phishable via man in the middle relay attacks A team of security experts at Google assembled to see how public key cryptography, secure hardware, and verified user presence could solve the phishing problem In 2012",{},8],["By turning a mobile device into a security key, Google would be able to provide the strongest 2SV to anyone with compatible devices.",{},23],["In May 2022, Google, Apple and Microsoft jointly announced support for passkeys in our platforms and respective ecosystems with cross-platform compatibility that will usher in the new passwordless future.",{},0],["The goal was to make secure authentication a first class primitive on the web Google and Yubico created the FIDO U2F standard within the FIDO Alliance with the vision to take strong public key crypto to the mass market  [Slide title] FIDO U2F in a nutshell Image Companies including Google, Facebook, Ebay, Dropbox and GitHub and many other security-conscious companies have successfully deployed FIDO U2F.",{},16],[", Google worked with Yuibico to create the gnubby and Googlers wrote chrome extensions and a backend server to store public keys and validate assertions.",{},9],["In 2013 Google joined the FIDO alliance to make secure authentication a first class primitive on the web",{},14],["One example is same-device fingerprint re-auth (also called LUV or Local User Verification) when a user performs a sensitive action on their Google account.",{},25],["They replace passwords with cryptographic key pairs - a private key on the device that is securely synced via keychain technology and a public key that is stored on the web server.",{},3],[", Google started experimenting with auto-enrollment of FIDO credentials for google users on their Androids and iPhones and storing the corresponding public keys being stored in Cryptauth.",{},22],["[Slide subtitle] a cross-device handshake using bluetooth and cloud called caBLE",{},31],["Google submitted the caBLE protocol to the standards body so it could become a cross-device industry standard for phones being used as security keys and the caBLE protocol is now officially named “Hybrid”.",{},36],["[Slide title] PaaSK and Auto enrollment of FIDO credentials on mobile devices Around 2017",{},21],["Google joined the FIDO Alliance, a then, months-old organization in 2013",{},15],["[Slide title] Services within Google start leveraging phone-based FIDO credentials Since 2017, several services have successfully leveraged phone-based, auto-enrolled FIDO credentials.",{},24],["https://fidoalliance.org/google-launches-security-key-worlds-first-deployment-of-fast-identity-online-universal-second-factor-fido-u2f-authentication/",{},10],["Device Prompt Challenge or Authzen (externally known as Google Prompt) also made use of auto-enrolled FIDO credentials.",{},27],["The answer lies in a cross-device handshake that using bluetooth for proximity and the a secure tunnel in the cloud to marshall data back and forth between devices.",{},33],["LUV was first launched in 2018.",{},26],["Passkeys give people a simple, secure way to sign in to apps and websites across platforms — with no passwords required.",{},1]],["In May 2022, Google, Apple and Microsoft jointly announced support for passkeys in our platforms and respective ecosystems with cross-platform compatibility that will usher in the new passwordless future.","Passkeys give people a simple, secure way to sign in to apps and websites across platforms — with no passwords required.","Passkeys are based on FIDO Alliance and W3C standards.","Google, Apple and Microsoft replace passwords with cryptographic key pairs - a private key on the device that is securely synced via keychain technology and a public key that is stored on the web server.","An announcement of this magnitude between Google, Apple and Microsoft and many more players that changes the way that the world authenticates doesn’t happen in a vacuum.","So let’s take a journey through the last decade to understand the FIDO and passkeys journey","[Slide title]","The genesis of gNubby security keys at Google","Just over a decade ago, malicious hackers found their way inside Google’s networks Time based OTPs that were in use at the time for Googlers were still phishable via man in the middle relay attacks A team of security experts at Google assembled to see how public key cryptography, secure hardware, and verified user presence could solve the phishing problem In 2012",", Google worked with Yuibico to create the gnubby and Googlers wrote chrome extensions and a backend server to store public keys and validate assertions.","https://fidoalliance.org/google-launches-security-key-worlds-first-deployment-of-fast-identity-online-universal-second-factor-fido-u2f-authentication/","This gnubby technology was eventually rolled out mandatorily to all Googlers and the rest is history.","We have never suffered another successful hacking attack.","[Slide title]","In 2013 Google joined the FIDO alliance to make secure authentication a first class primitive on the web","Google joined the FIDO Alliance, a then, months-old organization in 2013","The goal was to make secure authentication a first class primitive on the web Google and Yubico created the FIDO U2F standard within the FIDO Alliance with the vision to take strong public key crypto to the mass market  [Slide title] FIDO U2F in a nutshell Image Companies including Google, Facebook, Ebay, Dropbox and GitHub and many other security-conscious companies have successfully deployed FIDO U2F.","[Transition Slide title] Could phones act as security keys?","Security keys are great, but you have to buy phones, register phones, and carry phones around.","Make sure you don’t lose phones.","A natural question surfaced: Could phones act as security keys?","[Slide title] PaaSK and Auto enrollment of FIDO credentials on mobile devices Around 2017",", Google started experimenting with auto-enrollment of FIDO credentials for google users on their Androids and iPhones and storing the corresponding public keys being stored in Cryptauth.","By turning a mobile device into a security key, Google would be able to provide the strongest 2SV to anyone with compatible devices.","[Slide title] Services within Google start leveraging phone-based FIDO credentials Since 2017, several services have successfully leveraged phone-based, auto-enrolled FIDO credentials.","One example is same-device fingerprint re-auth (also called LUV or Local User Verification) when a user performs a sensitive action on their Google account.","LUV was first launched in 2018.","Device Prompt Challenge or Authzen (externally known as Google Prompt) also made use of auto-enrolled FIDO credentials.","Other examples include Google Payments and SmartSetup.","[Slide Title]","How can you solve secure cross device authentication when there is a phone-based FIDO credential?","[Slide subtitle] a cross-device handshake using bluetooth and cloud called caBLE","How can you solve secure cross device authentication when there is a phone-based FIDO credential?","The answer lies in a cross-device handshake that using bluetooth for proximity and the a secure tunnel in the cloud to marshall data back and forth between devices.","caBLE","or Cloud Assisted BLE was rolled out to Google users in 2019 and a new version of the protocol called caBLEv2 started rolling out in 2021.","Google submitted the caBLE protocol to the standards body so it could become a cross-device industry standard for phones being used as security keys and the caBLE protocol is now officially named “Hybrid”.","The invention of the Hybrid Client to Authenticator protocol is another great example of how Googlers push the boundary on innovation and then work with standards bodies to make the protocol implementable by everyone."]]
ERROR:root:orig selected_specific len20
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.001776
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents10
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['caBLE or Cloud Assisted BLE was rolled out to Google users in 2019 and a new version of the protocol called caBLEv2 started rolling out in 2021.', 'The genesis of gNubby security keys at Google Just over a decade ago, malicious hackers found their way inside Google’s networks Time based OTPs that were in use at the time for Googlers were still phishable via man in the middle relay attacks A team of security experts at Google assembled to see how public key cryptography, secure hardware, and verified user presence could solve the phishing problem In 2012', ', Google started experimenting with auto-enrollment of FIDO credentials for google users on their Androids and iPhones and storing the corresponding public keys being stored in Cryptauth. By turning a mobile device into a security key, Google would be able to provide the strongest 2SV to anyone with compatible devices.', ' In May 2022, Google, Apple and Microsoft jointly announced support for passkeys in our platforms and respective ecosystems with cross-platform compatibility that will usher in the new passwordless future.', 'Google joined the FIDO Alliance, a then, months-old organization in 2013 The goal was to make secure authentication a first class primitive on the web Google and Yubico created the FIDO U2F standard within the FIDO Alliance with the vision to take strong public key crypto to the mass market  [Slide title] FIDO U2F in a nutshell Image Companies including Google, Facebook, Ebay, Dropbox and GitHub and many other security-conscious companies have successfully deployed FIDO U2F.', 'Just over a decade ago, malicious hackers found their way inside Google’s networks Time based OTPs that were in use at the time for Googlers were still phishable via man in the middle relay attacks A team of security experts at Google assembled to see how public key cryptography, secure hardware, and verified user presence could solve the phishing problem In 2012 , Google worked with Yuibico to create the gnubby and Googlers wrote chrome extensions and a backend server to store public keys and validate assertions.', '[Slide title] In 2013 Google joined the FIDO alliance to make secure authentication a first class primitive on the web', '[Slide title] Services within Google start leveraging phone-based FIDO credentials Since 2017, several services have successfully leveraged phone-based, auto-enrolled FIDO credentials. One example is same-device fingerprint re-auth (also called LUV or Local User Verification) when a user performs a sensitive action on their Google account.', 'Passkeys are based on FIDO Alliance and W3C standards. They replace passwords with cryptographic key pairs - a private key on the device that is securely synced via keychain technology and a public key that is stored on the web server.', '[Slide title] PaaSK and Auto enrollment of FIDO credentials on mobile devices Around 2017 , Google started experimenting with auto-enrollment of FIDO credentials for google users on their Androids and iPhones and storing the corresponding public keys being stored in Cryptauth.']), ('questions', ['When did caBLEv2 start rolling out?', "Who found their way inside of Google's networks?", 'What would a mobile device be turned into?', 'When did Google, Apple and Microsoft announce support for passkeys?', 'Who created the FIDO U2F standard?', 'Who did Google work with to create gnubby?', 'When did Google join the FIDO alliance?', 'What is another name for same-device fingerprint re-auth?', 'Passkeys replace what?', 'What did Google start experimenting with in 2017?']), ('answers', ['2021', 'malicious hackers', 'a security key', 'May 2022', 'Google and Yubico', 'Yuibico', '2013', 'LUV or Local User Verification', 'passwords', 'FIDO credentials']), ('options', [['2023', '2025', '2027'], ['customers', 'employees', 'government officials'], ['a phone', 'a camera', 'a notepad'], ['March 2022', 'January 2022', 'September 2022'], ['Yubico and Amazon', 'Amazon and Yubico', 'Yubico and Google'], ['Wix', 'Google', 'Squarespace'], ['2012', '2011', '2014'], ['Fingerprint or biometric', 'PIV or Platform for Internet Verification', 'LUVR or Local User Verification Rights'], ['cash', 'checks', 'cards'], ['NFC payments', 'Biometric logins', 'Voice interactions']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['caBLE or Cloud Assisted BLE was rolled out to Google users in 2019 and a new version of the protocol called caBLEv2 started rolling out in 2021.', 'The genesis of gNubby security keys at Google Just over a decade ago, malicious hackers found their way inside Google’s networks Time based OTPs that were in use at the time for Googlers were still phishable via man in the middle relay attacks A team of security experts at Google assembled to see how public key cryptography, secure hardware, and verified user presence could solve the phishing problem In 2012', ', Google started experimenting with auto-enrollment of FIDO credentials for google users on their Androids and iPhones and storing the corresponding public keys being stored in Cryptauth. By turning a mobile device into a security key, Google would be able to provide the strongest 2SV to anyone with compatible devices.', ' In May 2022, Google, Apple and Microsoft jointly announced support for passkeys in our platforms and respective ecosystems with cross-platform compatibility that will usher in the new passwordless future.', 'Google joined the FIDO Alliance, a then, months-old organization in 2013 The goal was to make secure authentication a first class primitive on the web Google and Yubico created the FIDO U2F standard within the FIDO Alliance with the vision to take strong public key crypto to the mass market  [Slide title] FIDO U2F in a nutshell Image Companies including Google, Facebook, Ebay, Dropbox and GitHub and many other security-conscious companies have successfully deployed FIDO U2F.', 'Just over a decade ago, malicious hackers found their way inside Google’s networks Time based OTPs that were in use at the time for Googlers were still phishable via man in the middle relay attacks A team of security experts at Google assembled to see how public key cryptography, secure hardware, and verified user presence could solve the phishing problem In 2012 , Google worked with Yuibico to create the gnubby and Googlers wrote chrome extensions and a backend server to store public keys and validate assertions.', '[Slide title] In 2013 Google joined the FIDO alliance to make secure authentication a first class primitive on the web', '[Slide title] Services within Google start leveraging phone-based FIDO credentials Since 2017, several services have successfully leveraged phone-based, auto-enrolled FIDO credentials. One example is same-device fingerprint re-auth (also called LUV or Local User Verification) when a user performs a sensitive action on their Google account.', 'Passkeys are based on FIDO Alliance and W3C standards. They replace passwords with cryptographic key pairs - a private key on the device that is securely synced via keychain technology and a public key that is stored on the web server.', '[Slide title] PaaSK and Auto enrollment of FIDO credentials on mobile devices Around 2017 , Google started experimenting with auto-enrollment of FIDO credentials for google users on their Androids and iPhones and storing the corresponding public keys being stored in Cryptauth.']), ('questions', ['When did caBLEv2 start rolling out?', "Who found their way inside of Google's networks?", 'What would a mobile device be turned into?', 'When did Google, Apple and Microsoft announce support for passkeys?', 'Who created the FIDO U2F standard?', 'Who did Google work with to create gnubby?', 'When did Google join the FIDO alliance?', 'What is another name for same-device fingerprint re-auth?', 'Passkeys replace what?', 'What did Google start experimenting with in 2017?']), ('answers', ['2021', 'malicious hackers', 'a security key', 'May 2022', 'Google and Yubico', 'Yuibico', '2013', 'LUV or Local User Verification', 'passwords', 'FIDO credentials']), ('options', [['2023', '2025', '2027'], ['customers', 'employees', 'government officials'], ['a phone', 'a camera', 'a notepad'], ['March 2022', 'January 2022', 'September 2022'], ['Yubico and Amazon', 'Amazon and Yubico', 'Yubico and Google'], ['Wix', 'Google', 'Squarespace'], ['2012', '2011', '2014'], ['Fingerprint or biometric', 'PIV or Platform for Internet Verification', 'LUVR or Local User Verification Rights'], ['cash', 'checks', 'cards'], ['NFC payments', 'Biometric logins', 'Voice interactions']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:12.780476
ERROR:root:api_check 0:00:00.335805
ERROR:root:payload: '[Transition Slide title] Could phones act as security keys?\nSecurity keys are great, but you have to buy them, register them, and carry them around. Make sure you don’t lose them. A natural question surfaced: Could phones act as security keys?\n\n[Slide title] PaaSK and Auto enrollment of FIDO credentials on mobile devices\nAround 2017, Google started experimenting with auto-enrollment of FIDO credentials for google users on their Androids and iPhones and storing the corresponding public keys being stored in Cryptauth. By turning a mobile device into a security key, Google would be able to provide the strongest 2SV to anyone with compatible devices.\n\n[Slide title] Services within Google start leveraging phone-based FIDO credentials\nSince 2017, several services have successfully leveraged phone-based, auto-enrolled FIDO credentials. \nOne example is same-device fingerprint re-auth (also called LUV or Local User Verification) when a user performs a sensitive action on their Google account. LUV was first launched in 2018.  \nDevice Prompt Challenge or Authzen (externally known as Google Prompt) also made use of auto-enrolled FIDO credentials. \nOther examples include Google Payments and SmartSetup.\n\n[Slide Title] How can you solve secure cross device authentication when there is a phone-based FIDO credential?\n[Slide subtitle] a cross-device handshake using bluetooth and cloud called caBLE\n\nHow can you solve secure cross device authentication when there is a phone-based FIDO credential? The answer lies in a cross-device handshake that using bluetooth for proximity and the a secure tunnel in the cloud to marshall data back and forth between devices.\n\ncaBLE or Cloud Assisted BLE was rolled out to Google users in 2019 and a new version of the protocol called caBLEv2 started rolling out in 2021. \n\nGoogle submitted the caBLE protocol to the standards body so it could become a cross-device industry standard for phones being used as security keys and the caBLE protocol is now officially named “Hybrid”. \n\nThe invention of the Hybrid Client to Authenticator protocol is another great example of how Googlers push the boundary on innovation and then work with standards bodies to make the protocol implementable by everyone. \n\n[Slide Title] The evolution of FIDO2 to support passwordless\nU2F has always been strictly limited to 2nd factor authentication as the user had to be first looked up along with their registered public key credentials and credential ids\n\nThe concept of a passkey (also called a discoverable credential or a multi device credential) was created so the RP wouldn’t have to first lookup the user and their registered public key credentials before the assert request and to account for the fact that private keys could be securely synced to multiple devices via keychain technology\nThe FIDO2 standard includes the  W3C Webauthn protocol which is a web API that allows servers to register and authenticate users using public key cryptography + CTAP2 (client to authenticator protocol) which standardizes how browsers and operating systems (clients) communicate with authenticators. \n\n[Slide Title] Google, Microsoft and Apple are now all on board the FIDO Alliance\nThe FIDO Alliance also gained major traction by the fact that both Microsoft in 2016 and Apple in 2020 joined us on the FIDO board to finally enable the 3 major platform providers to support FIDO2 standards and build passkeys right into our respective operating systems. \n\n[Transition Slide] Let’s go back to where we started, passkeys\n\n[Slide title] Hello passkeys, goodbye passwords\nWe made a joint announcement with Apple and Microsoft that all 3 platforms will support passkeys in our effort to replace passwords in Q4 2022\nPasskeys will be securely synced via keychain technology so they are available on all of a users devices and cross-platform compatible because they are based on FIDO standards enabling a user to jump between one ecosystem to another.\n\n\n[Slide title] Passkeys at Google\nAt Google I/0 2023 we will officially announce passkeys with a partner showcase\nInternally, as a relying party ourselves, we will have a demo of Passkeys for a subset of Google users by end of 2022 and start rolling out passkey support in 2023\n\n\n[End Slide] \nFIDO started with a mission to make secure authentication a first class web primitive adoptable by any website or app. We are finally there and the future is bright.'
ERROR:root:orig input: '[Transition Slide title] Could phones act as security keys?\r\nSecurity keys are great, but you have to buy them, register them, and carry them around. Make sure you don’t lose them. A natural question surfaced: Could phones act as security keys?\r\n\r\n[Slide title] PaaSK and Auto enrollment of FIDO credentials on mobile devices\r\nAround 2017, Google started experimenting with auto-enrollment of FIDO credentials for google users on their Androids and iPhones and storing the corresponding public keys being stored in Cryptauth. By turning a mobile device into a security key, Google would be able to provide the strongest 2SV to anyone with compatible devices.\r\n\r\n[Slide title] Services within Google start leveraging phone-based FIDO credentials\r\nSince 2017, several services have successfully leveraged phone-based, auto-enrolled FIDO credentials. \r\nOne example is same-device fingerprint re-auth (also called LUV or Local User Verification) when a user performs a sensitive action on their Google account. LUV was first launched in 2018.  \r\nDevice Prompt Challenge or Authzen (externally known as Google Prompt) also made use of auto-enrolled FIDO credentials. \r\nOther examples include Google Payments and SmartSetup.\r\n\r\n[Slide Title] How can you solve secure cross device authentication when there is a phone-based FIDO credential?\r\n[Slide subtitle] a cross-device handshake using bluetooth and cloud called caBLE\r\n\r\nHow can you solve secure cross device authentication when there is a phone-based FIDO credential? The answer lies in a cross-device handshake that using bluetooth for proximity and the a secure tunnel in the cloud to marshall data back and forth between devices.\r\n\r\ncaBLE or Cloud Assisted BLE was rolled out to Google users in 2019 and a new version of the protocol called caBLEv2 started rolling out in 2021. \r\n\r\nGoogle submitted the caBLE protocol to the standards body so it could become a cross-device industry standard for phones being used as security keys and the caBLE protocol is now officially named “Hybrid”. \r\n\r\nThe invention of the Hybrid Client to Authenticator protocol is another great example of how Googlers push the boundary on innovation and then work with standards bodies to make the protocol implementable by everyone. \r\n\r\n[Slide Title] The evolution of FIDO2 to support passwordless\r\nU2F has always been strictly limited to 2nd factor authentication as the user had to be first looked up along with their registered public key credentials and credential ids\r\n\r\nThe concept of a passkey (also called a discoverable credential or a multi device credential) was created so the RP wouldn’t have to first lookup the user and their registered public key credentials before the assert request and to account for the fact that private keys could be securely synced to multiple devices via keychain technology\r\nThe FIDO2 standard includes the  W3C Webauthn protocol which is a web API that allows servers to register and authenticate users using public key cryptography + CTAP2 (client to authenticator protocol) which standardizes how browsers and operating systems (clients) communicate with authenticators. \r\n\r\n[Slide Title] Google, Microsoft and Apple are now all on board the FIDO Alliance\r\nThe FIDO Alliance also gained major traction by the fact that both Microsoft in 2016 and Apple in 2020 joined us on the FIDO board to finally enable the 3 major platform providers to support FIDO2 standards and build passkeys right into our respective operating systems. \r\n\r\n[Transition Slide] Let’s go back to where we started, passkeys\r\n\r\n[Slide title] Hello passkeys, goodbye passwords\r\nWe made a joint announcement with Apple and Microsoft that all 3 platforms will support passkeys in our effort to replace passwords in Q4 2022\r\nPasskeys will be securely synced via keychain technology so they are available on all of a users devices and cross-platform compatible because they are based on FIDO standards enabling a user to jump between one ecosystem to another.\r\n\r\n\r\n[Slide title] Passkeys at Google\r\nAt Google I/0 2023 we will officially announce passkeys with a partner showcase\r\nInternally, as a relying party ourselves, we will have a demo of Passkeys for a subset of Google users by end of 2022 and start rolling out passkey support in 2023\r\n\r\n\r\n[End Slide] \r\nFIDO started with a mission to make secure authentication a first class web primitive adoptable by any website or app. We are finally there and the future is bright.\r\n'
ERROR:root:orig selected_specific len[[["At Google I/0 2023 we will officially announce passkeys with a partner showcase Internally, as a relying party ourselves, we will have a demo of Passkeys for a subset of Google users by end of 2022 and start rolling out passkey support in 2023",{},33],["Hello passkeys, goodbye passwords We made a joint announcement with Apple and Microsoft that all 3 platforms will support passkeys in our effort to replace passwords in Q4 2022 Passkeys will be securely synced via keychain technology so they are available on all of a users devices and cross-platform compatible because they are based on FIDO standards enabling a user to jump between one ecosystem to another.",{},31],["or Cloud Assisted BLE was rolled out to Google users in 2019 and a new version of the protocol called caBLEv2 started rolling out in 2021.",{},18],["The concept of a passkey (also called a discoverable credential or a multi device credential) was created so the RP wouldn’t have to first lookup the user and their registered public key credentials before the assert request and to account for the fact that private keys could be securely synced to multiple devices via keychain technology",{},23],["By turning a mobile device into a security key, Google would be able to provide the strongest 2SV to anyone with compatible devices.",{},6],["The FIDO2 standard includes the  W3C Webauthn protocol which is a web API that allows servers to register and authenticate users using public key cryptography",{},24],["One example is same-device fingerprint re-auth (also called LUV or Local User Verification) when a user performs a sensitive action on their Google account.",{},8],[", Google started experimenting with auto-enrollment of FIDO credentials for google users on their Androids and iPhones and storing the corresponding public keys being stored in Cryptauth.",{},5],["[Slide subtitle] a cross-device handshake using bluetooth and cloud called caBLE",{},14],["Google submitted the caBLE protocol to the standards body so it could become a cross-device industry standard for phones being used as security keys and the caBLE protocol is now officially named “Hybrid”.",{},19],["+ CTAP2 (client to authenticator protocol) which standardizes how browsers and operating systems (clients) communicate with authenticators.",{},25],["[Slide title] PaaSK and Auto enrollment of FIDO credentials on mobile devices Around 2017",{},4],["The evolution of FIDO2 to support passwordless U2F has always been strictly limited to 2nd factor authentication as the user had to be first looked up along with their registered public key credentials and credential ids",{},22],["[Slide title] Services within Google start leveraging phone-based FIDO credentials Since 2017, several services have successfully leveraged phone-based, auto-enrolled FIDO credentials.",{},7],["Device Prompt Challenge or Authzen (externally known as Google Prompt) also made use of auto-enrolled FIDO credentials.",{},10],["The answer lies in a cross-device handshake that using bluetooth for proximity and the a secure tunnel in the cloud to marshall data back and forth between devices.",{},16],["LUV was first launched in 2018.",{},9],["FIDO started with a mission to make secure authentication a first class web primitive adoptable by any website or app.",{},35],["The FIDO Alliance also gained major traction by the fact that both Microsoft in 2016 and Apple in 2020 joined us on the FIDO board to finally enable the 3 major platform providers to support FIDO2 standards and build passkeys right into our respective operating systems.",{},28],["passkeys  [Slide title]",{},30]],["[Transition Slide title] Could phones act as security keys?","Security keys are great, but you have to buy phones, register phones, and carry phones around.","Make sure you don’t lose phones.","A natural question surfaced: Could phones act as security keys?","[Slide title] PaaSK and Auto enrollment of FIDO credentials on mobile devices Around 2017",", Google started experimenting with auto-enrollment of FIDO credentials for google users on their Androids and iPhones and storing the corresponding public keys being stored in Cryptauth.","By turning a mobile device into a security key, Google would be able to provide the strongest 2SV to anyone with compatible devices.","[Slide title] Services within Google start leveraging phone-based FIDO credentials Since 2017, several services have successfully leveraged phone-based, auto-enrolled FIDO credentials.","One example is same-device fingerprint re-auth (also called LUV or Local User Verification) when a user performs a sensitive action on their Google account.","LUV was first launched in 2018.","Device Prompt Challenge or Authzen (externally known as Google Prompt) also made use of auto-enrolled FIDO credentials.","Other examples include Google Payments and SmartSetup.","[Slide Title]","How can you solve secure cross device authentication when there is a phone-based FIDO credential?","[Slide subtitle] a cross-device handshake using bluetooth and cloud called caBLE","How can you solve secure cross device authentication when there is a phone-based FIDO credential?","The answer lies in a cross-device handshake that using bluetooth for proximity and the a secure tunnel in the cloud to marshall data back and forth between devices.","caBLE","or Cloud Assisted BLE was rolled out to Google users in 2019 and a new version of the protocol called caBLEv2 started rolling out in 2021.","Google submitted the caBLE protocol to the standards body so it could become a cross-device industry standard for phones being used as security keys and the caBLE protocol is now officially named “Hybrid”.","The invention of the Hybrid Client to Authenticator protocol is another great example of how Googlers push the boundary on innovation and then work with standards bodies to make the protocol implementable by everyone.","[Slide Title]","The evolution of FIDO2 to support passwordless U2F has always been strictly limited to 2nd factor authentication as the user had to be first looked up along with their registered public key credentials and credential ids","The concept of a passkey (also called a discoverable credential or a multi device credential) was created so the RP wouldn’t have to first lookup the user and their registered public key credentials before the assert request and to account for the fact that private keys could be securely synced to multiple devices via keychain technology","The FIDO2 standard includes the  W3C Webauthn protocol which is a web API that allows servers to register and authenticate users using public key cryptography","+ CTAP2 (client to authenticator protocol) which standardizes how browsers and operating systems (clients) communicate with authenticators.","[Slide Title] Google, Microsoft and Apple are now all on board","the FIDO Alliance","The FIDO Alliance also gained major traction by the fact that both Microsoft in 2016 and Apple in 2020 joined us on the FIDO board to finally enable the 3 major platform providers to support FIDO2 standards and build passkeys right into our respective operating systems.","[Transition Slide] Let’s go back to where we started,","passkeys  [Slide title]","Hello passkeys, goodbye passwords We made a joint announcement with Apple and Microsoft that all 3 platforms will support passkeys in our effort to replace passwords in Q4 2022 Passkeys will be securely synced via keychain technology so they are available on all of a users devices and cross-platform compatible because they are based on FIDO standards enabling a user to jump between one ecosystem to another.","[Slide title] Passkeys at Google","At Google I/0 2023 we will officially announce passkeys with a partner showcase Internally, as a relying party ourselves, we will have a demo of Passkeys for a subset of Google users by end of 2022 and start rolling out passkey support in 2023","[End Slide]","FIDO started with a mission to make secure authentication a first class web primitive adoptable by any website or app.","We are finally there and the future is bright."]]
ERROR:root:orig selected_specific len20
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000628
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents10
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['[Slide title] Passkeys at Google At Google I/0 2023 we will officially announce passkeys with a partner showcase Internally, as a relying party ourselves, we will have a demo of Passkeys for a subset of Google users by end of 2022 and start rolling out passkey support in 2023', 'passkeys  [Slide title] Hello passkeys, goodbye passwords We made a joint announcement with Apple and Microsoft that all 3 platforms will support passkeys in our effort to replace passwords in Q4 2022 Passkeys will be securely synced via keychain technology so they are available on all of a users devices and cross-platform compatible because they are based on FIDO standards enabling a user to jump between one ecosystem to another.', 'caBLE or Cloud Assisted BLE was rolled out to Google users in 2019 and a new version of the protocol called caBLEv2 started rolling out in 2021.', 'The evolution of FIDO2 to support passwordless U2F has always been strictly limited to 2nd factor authentication as the user had to be first looked up along with their registered public key credentials and credential ids The concept of a passkey (also called a discoverable credential or a multi device credential) was created so the RP wouldn’t have to first lookup the user and their registered public key credentials before the assert request and to account for the fact that private keys could be securely synced to multiple devices via keychain technology', ', Google started experimenting with auto-enrollment of FIDO credentials for google users on their Androids and iPhones and storing the corresponding public keys being stored in Cryptauth. By turning a mobile device into a security key, Google would be able to provide the strongest 2SV to anyone with compatible devices.', 'The concept of a passkey (also called a discoverable credential or a multi device credential) was created so the RP wouldn’t have to first lookup the user and their registered public key credentials before the assert request and to account for the fact that private keys could be securely synced to multiple devices via keychain technology The FIDO2 standard includes the  W3C Webauthn protocol which is a web API that allows servers to register and authenticate users using public key cryptography', '[Slide title] Services within Google start leveraging phone-based FIDO credentials Since 2017, several services have successfully leveraged phone-based, auto-enrolled FIDO credentials. One example is same-device fingerprint re-auth (also called LUV or Local User Verification) when a user performs a sensitive action on their Google account.', '[Slide title] PaaSK and Auto enrollment of FIDO credentials on mobile devices Around 2017 , Google started experimenting with auto-enrollment of FIDO credentials for google users on their Androids and iPhones and storing the corresponding public keys being stored in Cryptauth.', 'How can you solve secure cross device authentication when there is a phone-based FIDO credential? [Slide subtitle] a cross-device handshake using bluetooth and cloud called caBLE', 'or Cloud Assisted BLE was rolled out to Google users in 2019 and a new version of the protocol called caBLEv2 started rolling out in 2021. Google submitted the caBLE protocol to the standards body so it could become a cross-device industry standard for phones being used as security keys and the caBLE protocol is now officially named “Hybrid”.']), ('questions', ['Where will passkeys be announced?', 'What will be securely synced via keychain technology?', 'When did caBLEv2 start rolling out?', 'What is a discoverable credential or a multi device credential?', 'What would a mobile device be turned into?', 'What is the name of the protocol that allows a web API to register and authenticate users using public key cryptography?', 'What is another name for same-device fingerprint re-auth?', 'What did Google start experimenting with in 2017?', 'What is the name of the cross-device handshake using bluetooth and cloud?', 'What is the official name of the caBLE protocol?']), ('answers', ['Google I/0 2023', 'Passkeys', '2021', 'a passkey', 'a security key', 'W3C Webauthn protocol', 'LUV or Local User Verification', 'FIDO credentials', 'caBLE', 'Hybrid']), ('options', [['MacWorld 2023', 'WWDC 2023', 'E3 2023'], ['Credit card information', 'Car keys', 'Bank account information'], ['2023', '2025', '2027'], ['a digital certificate', 'a hardware security module (HSM)', 'a One Time Password (OTP)'], ['a phone', 'a camera', 'a notepad'], ['W3C OAuth 2.0 protocol', 'W3C JSON Web Token (JWT) protocol', 'W3C OpenID Connect protocol'], ['SDR or Single Device Registration', 'PKI or Privacy-Protected Keys', 'LUVR or Local User Verification Rights'], ['NFC payments', 'Near-field communications', 'Voice interactions'], ['P2P', 'BLE'], ['CSV', 'Excel', 'HTML']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['[Slide title] Passkeys at Google At Google I/0 2023 we will officially announce passkeys with a partner showcase Internally, as a relying party ourselves, we will have a demo of Passkeys for a subset of Google users by end of 2022 and start rolling out passkey support in 2023', 'passkeys  [Slide title] Hello passkeys, goodbye passwords We made a joint announcement with Apple and Microsoft that all 3 platforms will support passkeys in our effort to replace passwords in Q4 2022 Passkeys will be securely synced via keychain technology so they are available on all of a users devices and cross-platform compatible because they are based on FIDO standards enabling a user to jump between one ecosystem to another.', 'caBLE or Cloud Assisted BLE was rolled out to Google users in 2019 and a new version of the protocol called caBLEv2 started rolling out in 2021.', 'The evolution of FIDO2 to support passwordless U2F has always been strictly limited to 2nd factor authentication as the user had to be first looked up along with their registered public key credentials and credential ids The concept of a passkey (also called a discoverable credential or a multi device credential) was created so the RP wouldn’t have to first lookup the user and their registered public key credentials before the assert request and to account for the fact that private keys could be securely synced to multiple devices via keychain technology', ', Google started experimenting with auto-enrollment of FIDO credentials for google users on their Androids and iPhones and storing the corresponding public keys being stored in Cryptauth. By turning a mobile device into a security key, Google would be able to provide the strongest 2SV to anyone with compatible devices.', 'The concept of a passkey (also called a discoverable credential or a multi device credential) was created so the RP wouldn’t have to first lookup the user and their registered public key credentials before the assert request and to account for the fact that private keys could be securely synced to multiple devices via keychain technology The FIDO2 standard includes the  W3C Webauthn protocol which is a web API that allows servers to register and authenticate users using public key cryptography', '[Slide title] Services within Google start leveraging phone-based FIDO credentials Since 2017, several services have successfully leveraged phone-based, auto-enrolled FIDO credentials. One example is same-device fingerprint re-auth (also called LUV or Local User Verification) when a user performs a sensitive action on their Google account.', '[Slide title] PaaSK and Auto enrollment of FIDO credentials on mobile devices Around 2017 , Google started experimenting with auto-enrollment of FIDO credentials for google users on their Androids and iPhones and storing the corresponding public keys being stored in Cryptauth.', 'How can you solve secure cross device authentication when there is a phone-based FIDO credential? [Slide subtitle] a cross-device handshake using bluetooth and cloud called caBLE', 'or Cloud Assisted BLE was rolled out to Google users in 2019 and a new version of the protocol called caBLEv2 started rolling out in 2021. Google submitted the caBLE protocol to the standards body so it could become a cross-device industry standard for phones being used as security keys and the caBLE protocol is now officially named “Hybrid”.']), ('questions', ['Where will passkeys be announced?', 'What will be securely synced via keychain technology?', 'When did caBLEv2 start rolling out?', 'What is a discoverable credential or a multi device credential?', 'What would a mobile device be turned into?', 'What is the name of the protocol that allows a web API to register and authenticate users using public key cryptography?', 'What is another name for same-device fingerprint re-auth?', 'What did Google start experimenting with in 2017?', 'What is the name of the cross-device handshake using bluetooth and cloud?', 'What is the official name of the caBLE protocol?']), ('answers', ['Google I/0 2023', 'Passkeys', '2021', 'a passkey', 'a security key', 'W3C Webauthn protocol', 'LUV or Local User Verification', 'FIDO credentials', 'caBLE', 'Hybrid']), ('options', [['MacWorld 2023', 'WWDC 2023', 'E3 2023'], ['Credit card information', 'Car keys', 'Bank account information'], ['2023', '2025', '2027'], ['a digital certificate', 'a hardware security module (HSM)', 'a One Time Password (OTP)'], ['a phone', 'a camera', 'a notepad'], ['W3C OAuth 2.0 protocol', 'W3C JSON Web Token (JWT) protocol', 'W3C OpenID Connect protocol'], ['SDR or Single Device Registration', 'PKI or Privacy-Protected Keys', 'LUVR or Local User Verification Rights'], ['NFC payments', 'Near-field communications', 'Voice interactions'], ['P2P', 'BLE'], ['CSV', 'Excel', 'HTML']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:28.476822
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 2 column 1 (char 1)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.313503
ERROR:root:payload: 'Space is the boundless three-dimensional extent in which objects and events have relative position and direction.[1] In classical physics, physical space is often conceived in three linear dimensions, although modern physicists usually consider it, with time, to be part of a boundless four-dimensional continuum known as spacetime. The concept of space is considered to be of fundamental importance to an understanding of the physical universe. However, disagreement continues between philosophers over whether it is itself an entity, a relationship between entities, or part of a conceptual framework.\n\nDebates concerning the nature, essence and the mode of existence of space date back to antiquity; namely, to treatises like the Timaeus of Plato, or Socrates in his reflections on what the Greeks called khôra (i.e. "space"), or in the Physics of Aristotle (Book IV, Delta) in the definition of topos (i.e. place), or in the later "geometrical conception of place" as "space qua extension" in the Discourse on Place (Qawl fi al-Makan) of the 11th-century Arab polymath Alhazen.[2] Many of these classical philosophical questions were discussed in the Renaissance and then reformulated in the 17th century, particularly during the early development of classical mechanics. In Isaac Newton\'s view, space was absolute—in the sense that it existed permanently and independently of whether there was any matter in the space.[3] Other natural philosophers, notably Gottfried Leibniz, thought instead that space was in fact a collection of relations between objects, given by their distance and direction from one another. In the 18th century, the philosopher and theologian George Berkeley attempted to refute the "visibility of spatial depth" in his Essay Towards a New Theory of Vision. Later, the metaphysician Immanuel Kant said that the concepts of space and time are not empirical ones derived from experiences of the outside world—they are elements of an already given systematic framework that humans possess and use to structure all experiences. Kant referred to the experience of "space" in his Critique of Pure Reason as being a subjective "pure a priori form of intuition".\n\nIn the 19th and 20th centuries mathematicians began to examine geometries that are non-Euclidean, in which space is conceived as curved, rather than flat. According to Albert Einstein\'s theory of general relativity, space around gravitational fields deviates from Euclidean space.[4] Experimental tests of general relativity have confirmed that non-Euclidean geometries provide a better model for the shape of space.'
ERROR:root:orig input: 'Space is the boundless three-dimensional extent in which objects and events have relative position and direction.[1] In classical physics, physical space is often conceived in three linear dimensions, although modern physicists usually consider it, with time, to be part of a boundless four-dimensional continuum known as spacetime. The concept of space is considered to be of fundamental importance to an understanding of the physical universe. However, disagreement continues between philosophers over whether it is itself an entity, a relationship between entities, or part of a conceptual framework.\r\n\r\nDebates concerning the nature, essence and the mode of existence of space date back to antiquity; namely, to treatises like the Timaeus of Plato, or Socrates in his reflections on what the Greeks called khôra (i.e. "space"), or in the Physics of Aristotle (Book IV, Delta) in the definition of topos (i.e. place), or in the later "geometrical conception of place" as "space qua extension" in the Discourse on Place (Qawl fi al-Makan) of the 11th-century Arab polymath Alhazen.[2] Many of these classical philosophical questions were discussed in the Renaissance and then reformulated in the 17th century, particularly during the early development of classical mechanics. In Isaac Newton\'s view, space was absolute—in the sense that it existed permanently and independently of whether there was any matter in the space.[3] Other natural philosophers, notably Gottfried Leibniz, thought instead that space was in fact a collection of relations between objects, given by their distance and direction from one another. In the 18th century, the philosopher and theologian George Berkeley attempted to refute the "visibility of spatial depth" in his Essay Towards a New Theory of Vision. Later, the metaphysician Immanuel Kant said that the concepts of space and time are not empirical ones derived from experiences of the outside world—they are elements of an already given systematic framework that humans possess and use to structure all experiences. Kant referred to the experience of "space" in his Critique of Pure Reason as being a subjective "pure a priori form of intuition".\r\n\r\nIn the 19th and 20th centuries mathematicians began to examine geometries that are non-Euclidean, in which space is conceived as curved, rather than flat. According to Albert Einstein\'s theory of general relativity, space around gravitational fields deviates from Euclidean space.[4] Experimental tests of general relativity have confirmed that non-Euclidean geometries provide a better model for the shape of space.'
ERROR:root:orig selected_specific len[[["Debates concerning the nature, essence and the mode of existence of space date back to antiquity; namely, to treatises like the Timaeus of Plato, or Socrates in his reflections on what the Greeks called khôra (i.e. \"space\"), or in the Physics of Aristotle (Book IV, Delta) in the definition of topos (i.e. place), or in the later \"geometrical conception of place\" as \"space qua extension\" in the Discourse on Place",{},4],["According to Albert Einstein's theory of general relativity, space around gravitational fields deviates from Euclidean space.[4]",{},12],["In Isaac Newton's view, space was absolute—in the sense that it existed permanently and independently of whether there was any matter in the space.[3] Other natural philosophers, notably Gottfried Leibniz, thought instead that space was in fact a collection of relations between objects, given by their distance and direction from one another.",{},7],["In the 18th century, the philosopher and theologian George Berkeley attempted to refute the \"visibility of spatial depth\" in his Essay Towards a New Theory of Vision.",{},8],["Kant referred to the experience of \"space\" in his Critique of Pure Reason as being a subjective \"pure a priori form of intuition\".",{},10],["Later, the metaphysician Immanuel Kant said that the concepts of space and time are not empirical ones derived from experiences of the outside world—they are elements of an already given systematic framework that humans possess and use to structure all experiences.",{},9],["In classical physics, physical space is often conceived in three linear dimensions, although modern physicists usually consider it, with time, to be part of a boundless four-dimensional continuum known as spacetime.",{},1],["In the 19th and 20th centuries mathematicians began to examine geometries that are non-Euclidean, in which space is conceived as curved, rather than flat.",{},11],["(Qawl fi al-Makan) of the 11th-century Arab polymath Alhazen.[2]",{},5]],["Space is the boundless three-dimensional extent in which objects and events have relative position and direction.[1]","In classical physics, physical space is often conceived in three linear dimensions, although modern physicists usually consider it, with time, to be part of a boundless four-dimensional continuum known as spacetime.","The concept of space is considered to be of fundamental importance to an understanding of the physical universe.","However, disagreement continues between philosophers over whether it is itself an entity, a relationship between entities, or part of a conceptual framework.","Debates concerning the nature, essence and the mode of existence of space date back to antiquity; namely, to treatises like the Timaeus of Plato, or Socrates in his reflections on what the Greeks called khôra (i.e. \"space\"), or in the Physics of Aristotle (Book IV, Delta) in the definition of topos (i.e. place), or in the later \"geometrical conception of place\" as \"space qua extension\" in the Discourse on Place","(Qawl fi al-Makan) of the 11th-century Arab polymath Alhazen.[2]","Many of these classical philosophical questions were discussed in the Renaissance and then reformulated in the 17th century, particularly during the early development of classical mechanics.","In Isaac Newton's view, space was absolute—in the sense that it existed permanently and independently of whether there was any matter in the space.[3] Other natural philosophers, notably Gottfried Leibniz, thought instead that space was in fact a collection of relations between objects, given by their distance and direction from one another.","In the 18th century, the philosopher and theologian George Berkeley attempted to refute the \"visibility of spatial depth\" in his Essay Towards a New Theory of Vision.","Later, the metaphysician Immanuel Kant said that the concepts of space and time are not empirical ones derived from experiences of the outside world—they are elements of an already given systematic framework that humans possess and use to structure all experiences.","Kant referred to the experience of \"space\" in Immanuel Kant's Critique of Pure Reason as being a subjective \"pure a priori form of intuition\".","In the 19th and 20th centuries mathematicians began to examine geometries that are non-Euclidean, in which space is conceived as curved, rather than flat.","According to Albert Einstein's theory of general relativity, space around gravitational fields deviates from Euclidean space.[4]","Experimental tests of general relativity have confirmed that non-Euclidean geometries provide a better model for the shape of space."]]
ERROR:root:orig selected_specific len9
ERROR:root:offsetting TF
ERROR:root:0:00:00.000004
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents9
ERROR:root:total before 0:00:03.109317
ERROR:root:fitb timer0:00:00.000003
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 900, in new
    mcq_output = [call.result() for call in mcq_request]
  File "/datadrive/qgv1/text_prod/app.py", line 900, in <listcomp>
    mcq_output = [call.result() for call in mcq_request]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 94, in query
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.340676
ERROR:root:payload: 'Space is the boundless three-dimensional extent in which objects and events have relative position and direction.[1] In classical physics, physical space is often conceived in three linear dimensions, although modern physicists usually consider it, with time, to be part of a boundless four-dimensional continuum known as spacetime. The concept of space is considered to be of fundamental importance to an understanding of the physical universe. However, disagreement continues between philosophers over whether it is itself an entity, a relationship between entities, or part of a conceptual framework.\n\nDebates concerning the nature, essence and the mode of existence of space date back to antiquity; namely, to treatises like the Timaeus of Plato, or Socrates in his reflections on what the Greeks called khôra (i.e. "space"), or in the Physics of Aristotle (Book IV, Delta) in the definition of topos (i.e. place), or in the later "geometrical conception of place" as "space qua extension" in the Discourse on Place (Qawl fi al-Makan) of the 11th-century Arab polymath Alhazen.[2] Many of these classical philosophical questions were discussed in the Renaissance and then reformulated in the 17th century, particularly during the early development of classical mechanics. In Isaac Newton\'s view, space was absolute—in the sense that it existed permanently and independently of whether there was any matter in the space.[3] Other natural philosophers, notably Gottfried Leibniz, thought instead that space was in fact a collection of relations between objects, given by their distance and direction from one another. In the 18th century, the philosopher and theologian George Berkeley attempted to refute the "visibility of spatial depth" in his Essay Towards a New Theory of Vision. Later, the metaphysician Immanuel Kant said that the concepts of space and time are not empirical ones derived from experiences of the outside world—they are elements of an already given systematic framework that humans possess and use to structure all experiences. Kant referred to the experience of "space" in his Critique of Pure Reason as being a subjective "pure a priori form of intuition".\n\nIn the 19th and 20th centuries mathematicians began to examine geometries that are non-Euclidean, in which space is conceived as curved, rather than flat. According to Albert Einstein\'s theory of general relativity, space around gravitational fields deviates from Euclidean space.[4] Experimental tests of general relativity have confirmed that non-Euclidean geometries provide a better model for the shape of space.'
ERROR:root:orig input: 'Space is the boundless three-dimensional extent in which objects and events have relative position and direction.[1] In classical physics, physical space is often conceived in three linear dimensions, although modern physicists usually consider it, with time, to be part of a boundless four-dimensional continuum known as spacetime. The concept of space is considered to be of fundamental importance to an understanding of the physical universe. However, disagreement continues between philosophers over whether it is itself an entity, a relationship between entities, or part of a conceptual framework.\r\n\r\nDebates concerning the nature, essence and the mode of existence of space date back to antiquity; namely, to treatises like the Timaeus of Plato, or Socrates in his reflections on what the Greeks called khôra (i.e. "space"), or in the Physics of Aristotle (Book IV, Delta) in the definition of topos (i.e. place), or in the later "geometrical conception of place" as "space qua extension" in the Discourse on Place (Qawl fi al-Makan) of the 11th-century Arab polymath Alhazen.[2] Many of these classical philosophical questions were discussed in the Renaissance and then reformulated in the 17th century, particularly during the early development of classical mechanics. In Isaac Newton\'s view, space was absolute—in the sense that it existed permanently and independently of whether there was any matter in the space.[3] Other natural philosophers, notably Gottfried Leibniz, thought instead that space was in fact a collection of relations between objects, given by their distance and direction from one another. In the 18th century, the philosopher and theologian George Berkeley attempted to refute the "visibility of spatial depth" in his Essay Towards a New Theory of Vision. Later, the metaphysician Immanuel Kant said that the concepts of space and time are not empirical ones derived from experiences of the outside world—they are elements of an already given systematic framework that humans possess and use to structure all experiences. Kant referred to the experience of "space" in his Critique of Pure Reason as being a subjective "pure a priori form of intuition".\r\n\r\nIn the 19th and 20th centuries mathematicians began to examine geometries that are non-Euclidean, in which space is conceived as curved, rather than flat. According to Albert Einstein\'s theory of general relativity, space around gravitational fields deviates from Euclidean space.[4] Experimental tests of general relativity have confirmed that non-Euclidean geometries provide a better model for the shape of space.'
ERROR:root:orig selected_specific len[[["Debates concerning the nature, essence and the mode of existence of space date back to antiquity; namely, to treatises like the Timaeus of Plato, or Socrates in his reflections on what the Greeks called khôra (i.e. \"space\"), or in the Physics of Aristotle (Book IV, Delta) in the definition of topos (i.e. place), or in the later \"geometrical conception of place\" as \"space qua extension\" in the Discourse on Place",{},4],["According to Albert Einstein's theory of general relativity, space around gravitational fields deviates from Euclidean space.[4]",{},12],["In Isaac Newton's view, space was absolute—in the sense that it existed permanently and independently of whether there was any matter in the space.[3] Other natural philosophers, notably Gottfried Leibniz, thought instead that space was in fact a collection of relations between objects, given by their distance and direction from one another.",{},7],["In the 18th century, the philosopher and theologian George Berkeley attempted to refute the \"visibility of spatial depth\" in his Essay Towards a New Theory of Vision.",{},8],["Kant referred to the experience of \"space\" in his Critique of Pure Reason as being a subjective \"pure a priori form of intuition\".",{},10],["Later, the metaphysician Immanuel Kant said that the concepts of space and time are not empirical ones derived from experiences of the outside world—they are elements of an already given systematic framework that humans possess and use to structure all experiences.",{},9],["In classical physics, physical space is often conceived in three linear dimensions, although modern physicists usually consider it, with time, to be part of a boundless four-dimensional continuum known as spacetime.",{},1],["In the 19th and 20th centuries mathematicians began to examine geometries that are non-Euclidean, in which space is conceived as curved, rather than flat.",{},11],["(Qawl fi al-Makan) of the 11th-century Arab polymath Alhazen.[2]",{},5]],["Space is the boundless three-dimensional extent in which objects and events have relative position and direction.[1]","In classical physics, physical space is often conceived in three linear dimensions, although modern physicists usually consider it, with time, to be part of a boundless four-dimensional continuum known as spacetime.","The concept of space is considered to be of fundamental importance to an understanding of the physical universe.","However, disagreement continues between philosophers over whether it is itself an entity, a relationship between entities, or part of a conceptual framework.","Debates concerning the nature, essence and the mode of existence of space date back to antiquity; namely, to treatises like the Timaeus of Plato, or Socrates in his reflections on what the Greeks called khôra (i.e. \"space\"), or in the Physics of Aristotle (Book IV, Delta) in the definition of topos (i.e. place), or in the later \"geometrical conception of place\" as \"space qua extension\" in the Discourse on Place","(Qawl fi al-Makan) of the 11th-century Arab polymath Alhazen.[2]","Many of these classical philosophical questions were discussed in the Renaissance and then reformulated in the 17th century, particularly during the early development of classical mechanics.","In Isaac Newton's view, space was absolute—in the sense that it existed permanently and independently of whether there was any matter in the space.[3] Other natural philosophers, notably Gottfried Leibniz, thought instead that space was in fact a collection of relations between objects, given by their distance and direction from one another.","In the 18th century, the philosopher and theologian George Berkeley attempted to refute the \"visibility of spatial depth\" in his Essay Towards a New Theory of Vision.","Later, the metaphysician Immanuel Kant said that the concepts of space and time are not empirical ones derived from experiences of the outside world—they are elements of an already given systematic framework that humans possess and use to structure all experiences.","Kant referred to the experience of \"space\" in Immanuel Kant's Critique of Pure Reason as being a subjective \"pure a priori form of intuition\".","In the 19th and 20th centuries mathematicians began to examine geometries that are non-Euclidean, in which space is conceived as curved, rather than flat.","According to Albert Einstein's theory of general relativity, space around gravitational fields deviates from Euclidean space.[4]","Experimental tests of general relativity have confirmed that non-Euclidean geometries provide a better model for the shape of space."]]
ERROR:root:orig selected_specific len9
ERROR:root:offsetting TF
ERROR:root:0:00:00.000006
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents9
ERROR:root:total before 0:00:02.393192
ERROR:root:fitb timer0:00:00.000019
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['However, disagreement continues between philosophers over whether it is itself an entity, a relationship between entities, or part of a conceptual framework. Debates concerning the nature, essence and the mode of existence of space date back to antiquity; namely, to treatises like the Timaeus of Plato, or Socrates in his reflections on what the Greeks called khôra (i.e. "space"), or in the Physics of Aristotle (Book IV, Delta) in the definition of topos (i.e. place), or in the later "geometrical conception of place" as "space qua extension" in the Discourse on Place', "In the 19th and 20th centuries mathematicians began to examine geometries that are non-Euclidean, in which space is conceived as curved, rather than flat. According to Albert Einstein's theory of general relativity, space around gravitational fields deviates from Euclidean space.[4]", "Many of these classical philosophical questions were discussed in the Renaissance and then reformulated in the 17th century, particularly during the early development of classical mechanics. In Isaac Newton's view, space was absolute—in the sense that it existed permanently and independently of whether there was any matter in the space.[3] Other natural philosophers, notably Gottfried Leibniz, thought instead that space was in fact a collection of relations between objects, given by their distance and direction from one another.", 'In Isaac Newton\'s view, space was absolute—in the sense that it existed permanently and independently of whether there was any matter in the space.[3] Other natural philosophers, notably Gottfried Leibniz, thought instead that space was in fact a collection of relations between objects, given by their distance and direction from one another. In the 18th century, the philosopher and theologian George Berkeley attempted to refute the "visibility of spatial depth" in his Essay Towards a New Theory of Vision.', 'Later, the metaphysician Immanuel Kant said that the concepts of space and time are not empirical ones derived from experiences of the outside world—they are elements of an already given systematic framework that humans possess and use to structure all experiences. Kant referred to the experience of "space" in his Critique of Pure Reason as being a subjective "pure a priori form of intuition".', 'In the 18th century, the philosopher and theologian George Berkeley attempted to refute the "visibility of spatial depth" in his Essay Towards a New Theory of Vision. Later, the metaphysician Immanuel Kant said that the concepts of space and time are not empirical ones derived from experiences of the outside world—they are elements of an already given systematic framework that humans possess and use to structure all experiences.', 'Space is the boundless three-dimensional extent in which objects and events have relative position and direction.[1] In classical physics, physical space is often conceived in three linear dimensions, although modern physicists usually consider it, with time, to be part of a boundless four-dimensional continuum known as spacetime.', 'Kant referred to the experience of "space" in Immanuel Kant\'s Critique of Pure Reason as being a subjective "pure a priori form of intuition". In the 19th and 20th centuries mathematicians began to examine geometries that are non-Euclidean, in which space is conceived as curved, rather than flat.', 'Debates concerning the nature, essence and the mode of existence of space date back to antiquity; namely, to treatises like the Timaeus of Plato, or Socrates in his reflections on what the Greeks called khôra (i.e. "space"), or in the Physics of Aristotle (Book IV, Delta) in the definition of topos (i.e. place), or in the later "geometrical conception of place" as "space qua extension" in the Discourse on Place (Qawl fi al-Makan) of the 11th-century Arab polymath Alhazen.[2]']), ('questions', ['What did Socrates call space?', 'What does space around gravitational fields deviates from?', 'Who believed that space existed absolute?', 'Which 18th century philosopher attempted to refute the "visibility of spatial depth"?', 'What did Kant refer to as a subjective form of intuition?', 'Who said that space and time are not empirical concepts derived from experiences of the outside world?', 'Modern physicists consider space to be part of what continuum?', 'What shape are geometries that are non-Euclidean conceived as?', 'Who wrote the Discourse on Place?']), ('answers', ['khôra', 'Euclidean space', 'Isaac Newton', 'George Berkeley', '"space"', 'Immanuel Kant', 'spacetime', 'curved', 'Alhazen']), ('options', [['epergô', 'ken', 'ater'], ['Flat space', 'Spherical space', 'Hyperbolic space'], ['Nicolaus Copernicus', 'Bill Clinton', 'Galileo Galilei'], ['David Hume', 'Immanuel Kant', 'John Locke'], ['"freedom"', '"time"', '"cause"'], ['David Hume', 'John Locke', 'Albert Einstein'], ['energy', 'gravity', 'matter'], ['straight', 'flat', 'oval'], ['Plato and Michelangelo', 'Michelangelo', 'Plato']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:12.964172
ERROR:root:api_check 0:00:00.308062
ERROR:root:payload: "Welcome to Khan Academy! We’re thrilled to have you join our community of millions of learners around the world.\nKeep reading to see how you can use Khan Academy to get help on homework, review concepts for a test, or learn something new. Happy learning!\n1. Choose your subjects\nKhan Academy has thousands of articles, practice problems, and videos to help you learn a wide range of subjects. Click on the Courses tab at the top left of our site or search for a topic to get started.\n\n2. Focus on specific units\nOnce you have chosen your course, you can look for the exact unit you want to learn or review. Select the main unit or an individual lesson to see relevant videos, articles, and practice exercises.\n\n3. See what you already know\nOnce you choose a unit, you can take a quick unit test to see which concepts you’ve mastered and which you may need to practice more. Or, you can dive in from the beginning by doing the first practice exercises.\n\n4. Learn or review key concepts\nWatch videos or read articles to help you learn new skills or review important concepts. All videos have subtitles, so you can easily follow along. If it helps, you can also speed up, slow down, or rewind the videos.\n\n5. Practice what you learn\nAs you build confidence with concepts, put yourself to the test! There are exercises, quizzes, and unit tests in each unit, and a course challenge that includes skills from the entire course to help you demonstrate your understanding and track your progress.\n\n6. Try a Mastery Challenge\nMastery Challenges are a way for you to review and practice skills you’ve previously learned in a course. It's also another way for you to level up or down in Mastery, in addition to taking unit tests and course challenges.\nMastery Challenges always consist of 6 questions that review 3 skills. Mastery Challenges are personalized to you, reviewing skills that you’ve worked on across the entire course.\n\n7. Build a routine\nSet a schedule for yourself, and study at least a few times a week. That way, you’re more likely to remember the new things that you’re learning.\n8. Remember: learning takes time!\nAnd finally, be patient and persistent. We know that sometimes in your learning journey, things will be stressful and frustrating. You won’t always understand something right away, and that’s okay! Your brain is like a muscle: the more you use it, the more it grows. We believe that you can learn anything."
ERROR:root:orig input: "Welcome to Khan Academy! We’re thrilled to have you join our community of millions of learners around the world.\r\nKeep reading to see how you can use Khan Academy to get help on homework, review concepts for a test, or learn something new. Happy learning!\r\n1. Choose your subjects\r\nKhan Academy has thousands of articles, practice problems, and videos to help you learn a wide range of subjects. Click on the Courses tab at the top left of our site or search for a topic to get started.\r\n\r\n2. Focus on specific units\r\nOnce you have chosen your course, you can look for the exact unit you want to learn or review. Select the main unit or an individual lesson to see relevant videos, articles, and practice exercises.\r\n\r\n3. See what you already know\r\nOnce you choose a unit, you can take a quick unit test to see which concepts you’ve mastered and which you may need to practice more. Or, you can dive in from the beginning by doing the first practice exercises.\r\n\r\n4. Learn or review key concepts\r\nWatch videos or read articles to help you learn new skills or review important concepts. All videos have subtitles, so you can easily follow along. If it helps, you can also speed up, slow down, or rewind the videos.\r\n\r\n5. Practice what you learn\r\nAs you build confidence with concepts, put yourself to the test! There are exercises, quizzes, and unit tests in each unit, and a course challenge that includes skills from the entire course to help you demonstrate your understanding and track your progress.\r\n\r\n6. Try a Mastery Challenge\r\nMastery Challenges are a way for you to review and practice skills you’ve previously learned in a course. It's also another way for you to level up or down in Mastery, in addition to taking unit tests and course challenges.\r\nMastery Challenges always consist of 6 questions that review 3 skills. Mastery Challenges are personalized to you, reviewing skills that you’ve worked on across the entire course.\r\n\r\n7. Build a routine\r\nSet a schedule for yourself, and study at least a few times a week. That way, you’re more likely to remember the new things that you’re learning.\r\n8. Remember: learning takes time!\r\nAnd finally, be patient and persistent. We know that sometimes in your learning journey, things will be stressful and frustrating. You won’t always understand something right away, and that’s okay! Your brain is like a muscle: the more you use it, the more it grows. We believe that you can learn anything.\r\n"
ERROR:root:orig selected_specific len[[["Keep reading to see how you can use Khan Academy to get help on homework, review concepts for a test, or learn something new.",{},2],["Choose your subjects Khan Academy has thousands of articles, practice problems, and videos to help you learn a wide range of subjects.",{},5],["Welcome to Khan Academy!",{},0],["Once you choose a unit, you can take a quick unit test to see which concepts you’ve mastered and which you may need to practice more.",{},13],["There are exercises, quizzes, and unit tests in each unit, and a course challenge that includes skills from the entire course to help you demonstrate your understanding and track your progress.",{},21]],["Welcome to Khan Academy!","We’re thrilled to have you join our community of millions of learners around the world.","Keep reading to see how you can use Khan Academy to get help on homework, review concepts for a test, or learn something new.","Happy learning!","1.","Choose your subjects Khan Academy has thousands of articles, practice problems, and videos to help you learn a wide range of subjects.","Click on the Courses tab at the top left of our site or search for a topic to get started.","2.","Focus on specific units","Once you have chosen your course, you can look for the exact unit you want to learn or review.","Select the main unit or an individual lesson to see relevant videos, articles, and practice exercises.","3.","See what you already know","Once you choose a unit, you can take a quick unit test to see which concepts you’ve mastered and which you may need to practice more.","Or, you can dive in from the beginning by doing the first practice exercises.","4.","Learn or review key concepts Watch videos or read articles to help you learn new skills or review important concepts.","All videos have subtitles, so you can easily follow along.","If it helps, you can also speed up, slow down, or rewind the videos.","5.","Practice what you learn As you build confidence with concepts, put yourself to the test!","There are exercises, quizzes, and unit tests in each unit, and a course challenge that includes skills from the entire course to help you demonstrate your understanding and track your progress.","6.","Try a Mastery Challenge Mastery Challenges are a way for you to review and practice skills you’ve previously learned in a course.","It's also another way for you to level up or down in Mastery, in addition to taking unit tests and course challenges.","Mastery Challenges always consist of 6 questions that review 3 skills.","Mastery Challenges are personalized to you, reviewing skills that you’ve worked on across the entire course.","7.","Build a routine Set a schedule for yourself, and study at least a few times a week.","That way, you’re more likely to remember the new things that you’re learning.","8.","Remember: learning takes time!","And finally, be patient and persistent.","We know that sometimes in your learning journey, things will be stressful and frustrating.","You won’t always understand something right away, and that’s okay!","Your brain is like a muscle: the more you use it, the more it grows.","We believe that you can learn anything."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:0:00:00.000005
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents5
ERROR:root:total before 0:00:03.416370
ERROR:root:fitb timer0:00:00.000003
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We’re thrilled to have you join our community of millions of learners around the world. Keep reading to see how you can use Khan Academy to get help on homework, review concepts for a test, or learn something new.', '1. Choose your subjects Khan Academy has thousands of articles, practice problems, and videos to help you learn a wide range of subjects.', 'See what you already know Once you choose a unit, you can take a quick unit test to see which concepts you’ve mastered and which you may need to practice more.', 'Practice what you learn As you build confidence with concepts, put yourself to the test! There are exercises, quizzes, and unit tests in each unit, and a course challenge that includes skills from the entire course to help you demonstrate your understanding and track your progress.']), ('questions', ['What is the name of the online learning community?', 'How many articles, practice problems, and videos does Khan Academy have?', 'What is the name of the unit you choose to use to test your knowledge?', 'What are the three units in each unit?']), ('answers', ['Khan Academy', 'thousands', 'a unit', 'exercises, quizzes, and unit tests']), ('options', [['edX', 'Coursera', 'Udacity'], ['hundreds of thousands', 'hundreds', 'millions'], ['an exam', 'an examen', 'a test'], ['lessons, objectives, and tests', 'concepts, variables, and operations']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:09.642841
ERROR:root:api_check 0:00:00.315608
ERROR:root:payload: "Welcome to Khan Academy! We’re thrilled to have you join our community of millions of learners around the world.\nKeep reading to see how you can use Khan Academy to get help on homework, review concepts for a test, or learn something new. Happy learning!\n1. Choose your subjects\nKhan Academy has thousands of articles, practice problems, and videos to help you learn a wide range of subjects. Click on the Courses tab at the top left of our site or search for a topic to get started.\n\n2. Focus on specific units\nOnce you have chosen your course, you can look for the exact unit you want to learn or review. Select the main unit or an individual lesson to see relevant videos, articles, and practice exercises.\n\n3. See what you already know\nOnce you choose a unit, you can take a quick unit test to see which concepts you’ve mastered and which you may need to practice more. Or, you can dive in from the beginning by doing the first practice exercises.\n\n4. Learn or review key concepts\nWatch videos or read articles to help you learn new skills or review important concepts. All videos have subtitles, so you can easily follow along. If it helps, you can also speed up, slow down, or rewind the videos.\n\n5. Practice what you learn\nAs you build confidence with concepts, put yourself to the test! There are exercises, quizzes, and unit tests in each unit, and a course challenge that includes skills from the entire course to help you demonstrate your understanding and track your progress.\n\n6. Try a Mastery Challenge\nMastery Challenges are a way for you to review and practice skills you’ve previously learned in a course. It's also another way for you to level up or down in Mastery, in addition to taking unit tests and course challenges.\nMastery Challenges always consist of 6 questions that review 3 skills. Mastery Challenges are personalized to you, reviewing skills that you’ve worked on across the entire course.\n\n7. Build a routine\nSet a schedule for yourself, and study at least a few times a week. That way, you’re more likely to remember the new things that you’re learning.\n8. Remember: learning takes time!\nAnd finally, be patient and persistent. We know that sometimes in your learning journey, things will be stressful and frustrating. You won’t always understand something right away, and that’s okay! Your brain is like a muscle: the more you use it, the more it grows. We believe that you can learn anything."
ERROR:root:orig input: "Welcome to Khan Academy! We’re thrilled to have you join our community of millions of learners around the world.\r\nKeep reading to see how you can use Khan Academy to get help on homework, review concepts for a test, or learn something new. Happy learning!\r\n1. Choose your subjects\r\nKhan Academy has thousands of articles, practice problems, and videos to help you learn a wide range of subjects. Click on the Courses tab at the top left of our site or search for a topic to get started.\r\n\r\n2. Focus on specific units\r\nOnce you have chosen your course, you can look for the exact unit you want to learn or review. Select the main unit or an individual lesson to see relevant videos, articles, and practice exercises.\r\n\r\n3. See what you already know\r\nOnce you choose a unit, you can take a quick unit test to see which concepts you’ve mastered and which you may need to practice more. Or, you can dive in from the beginning by doing the first practice exercises.\r\n\r\n4. Learn or review key concepts\r\nWatch videos or read articles to help you learn new skills or review important concepts. All videos have subtitles, so you can easily follow along. If it helps, you can also speed up, slow down, or rewind the videos.\r\n\r\n5. Practice what you learn\r\nAs you build confidence with concepts, put yourself to the test! There are exercises, quizzes, and unit tests in each unit, and a course challenge that includes skills from the entire course to help you demonstrate your understanding and track your progress.\r\n\r\n6. Try a Mastery Challenge\r\nMastery Challenges are a way for you to review and practice skills you’ve previously learned in a course. It's also another way for you to level up or down in Mastery, in addition to taking unit tests and course challenges.\r\nMastery Challenges always consist of 6 questions that review 3 skills. Mastery Challenges are personalized to you, reviewing skills that you’ve worked on across the entire course.\r\n\r\n7. Build a routine\r\nSet a schedule for yourself, and study at least a few times a week. That way, you’re more likely to remember the new things that you’re learning.\r\n8. Remember: learning takes time!\r\nAnd finally, be patient and persistent. We know that sometimes in your learning journey, things will be stressful and frustrating. You won’t always understand something right away, and that’s okay! Your brain is like a muscle: the more you use it, the more it grows. We believe that you can learn anything.\r\n"
ERROR:root:orig selected_specific len[[["Keep reading to see how you can use Khan Academy to get help on homework, review concepts for a test, or learn something new.",{},2],["Choose your subjects Khan Academy has thousands of articles, practice problems, and videos to help you learn a wide range of subjects.",{},5],["Welcome to Khan Academy!",{},0],["Once you choose a unit, you can take a quick unit test to see which concepts you’ve mastered and which you may need to practice more.",{},13],["There are exercises, quizzes, and unit tests in each unit, and a course challenge that includes skills from the entire course to help you demonstrate your understanding and track your progress.",{},21]],["Welcome to Khan Academy!","We’re thrilled to have you join our community of millions of learners around the world.","Keep reading to see how you can use Khan Academy to get help on homework, review concepts for a test, or learn something new.","Happy learning!","1.","Choose your subjects Khan Academy has thousands of articles, practice problems, and videos to help you learn a wide range of subjects.","Click on the Courses tab at the top left of our site or search for a topic to get started.","2.","Focus on specific units","Once you have chosen your course, you can look for the exact unit you want to learn or review.","Select the main unit or an individual lesson to see relevant videos, articles, and practice exercises.","3.","See what you already know","Once you choose a unit, you can take a quick unit test to see which concepts you’ve mastered and which you may need to practice more.","Or, you can dive in from the beginning by doing the first practice exercises.","4.","Learn or review key concepts Watch videos or read articles to help you learn new skills or review important concepts.","All videos have subtitles, so you can easily follow along.","If it helps, you can also speed up, slow down, or rewind the videos.","5.","Practice what you learn As you build confidence with concepts, put yourself to the test!","There are exercises, quizzes, and unit tests in each unit, and a course challenge that includes skills from the entire course to help you demonstrate your understanding and track your progress.","6.","Try a Mastery Challenge Mastery Challenges are a way for you to review and practice skills you’ve previously learned in a course.","It's also another way for you to level up or down in Mastery, in addition to taking unit tests and course challenges.","Mastery Challenges always consist of 6 questions that review 3 skills.","Mastery Challenges are personalized to you, reviewing skills that you’ve worked on across the entire course.","7.","Build a routine Set a schedule for yourself, and study at least a few times a week.","That way, you’re more likely to remember the new things that you’re learning.","8.","Remember: learning takes time!","And finally, be patient and persistent.","We know that sometimes in your learning journey, things will be stressful and frustrating.","You won’t always understand something right away, and that’s okay!","Your brain is like a muscle: the more you use it, the more it grows.","We believe that you can learn anything."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:0:00:00.000005
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents5
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We’re thrilled to have you join our community of millions of learners around the world. Keep reading to see how you can use Khan Academy to get help on homework, review concepts for a test, or learn something new.', '1. Choose your subjects Khan Academy has thousands of articles, practice problems, and videos to help you learn a wide range of subjects.', 'See what you already know Once you choose a unit, you can take a quick unit test to see which concepts you’ve mastered and which you may need to practice more.', 'Practice what you learn As you build confidence with concepts, put yourself to the test! There are exercises, quizzes, and unit tests in each unit, and a course challenge that includes skills from the entire course to help you demonstrate your understanding and track your progress.']), ('questions', ['What is the name of the online learning community?', 'How many articles, practice problems, and videos does Khan Academy have?', 'What is the name of the unit you choose to use to test your knowledge?', 'What are the three units in each unit?']), ('answers', ['Khan Academy', 'thousands', 'a unit', 'exercises, quizzes, and unit tests']), ('options', [['edX', 'Coursera', 'Udacity'], ['hundreds of thousands', 'hundreds', 'millions'], ['an exam', 'an examen', 'a test'], ['lessons, objectives, and tests', 'concepts, variables, and operations']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:11.312441
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.347713
ERROR:root:payload: 'The Ausa Village located in Ausa Taluka, 653 People are living in this Village, 349 are males and 304 are females as per 2011 census. Expected Ausa population 2021/2022 is between 640 and 731. Literate people are 361 out of 224 are male and 137 are female. People living in Ausa depend on multiple skills, total workers are 368 out of which men are 196 and women are 172. Total 1 Cultivators are depended on agriculture farming out of 1 are cultivated by men and 0 are women. 360 people works in agricultural land as a labour in Ausa, men are 192 and 168 are women.'
ERROR:root:orig input: 'The Ausa Village located in Ausa Taluka, 653 People are living in this Village, 349 are males and 304 are females as per 2011 census. Expected Ausa population 2021/2022 is between 640 and 731. Literate people are 361 out of 224 are male and 137 are female. People living in Ausa depend on multiple skills, total workers are 368 out of which men are 196 and women are 172. Total 1 Cultivators are depended on agriculture farming out of 1 are cultivated by men and 0 are women. 360 people works in agricultural land as a labour in Ausa, men are 192 and 168 are women.'
ERROR:root:orig selected_specific len[[["Expected Ausa population 2021/2022 is between 640 and 731.",{},1],["The Ausa Village located in Ausa Taluka, 653 People are living in this Village, 349 are males and 304 are females as per 2011 census.",{},0],["360 people works in agricultural land as a labour in Ausa, men are 192 and 168 are women.",{},6],["Literate people are 361 out of 224 are male and 137 are female.",{},2],["Total 1 Cultivators are depended on agriculture farming out of 1 are cultivated by men and 0 are women.",{},5],["People living in Ausa depend on multiple skills, total workers are 368 out of which",{},3],["men are 196 and women are 172.",{},4]],["The Ausa Village located in Ausa Taluka, 653 People are living in this Village, 349 are males and 304 are females as per 2011 census.","Expected Ausa population 2021/2022 is between 640 and 731.","Literate people are 361 out of 224 are male and 137 are female.","People living in Ausa depend on multiple skills, total workers are 368 out of which","men are 196 and women are 172.","Total 1 Cultivators are depended on agriculture farming out of 1 are cultivated by men and 0 are women.","360 people works in agricultural land as a labour in Ausa, men are 192 and 168 are women."]]
ERROR:root:orig selected_specific len7
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents7
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The Ausa Village located in Ausa Taluka, 653 People are living in this Village, 349 are males and 304 are females as per 2011 census. Expected Ausa population 2021/2022 is between 640 and 731.', ' The Ausa Village located in Ausa Taluka, 653 People are living in this Village, 349 are males and 304 are females as per 2011 census.', 'Total 1 Cultivators are depended on agriculture farming out of 1 are cultivated by men and 0 are women. 360 people works in agricultural land as a labour in Ausa, men are 192 and 168 are women.', 'Expected Ausa population 2021/2022 is between 640 and 731. Literate people are 361 out of 224 are male and 137 are female.', 'men are 196 and women are 172. Total 1 Cultivators are depended on agriculture farming out of 1 are cultivated by men and 0 are women.', 'Literate people are 361 out of 224 are male and 137 are female. People living in Ausa depend on multiple skills, total workers are 368 out of which', 'People living in Ausa depend on multiple skills, total workers are 368 out of which men are 196 and women are 172.']), ('questions', ['What is the expected population of Ausa Village in 2021/2022?', 'How many people live in the Ausa Village?', 'What gender are 168 of the workers?', 'How many females are expected to read in Ausa in 2021?', 'How many women cultivate the crops?', 'How many total workers are there in Ausa?', 'How many women work in Ausa?']), ('answers', ['640 and 731', '653', 'women', '137', '0', '368', '172']), ('options', [['641 and 731', '731 and 641', '641 and 642'], ['456'], ['men', 'transgender men', 'transgender women'], ['13', '70'], ['3', '1', '2'], ['3', '12', '1,200'], ['8', '1', '2']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:11.203028
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:05.229229
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents3
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.']), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'Who are some of the Greek mathematicians that we owe our ideas to?']), ('answers', ['Ancient Greeks', 'Hippocrates', 'Pythagoras, Euclid, and Archimedes']), ('options', [['Anthropologists', 'Ancient Chinese', 'Ancient Romans'], ['Galen', 'Plato', 'Aristotle'], ['Pythagoras and Euclid', 'Plato and Archimedes', 'Plato and Aristotle']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.081260
ERROR:root:api_check 0:00:00.321637
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000640
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:total before 0:00:00.806227
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001471
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as  _________ .', 'answer': 'Pythagoras, Euclid, and Archimedes', 'options': ['Pythagoras, Zeno, and Euclid', 'Plato, Zeno, and Euclid', 'Plato, Euclid, and Archimedes'], 'context': 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.'}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.']), ('questions', ['Who developed some of the first astronomical models?', 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as  _________ .']), ('answers', ['Ancient Greeks', 'Pythagoras, Euclid, and Archimedes']), ('options', [['Anthropologists', 'Ancient Chinese', 'Ancient Romans'], ['Pythagoras, Zeno, and Euclid', 'Plato, Zeno, and Euclid', 'Plato, Euclid, and Archimedes']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.']), ('questions', ['Who developed some of the first astronomical models?', 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as  _________ .']), ('answers', ['Ancient Greeks', 'Pythagoras, Euclid, and Archimedes']), ('options', [['Anthropologists', 'Ancient Chinese', 'Ancient Romans'], ['Pythagoras, Zeno, and Euclid', 'Plato, Zeno, and Euclid', 'Plato, Euclid, and Archimedes']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['Hippocrates, another ancient Greek, is the most famous physician in antiquity.']), ('incorrect', [['Hippocrates, another ancient Greek, is the most celebrated physician of his day.']])]))])
ERROR:root:Request 0:00:07.527926
ERROR:root:api_check 0:00:00.336213
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.001762
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:00.835544
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001393
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.', 'answer': 'Hippocratic oath', 'options': ['Congress of Vienna', 'Medical Association of America', 'British Medical Association'], 'context': 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.'}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.']), ('answers', ['Ancient Greeks', 'Hippocrates', 'Hippocratic oath']), ('options', [['Anthropologists', 'Ancient Chinese', 'Ancient Romans'], ['Galen', 'Plato', 'Aristotle'], ['Congress of Vienna', 'Medical Association of America', 'British Medical Association']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.']), ('answers', ['Ancient Greeks', 'Hippocrates', 'Hippocratic oath']), ('options', [['Anthropologists', 'Ancient Chinese', 'Ancient Romans'], ['Galen', 'Plato', 'Aristotle'], ['Congress of Vienna', 'Medical Association of America', 'British Medical Association']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.']), ('incorrect', [['We owe our basic ideas about geometry and the concept of mathematical proofs to Einstein, who was a physicist and a mathematician and a physicist himself."', 'We owe our basic ideas about geometry and the concept of mathematical proofs to Einstein.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to the most powerful and brilliant mathematicians of our day," said Prof. T.S.']])]))])
ERROR:root:Request 0:00:09.633818
ERROR:root:api_check 0:00:00.328641
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.001708
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:00.887056
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001261
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.', 'answer': 'Hippocratic oath', 'options': ['Congress of Vienna', 'Medical Association of America', 'British Medical Association'], 'context': 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.'}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.']), ('answers', ['Ancient Greeks', 'Hippocrates', 'Hippocratic oath']), ('options', [['Anthropologists', 'Ancient Chinese', 'Ancient Romans'], ['Galen', 'Plato', 'Aristotle'], ['Congress of Vienna', 'Medical Association of America', 'British Medical Association']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.']), ('answers', ['Ancient Greeks', 'Hippocrates', 'Hippocratic oath']), ('options', [['Anthropologists', 'Ancient Chinese', 'Ancient Romans'], ['Galen', 'Plato', 'Aristotle'], ['Congress of Vienna', 'Medical Association of America', 'British Medical Association']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.']), ('incorrect', [['We owe our basic ideas about geometry and the concept of mathematical proofs to our students, and we\'re excited about the opportunity to work with these students in the future."', 'We owe our basic ideas about geometry and the concept of mathematical proofs to Albert Einstein," he said.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to our students, and we owe them much more than the mathematical proofs that we teach today."']])]))])
ERROR:root:Request 0:00:05.872448
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:02.134918
ERROR:root:api_check 0:00:09.869536
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000547
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:02.373045
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001176
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000532
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:04.319545
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.002740
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 900, in new
    mcq_output = [call.result() for call in mcq_request]
  File "/datadrive/qgv1/text_prod/app.py", line 900, in <listcomp>
    mcq_output = [call.result() for call in mcq_request]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 94, in query
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as  _________ .', 'answer': 'Pythagoras, Euclid, and Archimedes', 'options': ['Plato, Euclid, and Archimedes', 'Pythagoras, Zeno, and Euclid', 'Plato, Zeno, and Euclid'], 'context': 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.'}, {'question_statement': 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.', 'answer': 'Hippocratic oath', 'options': ['Congress of Vienna', 'Medical Association of America', 'British Medical Association'], 'context': 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.'}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity. Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('questions', ['Who developed some of the first astronomical models?', "Who turned Socrates' writing style into written form?", 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as  _________ .', 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.']), ('answers', ['Ancient Greeks', 'Plato', 'Pythagoras, Euclid, and Archimedes', 'Hippocratic oath']), ('options', [['Ancient Romans', 'Anthropologists', 'Ancient Chinese'], ['Plutarch', 'Aristophanes', 'Xenophon'], ['Plato, Euclid, and Archimedes', 'Pythagoras, Zeno, and Euclid', 'Plato, Zeno, and Euclid'], ['Congress of Vienna', 'Medical Association of America', 'British Medical Association']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity. Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('questions', ['Who developed some of the first astronomical models?', "Who turned Socrates' writing style into written form?", 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as  _________ .', 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.']), ('answers', ['Ancient Greeks', 'Plato', 'Pythagoras, Euclid, and Archimedes', 'Hippocratic oath']), ('options', [['Ancient Romans', 'Anthropologists', 'Ancient Chinese'], ['Plutarch', 'Aristophanes', 'Xenophon'], ['Plato, Euclid, and Archimedes', 'Pythagoras, Zeno, and Euclid', 'Plato, Zeno, and Euclid'], ['Congress of Vienna', 'Medical Association of America', 'British Medical Association']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "Aristotle, Plato's student, wrote about topics as varied as biology and drama."]), ('incorrect', [['Hippocrates, another ancient Greek, is one of the most important philosophers.'], ["Aristotle, Plato's student, wrote about the Athenians and the Arianians.", "Aristotle, Plato's student, wrote about Aristotle's theory of evolution."]])]))])
ERROR:root:Request 0:00:08.863263
ERROR:root:api_check 0:00:00.331851
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.001763
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.468723
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001650
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as  _________ .', 'answer': 'Pythagoras, Euclid, and Archimedes', 'options': ['Plato, Euclid, and Archimedes', 'Pythagoras, Zeno, and Euclid', 'Plato, Zeno, and Euclid'], 'context': 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.'}, {'question_statement': 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.', 'answer': 'Hippocratic oath', 'options': ['Congress of Vienna', 'Medical Association of America', 'British Medical Association'], 'context': 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.'}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity. Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('questions', ['Who developed some of the first astronomical models?', "Who turned Socrates' writing style into written form?", 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as  _________ .', 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.']), ('answers', ['Ancient Greeks', 'Plato', 'Pythagoras, Euclid, and Archimedes', 'Hippocratic oath']), ('options', [['Ancient Romans', 'Anthropologists', 'Ancient Chinese'], ['Plutarch', 'Aristophanes', 'Xenophon'], ['Plato, Euclid, and Archimedes', 'Pythagoras, Zeno, and Euclid', 'Plato, Zeno, and Euclid'], ['Congress of Vienna', 'Medical Association of America', 'British Medical Association']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity. Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('questions', ['Who developed some of the first astronomical models?', "Who turned Socrates' writing style into written form?", 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as  _________ .', 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.']), ('answers', ['Ancient Greeks', 'Plato', 'Pythagoras, Euclid, and Archimedes', 'Hippocratic oath']), ('options', [['Ancient Romans', 'Anthropologists', 'Ancient Chinese'], ['Plutarch', 'Aristophanes', 'Xenophon'], ['Plato, Euclid, and Archimedes', 'Pythagoras, Zeno, and Euclid', 'Plato, Zeno, and Euclid'], ['Congress of Vienna', 'Medical Association of America', 'British Medical Association']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "Aristotle, Plato's student, wrote about topics as varied as biology and drama."]), ('incorrect', [['Hippocrates, another ancient Greek, is described as being "the greatest of the philosophers."'], ["Aristotle, Plato's student, wrote about this in his work on the subject, Philosophicus."]])]))])
ERROR:root:api_check 0:00:02.374787
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.002195
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.428098
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.002361
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as  _________ .', 'answer': 'Pythagoras, Euclid, and Archimedes', 'options': ['Plato, Euclid, and Archimedes', 'Pythagoras, Zeno, and Euclid', 'Plato, Zeno, and Euclid'], 'context': 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.'}, {'question_statement': 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.', 'answer': 'Hippocratic oath', 'options': ['Congress of Vienna', 'Medical Association of America', 'British Medical Association'], 'context': 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.'}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity. Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('questions', ['Who developed some of the first astronomical models?', "Who turned Socrates' writing style into written form?", 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as  _________ .', 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.']), ('answers', ['Ancient Greeks', 'Plato', 'Pythagoras, Euclid, and Archimedes', 'Hippocratic oath']), ('options', [['Ancient Romans', 'Anthropologists', 'Ancient Chinese'], ['Plutarch', 'Aristophanes', 'Xenophon'], ['Plato, Euclid, and Archimedes', 'Pythagoras, Zeno, and Euclid', 'Plato, Zeno, and Euclid'], ['Congress of Vienna', 'Medical Association of America', 'British Medical Association']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity. Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('questions', ['Who developed some of the first astronomical models?', "Who turned Socrates' writing style into written form?", 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as  _________ .', 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.']), ('answers', ['Ancient Greeks', 'Plato', 'Pythagoras, Euclid, and Archimedes', 'Hippocratic oath']), ('options', [['Ancient Romans', 'Anthropologists', 'Ancient Chinese'], ['Plutarch', 'Aristophanes', 'Xenophon'], ['Plato, Euclid, and Archimedes', 'Pythagoras, Zeno, and Euclid', 'Plato, Zeno, and Euclid'], ['Congress of Vienna', 'Medical Association of America', 'British Medical Association']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "Aristotle, Plato's student, wrote about topics as varied as biology and drama."]), ('incorrect', [[], ["Aristotle, Plato's student, wrote about Aristotle's thought."]])]))])
ERROR:root:Request 0:00:08.832088
ERROR:root:Request 0:00:11.775187
ERROR:root:api_check 0:00:00.327637
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents8
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity. Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama.", 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.", 'Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.']), ('questions', ['Who developed some of the first astronomical models?', "Who turned Socrates' writing style into written form?", 'Who is the most famous physician in antiquity?', "Who was Plato's student?", 'Who are some of the Greek mathematicians that we owe our ideas to?', 'What is the name of the medical standard for doctors?', 'What did Hippocrates establish?']), ('answers', ['Ancient Greeks', 'Plato', 'Hippocrates', 'Aristotle', 'Pythagoras, Euclid, and Archimedes', 'Hippocratic oath', 'medical school']), ('options', [['Ancient Romans', 'Anthropologists', 'Ancient Chinese'], ['Plutarch', 'Aristophanes', 'Xenophon'], ['Plato', 'Aristotle', 'Galen'], ['Plato', 'Socrates', 'Pythagoras'], ['Plato and Archimedes', 'Pythagoras and Euclid', 'Plato and Aristotle'], ['Medical ethics', 'Declaration of Helsinki', "Physician's standard of care"], ['a hospital', 'the Hippocratic Oath', 'a school of medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:api_check 0:00:01.350125
ERROR:root:payload: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len8
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents8
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity. Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama.", 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.", 'Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.']), ('questions', ['Who developed some of the first astronomical models?', "Who turned Socrates' writing style into written form?", 'Who is the most famous physician in antiquity?', "Who was Plato's student?", 'Who are some of the Greek mathematicians that we owe our ideas to?', 'What is the name of the medical standard for doctors?', 'What did Hippocrates establish?']), ('answers', ['Ancient Greeks', 'Plato', 'Hippocrates', 'Aristotle', 'Pythagoras, Euclid, and Archimedes', 'Hippocratic oath', 'medical school']), ('options', [['Ancient Romans', 'Anthropologists', 'Ancient Chinese'], ['Plutarch', 'Aristophanes', 'Xenophon'], ['Plato', 'Aristotle', 'Galen'], ['Plato', 'Socrates', 'Pythagoras'], ['Plato and Archimedes', 'Pythagoras and Euclid', 'Plato and Aristotle'], ['Medical ethics', 'Declaration of Helsinki', "Physician's standard of care"], ['a hospital', 'the Hippocratic Oath', 'a school of medicine']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:13.803514
ERROR:root:Request 0:00:09.487623
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.321089
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.001527
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.249144
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001411
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.', 'answer': 'Hippocratic oath', 'options': ['Medical Association of America', 'British Medical Association', 'Congress of Vienna'], 'context': 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.'}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.']), ('answers', ['Ancient Greeks', 'Hippocrates', 'Hippocratic oath']), ('options', [['Ancient Chinese', 'Ancient Romans', 'Anthropologists'], ['Aristotle', 'Galen', 'Plato'], ['Medical Association of America', 'British Medical Association', 'Congress of Vienna']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.']), ('answers', ['Ancient Greeks', 'Hippocrates', 'Hippocratic oath']), ('options', [['Ancient Chinese', 'Ancient Romans', 'Anthropologists'], ['Aristotle', 'Galen', 'Plato'], ['Medical Association of America', 'British Medical Association', 'Congress of Vienna']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.']), ('incorrect', [['We owe our basic ideas about geometry and the concept of mathematical proofs to the people who taught us about geometry," says David M. Rieckner, who directs the Center for Science in Math and the History of Mathematics at Arizona State University.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to God, who gave them the power to determine the true properties of all possible worlds.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to mathematicians, which is why we have so much to do here.']])]))])
ERROR:root:Request 0:00:07.549918
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.366878
ERROR:root:payload: 'CNN is a type of deep learning model for processing data that has a grid pattern, such as images, which is inspired by the organization of animal visual cortex [13, 14] and designed to automatically and adaptively learn spatial hierarchies of features, from low- to high-level patterns. CNN is a mathematical construct that is typically composed of three types of layers (or building blocks): convolution, pooling, and fully connected layers. The first two, convolution and pooling layers, perform feature extraction, whereas the third, a fully connected layer, maps the extracted features into final output, such as classification. A convolution layer plays a key role in CNN, which is composed of a stack of mathematical operations, such as convolution, a specialized type of linear operation. In digital images, pixel values are stored in a two-dimensional (2D) grid, i.e., an array of numbers (Fig. 2), and a small grid of parameters called kernel, an optimizable feature extractor, is applied at each image position, which makes CNNs highly efficient for image processing, since a feature may occur anywhere in the image. As one layer feeds its output into the next layer, extracted features can hierarchically and progressively become more complex. The process of optimizing parameters such as kernels is called training, which is performed so as to minimize the difference between outputs and ground truth labels through an optimization algorithm called backpropagation and gradient descent, among others.'
ERROR:root:orig input: 'CNN is a type of deep learning model for processing data that has a grid pattern, such as images, which is inspired by the organization of animal visual cortex [13, 14] and designed to automatically and adaptively learn spatial hierarchies of features, from low- to high-level patterns. CNN is a mathematical construct that is typically composed of three types of layers (or building blocks): convolution, pooling, and fully connected layers. The first two, convolution and pooling layers, perform feature extraction, whereas the third, a fully connected layer, maps the extracted features into final output, such as classification. A convolution layer plays a key role in CNN, which is composed of a stack of mathematical operations, such as convolution, a specialized type of linear operation. In digital images, pixel values are stored in a two-dimensional (2D) grid, i.e., an array of numbers (Fig. 2), and a small grid of parameters called kernel, an optimizable feature extractor, is applied at each image position, which makes CNNs highly efficient for image processing, since a feature may occur anywhere in the image. As one layer feeds its output into the next layer, extracted features can hierarchically and progressively become more complex. The process of optimizing parameters such as kernels is called training, which is performed so as to minimize the difference between outputs and ground truth labels through an optimization algorithm called backpropagation and gradient descent, among others.'
ERROR:root:orig selected_specific len[[["In digital images, pixel values are stored in a two-dimensional (2D) grid, i.e., an array of numbers (Fig. 2), and a small grid of parameters called kernel, an optimizable feature extractor, is applied at each image position, which makes CNNs highly efficient for image processing, since a feature may occur anywhere in the image.",{},5],["CNN is a type of deep learning model for processing data that has a grid pattern, such as images, which is inspired by the organization of animal visual cortex [13, 14] and designed to automatically and adaptively learn spatial hierarchies of features, from low-",{},0],["The process of optimizing parameters such as kernels is called training, which is performed so as to minimize the difference between outputs and ground truth labels through an optimization algorithm called backpropagation and gradient descent, among others.",{},7],["The first two, convolution and pooling layers, perform feature extraction, whereas the third, a fully connected layer, maps the extracted features into final output, such as classification.",{},3],["CNN is a mathematical construct that is typically composed of three types of layers (or building blocks): convolution, pooling, and fully connected layers.",{},2],["A convolution layer plays a key role in CNN, which is composed of a stack of mathematical operations, such as convolution, a specialized type of linear operation.",{},4]],["CNN is a type of deep learning model for processing data that has a grid pattern, such as images, which is inspired by the organization of animal visual cortex [13, 14] and designed to automatically and adaptively learn spatial hierarchies of features, from low-","to high-level patterns.","CNN is a mathematical construct that is typically composed of three types of layers (or building blocks): convolution, pooling, and fully connected layers.","The first two, convolution and pooling layers, perform feature extraction, whereas the third, a fully connected layer, maps the extracted features into final output, such as classification.","A convolution layer plays a key role in CNN, which is composed of a stack of mathematical operations, such as convolution, a specialized type of linear operation.","In digital images, pixel values are stored in a two-dimensional (2D) grid, i.e., an array of numbers (Fig. 2), and a small grid of parameters called kernel, an optimizable feature extractor, is applied at each image position, which makes CNNs highly efficient for image processing, since a feature may occur anywhere in the image.","As one layer feeds its output into the next layer, extracted features can hierarchically and progressively become more complex.","The process of optimizing parameters such as kernels is called training, which is performed so as to minimize the difference between outputs and ground truth labels through an optimization algorithm called backpropagation and gradient descent, among others."]]
ERROR:root:orig selected_specific len6
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.001781
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:02.152868
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001404
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'CNN is a mathematical construct that is typically composed of three types of layers (or building blocks):  _________ .', 'answer': 'convolution, pooling, and fully connected layers', 'options': ['Convolution, pooling, and fully connected layers', 'Pooling, fully connected, and ReLU layers', 'Convolutional, ReLU, and fully connected layers'], 'context': 'CNN is a mathematical construct that is typically composed of three types of layers (or building blocks): convolution, pooling, and fully connected layers.'}, {'question_statement': ' _________  plays a key role in CNN, which is composed of a stack of mathematical operations, such as convolution, a specialized type of linear operation.', 'answer': 'A convolution layer', 'options': ['A set of filters', 'An output layer', 'A pool of neurons'], 'context': 'A convolution layer plays a key role in CNN, which is composed of a stack of mathematical operations, such as convolution, a specialized type of linear operation.'}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['A convolution layer plays a key role in CNN, which is composed of a stack of mathematical operations, such as convolution, a specialized type of linear operation. In digital images, pixel values are stored in a two-dimensional (2D) grid, i.e., an array of numbers (Fig. 2), and a small grid of parameters called kernel, an optimizable feature extractor, is applied at each image position, which makes CNNs highly efficient for image processing, since a feature may occur anywhere in the image.', ' CNN is a type of deep learning model for processing data that has a grid pattern, such as images, which is inspired by the organization of animal visual cortex [13, 14] and designed to automatically and adaptively learn spatial hierarchies of features, from low-', 'CNN is a mathematical construct that is typically composed of three types of layers (or building blocks): convolution, pooling, and fully connected layers.', 'A convolution layer plays a key role in CNN, which is composed of a stack of mathematical operations, such as convolution, a specialized type of linear operation.']), ('questions', ['What is the name of the small grid of parameters used by CNN?', 'What kind of pattern does CNN have?', 'CNN is a mathematical construct that is typically composed of three types of layers (or building blocks):  _________ .', ' _________  plays a key role in CNN, which is composed of a stack of mathematical operations, such as convolution, a specialized type of linear operation.']), ('answers', ['kernel', 'grid pattern', 'convolution, pooling, and fully connected layers', 'A convolution layer']), ('options', [['crop', 'feature', 'algorithm'], ['diamond pattern', 'repeat pattern', 'paisley pattern'], ['Convolution, pooling, and fully connected layers', 'Pooling, fully connected, and ReLU layers', 'Convolutional, ReLU, and fully connected layers'], ['A set of filters', 'An output layer', 'A pool of neurons']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['A convolution layer plays a key role in CNN, which is composed of a stack of mathematical operations, such as convolution, a specialized type of linear operation. In digital images, pixel values are stored in a two-dimensional (2D) grid, i.e., an array of numbers (Fig. 2), and a small grid of parameters called kernel, an optimizable feature extractor, is applied at each image position, which makes CNNs highly efficient for image processing, since a feature may occur anywhere in the image.', ' CNN is a type of deep learning model for processing data that has a grid pattern, such as images, which is inspired by the organization of animal visual cortex [13, 14] and designed to automatically and adaptively learn spatial hierarchies of features, from low-', 'CNN is a mathematical construct that is typically composed of three types of layers (or building blocks): convolution, pooling, and fully connected layers.', 'A convolution layer plays a key role in CNN, which is composed of a stack of mathematical operations, such as convolution, a specialized type of linear operation.']), ('questions', ['What is the name of the small grid of parameters used by CNN?', 'What kind of pattern does CNN have?', 'CNN is a mathematical construct that is typically composed of three types of layers (or building blocks):  _________ .', ' _________  plays a key role in CNN, which is composed of a stack of mathematical operations, such as convolution, a specialized type of linear operation.']), ('answers', ['kernel', 'grid pattern', 'convolution, pooling, and fully connected layers', 'A convolution layer']), ('options', [['crop', 'feature', 'algorithm'], ['diamond pattern', 'repeat pattern', 'paisley pattern'], ['Convolution, pooling, and fully connected layers', 'Pooling, fully connected, and ReLU layers', 'Convolutional, ReLU, and fully connected layers'], ['A set of filters', 'An output layer', 'A pool of neurons']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['The process of optimizing parameters such as kernels is called training, which is performed so as to minimize the difference between outputs and ground truth labels through an optimization algorithm called backpropagation and gradient descent, among others.', 'The first two, convolution and pooling layers, perform feature extraction, whereas the third, a fully connected layer, maps the extracted features into final output, such as classification.']), ('incorrect', [['The process of optimizing parameters such as kernels is called training, which is performed so as to minimize the difference between outputs and ground truth labels through training and validation.', 'The process of optimizing parameters such as kernels is called training, which is performed so as to minimize the difference between outputs and ground truth labels through a number of methods, including the same method as above.', 'The process of optimizing parameters such as kernels is called training, which is performed so as to minimize the difference between outputs and ground truth labels through the use of an algorithm called linear training.'], ['The first two, convolution and pooling layers, perform feature extraction, whereas the third, a fully connected layer, performs a "deep learning" step, where the data are filtered to improve the prediction of the model, thus eliminating the need for multiple layer layers.', 'The first two, convolution and pooling layers, perform feature extraction, whereas the third, a fully connected layer, performs an unsupervised model.', 'The first two, convolution and pooling layers, perform feature extraction, whereas the third, a fully connected layer, performs the same.']])]))])
ERROR:root:Request 0:00:09.301837
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 685, in fakequeryopenAI
    output = openai.Completion.create(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/completion.py", line 31, in create
    return super().create(*args, **kwargs)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 65, in create
    response, _, api_key = requestor.request(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 107, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 292, in _interpret_response
    self._interpret_response_line(
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/openai/api_requestor.py", line 318, in _interpret_response_line
    raise self.handle_error_response(
openai.error.RateLimitError: That model is still being loaded. Please try again shortly.
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.325038
ERROR:root:payload: "Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len7
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000641
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents5
ERROR:root:total before 0:00:01.906487
ERROR:root:fitb timer0:00:00.000002
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 900, in new
    mcq_output = [call.result() for call in mcq_request]
  File "/datadrive/qgv1/text_prod/app.py", line 900, in <listcomp>
    mcq_output = [call.result() for call in mcq_request]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 94, in query
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.329888
ERROR:root:payload: "Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig input: "Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.\r\nGreek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama."
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.",{},9],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["Aristotle, Plato's student, wrote about topics as varied as biology and drama.",{},10],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.","Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.","Aristotle, Plato's student, wrote about topics as varied as biology and drama."]]
ERROR:root:orig selected_specific len7
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.002476
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents5
ERROR:root:total before 0:00:01.537787
ERROR:root:fitb timer0:00:00.000003
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity. Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama.", 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.']), ('questions', ['Who developed some of the first astronomical models?', "Who turned Socrates' writing style into written form?", 'Who is the most famous physician in antiquity?', "Who was Plato's student?", 'Who are some of the Greek mathematicians that we owe our ideas to?']), ('answers', ['Ancient Greeks', 'Plato', 'Hippocrates', 'Aristotle', 'Pythagoras, Euclid, and Archimedes']), ('options', [['Anthropologists', 'Ancient Romans', 'Ancient Chinese'], ['Aristophanes', 'Xenophon', 'Plutarch'], ['Plato', 'Galen', 'Aristotle'], ['Plato', 'Socrates', 'Pythagoras'], ['Pythagoras and Euclid', 'Plato and Archimedes', 'Plato and Aristotle']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity. Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', "Greek philosophical culture is exemplified in the dialogues of Plato, who turned the questioning style of Socrates into written form. Aristotle, Plato's student, wrote about topics as varied as biology and drama.", 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.']), ('questions', ['Who developed some of the first astronomical models?', "Who turned Socrates' writing style into written form?", 'Who is the most famous physician in antiquity?', "Who was Plato's student?", 'Who are some of the Greek mathematicians that we owe our ideas to?']), ('answers', ['Ancient Greeks', 'Plato', 'Hippocrates', 'Aristotle', 'Pythagoras, Euclid, and Archimedes']), ('options', [['Anthropologists', 'Ancient Romans', 'Ancient Chinese'], ['Aristophanes', 'Xenophon', 'Plutarch'], ['Plato', 'Galen', 'Aristotle'], ['Plato', 'Socrates', 'Pythagoras'], ['Pythagoras and Euclid', 'Plato and Archimedes', 'Plato and Aristotle']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', ['The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.', "the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine."]), ('incorrect', [['The Hippocratic oath, a medical standard for doctors, is named after Plato\'s famous "phlegm of philosophy."', 'The Hippocratic oath, a medical standard for doctors, is named after Socrates, the philosopher.', 'The Hippocratic oath, a medical standard for doctors, is named after Dr. Robert H. Hippocrates, the founder of the Medical Academy.'], ['the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity— one of the oldest in Europe.', 'the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity.', 'the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity—the most celebrated in the world.']])]))])
ERROR:root:Request 0:00:08.376586
ERROR:root:api_check 0:00:00.342711
ERROR:root:payload: 'Before the arrival of European explorers and colonizers, a diversity of Native populations inhabited every region of the North American continent. Because of that diversity, there was no sense of a unified Native identity in colonial or precolonial America. Native American identity centered on the immediate social group. Social groups included clan, tribe, village, chiefdom, and confederacy. Native groups spoke diverse languages, held different religious beliefs, and practiced varied customs and traditions. Some tribes practiced agriculture, while others relied on hunting and gathering for subsistence. Conflicts between groups occurred for many reasons, including territory, hunting or agricultural practices, differing customs, and more. In the early years of European colonization, Native American societies were severely weakened by disease. With no natural immunity to European diseases, Native populations were devastated by smallpox and other diseases carried to the New World by colonizers. Some estimates place the population loss of Native American tribes at 90 percent—a catastrophic loss of human life that had long-reaching effects on Native society.'
ERROR:root:orig input: 'Before the arrival of European explorers and colonizers, a diversity of Native populations inhabited every region of the North American continent. Because of that diversity, there was no sense of a unified Native identity in colonial or precolonial America. Native American identity centered on the immediate social group. Social groups included clan, tribe, village, chiefdom, and confederacy. Native groups spoke diverse languages, held different religious beliefs, and practiced varied customs and traditions. Some tribes practiced agriculture, while others relied on hunting and gathering for subsistence. Conflicts between groups occurred for many reasons, including territory, hunting or agricultural practices, differing customs, and more. In the early years of European colonization, Native American societies were severely weakened by disease. With no natural immunity to European diseases, Native populations were devastated by smallpox and other diseases carried to the New World by colonizers. Some estimates place the population loss of Native American tribes at 90 percent—a catastrophic loss of human life that had long-reaching effects on Native society.'
ERROR:root:orig selected_specific len[[["Some estimates place the population loss of Native American tribes at 90 percent—a catastrophic loss of human life that had long-reaching effects on Native society.",{},9],["Before the arrival of European explorers and colonizers, a diversity of Native populations inhabited every region of the North American continent.",{},0],["With no natural immunity to European diseases, Native populations were devastated by smallpox and other diseases carried to the New World by colonizers.",{},8]],["Before the arrival of European explorers and colonizers, a diversity of Native populations inhabited every region of the North American continent.","Because of a diversity of Native populations, there was no sense of a unified Native identity in colonial or precolonial America.","Native American identity centered on the immediate social group.","Social groups included clan, tribe, village, chiefdom, and confederacy.","Native groups spoke diverse languages, held different religious beliefs, and practiced varied customs and traditions.","Some tribes practiced agriculture, while others relied on hunting and gathering for subsistence.","Conflicts between groups occurred for many reasons, including territory, hunting or agricultural practices, differing customs, and more.","In the early years of European colonization, Native American societies were severely weakened by disease.","With no natural immunity to European diseases, Native populations were devastated by smallpox and other diseases carried to the New World by colonizers.","Some estimates place the population loss of Native American tribes at 90 percent—a catastrophic loss of human life that had long-reaching effects on Native society."]]
ERROR:root:orig selected_specific len3
ERROR:root:offsetting TF
ERROR:root:0:00:00.000005
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents3
ERROR:root:total before 0:00:01.792869
ERROR:root:fitb timer0:00:00.000003
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['With no natural immunity to European diseases, Native populations were devastated by smallpox and other diseases carried to the New World by colonizers. Some estimates place the population loss of Native American tribes at 90 percent—a catastrophic loss of human life that had long-reaching effects on Native society.', ' Before the arrival of European explorers and colonizers, a diversity of Native populations inhabited every region of the North American continent.', 'In the early years of European colonization, Native American societies were severely weakened by disease. With no natural immunity to European diseases, Native populations were devastated by smallpox and other diseases carried to the New World by colonizers.']), ('questions', ['What is the estimate of the population loss of Native American tribes?', 'What two groups of people arrived at North America?', 'What diseases devastated Native populations?']), ('answers', ['90 percent', 'explorers and colonizers', 'smallpox and other diseases']), ('options', [['20 percent', '50 percent', '10 percent'], ['pilgrims and settlers', 'refugees and immigrants', 'invaders and settlers'], ['diabetes and other diseases', 'lung disease from smoking tobacco', 'tuberculosis and other diseases']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:09.497339
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:25.552116
ERROR:root:payload: 'science math'
ERROR:root:orig input: 'science math'
ERROR:root:orig selected_specific len[[],[]]
ERROR:root:orig selected_specific len0
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.440648
ERROR:root:api_check 0:00:00.344207
ERROR:root:payload: "Legend has it that Rome was founded in 753 B.C.E. by Romulus, its first king. In 509 B.C.E. Rome became a republic ruled by the Senate (wealthy landowners and elders) and the Roman people. During the 450 years of the Republic, Rome conquered the rest of Italy and then expanded into France, Spain, Turkey, North Africa, and Greece.\nRome became very Greek-influenced or “Hellenized,” and the city was filled with Greek architecture, literature, statues, wall-paintings, mosaics, pottery, and glass. But with Greek culture came Greek gold, and generals and senators fought over this new wealth. The Republic collapsed in civil war and the Roman empire began.\nIn 31 B.C.E. Octavian, the adopted son of Julius Caesar, defeated Cleopatra and Mark Antony at Actium. This brought the last civil war of the Republic to an end. Although it was hoped by many that the Republic could be restored, it soon became clear that a new political system was forming: the emperor became the focus of the empire and its people. Although, in theory, Augustus (as Octavian became known) was only the first citizen and ruled by consent of the Senate, he was in fact the empire's supreme authority. As emperor he could pass his powers to the heir he decreed and was a king in all but name.\nPortland Vase, c. 1–25 C.E., glass, 24 x 17 cm (© Trustees of the British Museum)\nPortland Vase, c. 1–25 C.E., glass, 24 x 17 cm (© Trustees of the British Museum)\nPortland Vase, c. 1–25 C.E., glass, 24 x 17 cm (© Trustees of the British Museum)\nThe empire, as it could now be called, enjoyed unparalleled prosperity as the network of cities boomed, and goods, people, and ideas moved freely by land and sea. Many of the masterpieces associated with Roman art, such as the mosaics and wall paintings of Pompeii, gold and silver tableware, and glass, including the Portland Vase, were created in this period. The empire ushered in an economic and social revolution that changed the face of the Roman world: service to the empire and the emperor, not just birth and social status, became the key to advancement.\nSuccessive emperors, such as Tiberius and Claudius, expanded Rome's territory. By the time of the emperor Trajan, in the late first century C.E., the Roman empire, with about fifty million inhabitants, encompassed the whole of the Mediterranean, Britain, much of northern and central Europe, and the Near East.\nSchematic map showing the territorial expansion of Rome from the Middle Republic to the death of the Emperor Trajan (map: Varana, CC BY-SA 3.0)\nSchematic map showing the territorial expansion of Rome from the Middle Republic to the death of the Emperor Trajan (map: Varana, CC BY-SA 3.0)\nSchematic map showing the territorial expansion of Rome from the Middle Republic to the death of the Emperor Trajan (map: Varana, CC BY-SA 3.0)\nA vast empire\n\nStarting with Augustus in 27 B.C.E., the emperors ruled for five hundred years. They expanded Rome’s territory and by about 200 C.E., their vast empire stretched from Syria to Spain and from Britain to Egypt. Networks of roads connected rich and vibrant cities, filled with beautiful public buildings. A shared Greco-Roman culture linked people, goods and ideas.\nThe imperial system of the Roman Empire depended heavily on the personality and standing of the emperor himself."
ERROR:root:orig input: "Legend has it that Rome was founded in 753 B.C.E. by Romulus, its first king. In 509 B.C.E. Rome became a republic ruled by the Senate (wealthy landowners and elders) and the Roman people. During the 450 years of the Republic, Rome conquered the rest of Italy and then expanded into France, Spain, Turkey, North Africa, and Greece.\r\nRome became very Greek-influenced or “Hellenized,” and the city was filled with Greek architecture, literature, statues, wall-paintings, mosaics, pottery, and glass. But with Greek culture came Greek gold, and generals and senators fought over this new wealth. The Republic collapsed in civil war and the Roman empire began.\r\nIn 31 B.C.E. Octavian, the adopted son of Julius Caesar, defeated Cleopatra and Mark Antony at Actium. This brought the last civil war of the Republic to an end. Although it was hoped by many that the Republic could be restored, it soon became clear that a new political system was forming: the emperor became the focus of the empire and its people. Although, in theory, Augustus (as Octavian became known) was only the first citizen and ruled by consent of the Senate, he was in fact the empire's supreme authority. As emperor he could pass his powers to the heir he decreed and was a king in all but name.\r\nPortland Vase, c. 1–25 C.E., glass, 24 x 17 cm (© Trustees of the British Museum)\r\nPortland Vase, c. 1–25 C.E., glass, 24 x 17 cm (© Trustees of the British Museum)\r\nPortland Vase, c. 1–25 C.E., glass, 24 x 17 cm (© Trustees of the British Museum)\r\nThe empire, as it could now be called, enjoyed unparalleled prosperity as the network of cities boomed, and goods, people, and ideas moved freely by land and sea. Many of the masterpieces associated with Roman art, such as the mosaics and wall paintings of Pompeii, gold and silver tableware, and glass, including the Portland Vase, were created in this period. The empire ushered in an economic and social revolution that changed the face of the Roman world: service to the empire and the emperor, not just birth and social status, became the key to advancement.\r\nSuccessive emperors, such as Tiberius and Claudius, expanded Rome's territory. By the time of the emperor Trajan, in the late first century C.E., the Roman empire, with about fifty million inhabitants, encompassed the whole of the Mediterranean, Britain, much of northern and central Europe, and the Near East.\r\nSchematic map showing the territorial expansion of Rome from the Middle Republic to the death of the Emperor Trajan (map: Varana, CC BY-SA 3.0)\r\nSchematic map showing the territorial expansion of Rome from the Middle Republic to the death of the Emperor Trajan (map: Varana, CC BY-SA 3.0)\r\nSchematic map showing the territorial expansion of Rome from the Middle Republic to the death of the Emperor Trajan (map: Varana, CC BY-SA 3.0)\r\nA vast empire\r\n\r\nStarting with Augustus in 27 B.C.E., the emperors ruled for five hundred years. They expanded Rome’s territory and by about 200 C.E., their vast empire stretched from Syria to Spain and from Britain to Egypt. Networks of roads connected rich and vibrant cities, filled with beautiful public buildings. A shared Greco-Roman culture linked people, goods and ideas.\r\nThe imperial system of the Roman Empire depended heavily on the personality and standing of the emperor himself. "
ERROR:root:orig selected_specific len[[["Portland Vase, c. 1–25 C.E., glass, 24 x 17 cm",{},11],["Portland Vase, c. 1–25 C.E., glass, 24 x 17 cm",{},13],["Portland Vase, c. 1–25 C.E., glass, 24 x 17 cm",{},15],["By the time of the emperor Trajan, in the late first century C.E., the Roman empire, with about fifty million inhabitants, encompassed the whole of the Mediterranean, Britain, much of northern and central Europe, and the Near East.",{},21],["In 31 B.C.E. Octavian, the adopted son of Julius Caesar, defeated Cleopatra and Mark Antony at Actium.",{},6],["They expanded Rome’s territory and by about 200 C.E., their vast empire stretched from Syria to Spain and from Britain to Egypt.",{},33],["Many of the masterpieces associated with Roman art, such as the mosaics and wall paintings of Pompeii, gold and silver tableware, and glass, including the Portland Vase, were created in this period.",{},18],["Rome became very Greek-influenced or “Hellenized,” and the city was filled with Greek architecture, literature, statues, wall-paintings, mosaics, pottery, and glass.",{},3],["Legend has it that Rome was founded in 753 B.C.E. by Romulus, its first king.",{},0],["During the 450 years of the Republic, Rome conquered the rest of Italy and then expanded into France, Spain, Turkey, North Africa, and Greece.",{},2],["Varana, CC BY-SA 3.0)",{},24],["Varana, CC BY-SA 3.0)",{},27],["Varana, CC BY-SA 3.0)",{},30],["Starting with Augustus in 27 B.C.E., the emperors ruled for five hundred years.",{},32],["In 509 B.C.E. Rome became a republic ruled by the Senate (wealthy landowners and elders) and the Roman people.",{},1],["Schematic map showing the territorial expansion of Rome from the Middle Republic to the death of the Emperor Trajan",{},22],["Schematic map showing the territorial expansion of Rome from the Middle Republic to the death of the Emperor Trajan",{},25],["Schematic map showing the territorial expansion of Rome from the Middle Republic to the death of the Emperor Trajan",{},28],["Although, in theory, Augustus (as Octavian became known) was only the first citizen and ruled by consent of the Senate, he was in fact the empire's supreme authority.",{},9]],["Legend has it that Rome was founded in 753 B.C.E. by Romulus, its first king.","In 509 B.C.E. Rome became a republic ruled by the Senate (wealthy landowners and elders) and the Roman people.","During the 450 years of the Republic, Rome conquered the rest of Italy and then expanded into France, Spain, Turkey, North Africa, and Greece.","Rome became very Greek-influenced or “Hellenized,” and the city was filled with Greek architecture, literature, statues, wall-paintings, mosaics, pottery, and glass.","But with Greek culture came Greek gold, and generals and senators fought over this new wealth.","The Republic collapsed in civil war and the Roman empire began.","In 31 B.C.E. Octavian, the adopted son of Julius Caesar, defeated Cleopatra and Mark Antony at Actium.","This brought the last civil war of the Republic to an end.","Although it was hoped by many that the Republic could be restored, it soon became clear that a new political system was forming: the emperor became the focus of the empire and its people.","Although, in theory, Augustus (as Octavian became known) was only the first citizen and ruled by consent of the Senate, he was in fact the empire's supreme authority.","As emperor Augustus (as Octavian became known) could pass Augustus (as Octavian became known)'s powers to the heir Augustus (as Octavian became known)","decreed and was a king in all but name.","Portland Vase, c. 1–25 C.E., glass, 24 x 17 cm","(© Trustees of the British Museum)","Portland Vase, c. 1–25 C.E., glass, 24 x 17 cm","(© Trustees of the British Museum)","Portland Vase, c. 1–25 C.E., glass, 24 x 17 cm","(© Trustees of the British Museum)","The empire, as (© Trustees of the British Museum) could now be called, enjoyed unparalleled prosperity as the network of cities boomed, and goods, people, and ideas moved freely by land and sea.","Many of the masterpieces associated with Roman art, such as the mosaics and wall paintings of Pompeii, gold and silver tableware, and glass, including the Portland Vase, were created in this period.","The empire ushered in an economic and social revolution that changed the face of the Roman world: service to the empire and the emperor, not just birth and social status, became the key to advancement.","Successive emperors, such as Tiberius and Claudius, expanded Rome's territory.","By the time of the emperor Trajan, in the late first century C.E., the Roman empire, with about fifty million inhabitants, encompassed the whole of the Mediterranean, Britain, much of northern and central Europe, and the Near East.","Schematic map showing the territorial expansion of Rome from the Middle Republic to the death of the Emperor Trajan","(map:","Varana, CC BY-SA 3.0)","Schematic map showing the territorial expansion of Rome from the Middle Republic to the death of the Emperor Trajan","(map:","Varana, CC BY-SA 3.0)","Schematic map showing the territorial expansion of Rome from the Middle Republic to the death of the Emperor Trajan","(map:","Varana, CC BY-SA 3.0)","A vast empire","Starting with Augustus in 27 B.C.E., the emperors ruled for five hundred years.","the emperors expanded Rome’s territory and by about 200 C.E., the emperors's vast empire stretched from Syria to Spain and from Britain to Egypt.","Networks of roads connected rich and vibrant cities, filled with beautiful public buildings.","A shared Greco-Roman culture linked people, goods and ideas.","The imperial system of the Roman Empire depended heavily on the personality and standing of the emperor himself."]]
ERROR:root:orig selected_specific len19
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents10
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ["As emperor Augustus (as Octavian became known) could pass Augustus (as Octavian became known)'s powers to the heir Augustus (as Octavian became known) Portland Vase, c. 1–25 C.E., glass, 24 x 17 cm", 'Portland Vase, c. 1–25 C.E., glass, 24 x 17 cm Portland Vase, c. 1–25 C.E., glass, 24 x 17 cm', 'Portland Vase, c. 1–25 C.E., glass, 24 x 17 cm Portland Vase, c. 1–25 C.E., glass, 24 x 17 cm', 'The empire ushered in an economic and social revolution that changed the face of the Roman world: service to the empire and the emperor, not just birth and social status, became the key to advancement. By the time of the emperor Trajan, in the late first century C.E., the Roman empire, with about fifty million inhabitants, encompassed the whole of the Mediterranean, Britain, much of northern and central Europe, and the Near East.', 'The Republic collapsed in civil war and the Roman empire began. In 31 B.C.E. Octavian, the adopted son of Julius Caesar, defeated Cleopatra and Mark Antony at Actium.', 'A vast empire They expanded Rome’s territory and by about 200 C.E., their vast empire stretched from Syria to Spain and from Britain to Egypt.', '(© Trustees of the British Museum) Many of the masterpieces associated with Roman art, such as the mosaics and wall paintings of Pompeii, gold and silver tableware, and glass, including the Portland Vase, were created in this period.', 'During the 450 years of the Republic, Rome conquered the rest of Italy and then expanded into France, Spain, Turkey, North Africa, and Greece. Rome became very Greek-influenced or “Hellenized,” and the city was filled with Greek architecture, literature, statues, wall-paintings, mosaics, pottery, and glass.', ' Legend has it that Rome was founded in 753 B.C.E. by Romulus, its first king.', 'In 509 B.C.E. Rome became a republic ruled by the Senate (wealthy landowners and elders) and the Roman people. During the 450 years of the Republic, Rome conquered the rest of Italy and then expanded into France, Spain, Turkey, North Africa, and Greece.']), ('questions', ['How large is the Portland Vase?', 'How large is the Portland Vase?', 'How large is the Portland Vase?', 'When did Trajan rule?', 'When did Julius Caesar defeat Cleopatra and Mark Antony?', 'By what year did the empire extend from Syria to Spain?', 'What Roman Vase was created during the Roman period?', 'What is another name for the Greek influence?', 'When was Rome founded?', 'How long did the Republic last?']), ('answers', ['24 x 17 cm', '24 x 17 cm', '24 x 17 cm', 'the late first century C.E.', '31 B.C.E. Octavian', '200 C.E', 'Portland Vase', 'Hellenized', '753 B.C.E.', '450 years']), ('options', [['36 x 26 cm', '30 x 20 cm', '24 x 19 cm'], ['36 x 26 cm', '30 x 20 cm', '24 x 19 cm'], ['36 x 26 cm', '30 x 20 cm', '24 x 19 cm'], ['the mid-first century C.E.', 'the early first century C.E.'], ['30 B.C.E. Octavian', '29 B.C.E. Octavian', '27 B.C.E. Octavian'], ['622 C.E', '1492 C.E', '1099 C.E'], ['Portland Roman Vase', 'London Vase', 'London Roman Vase'], ['Ptolemaic', 'Mycenaean', 'Minoan'], ['753 C.E.', '753 A.D.', '588 B.C.E.'], ['10 years', '20 years', '30 years']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:15.469080
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.365839
ERROR:root:payload: 'The Regeneron International Science and Engineering Fair (ISEF) is an annual science fair in the United States.[1] It is owned and administered by the Society for Science,[2] a 501(c)(3) non-profit organization based in Washington, D.C.[3] Each May, more than 1500 students from roughly 70 countries and territories compete in the fair for scholarships, tuition grants, internships, scientific field trips and the grand prizes, including one $75,000 and two $50,000 college scholarships. All prizes together amount to over $5,000,000.[4] Two awards ceremonies are held including: Special Awards Organization Presentation (which now includes the Government Awards Presentations) and the Grand Awards Ceremony. The International Science and Engineering Fair was founded in 1950 by Science Service (now the Society for Science) and was sponsored by the Intel Corporation from 1997 to 2019.[5][6] Since 2020, The Regeneron Pharmaceuticals is the title sponsor for ISEF,[7] but the event that year was cancelled and replaced with an online version due to the COVID-19 pandemic.'
ERROR:root:orig input: 'The Regeneron International Science and Engineering Fair (ISEF) is an annual science fair in the United States.[1] It is owned and administered by the Society for Science,[2] a 501(c)(3) non-profit organization based in Washington, D.C.[3] Each May, more than 1500 students from roughly 70 countries and territories compete in the fair for scholarships, tuition grants, internships, scientific field trips and the grand prizes, including one $75,000 and two $50,000 college scholarships. All prizes together amount to over $5,000,000.[4] Two awards ceremonies are held including: Special Awards Organization Presentation (which now includes the Government Awards Presentations) and the Grand Awards Ceremony. The International Science and Engineering Fair was founded in 1950 by Science Service (now the Society for Science) and was sponsored by the Intel Corporation from 1997 to 2019.[5][6] Since 2020, The Regeneron Pharmaceuticals is the title sponsor for ISEF,[7] but the event that year was cancelled and replaced with an online version due to the COVID-19 pandemic.'
ERROR:root:orig selected_specific len[[["Each May, more than 1500 students from roughly 70 countries and territories compete in the fair for scholarships, tuition grants, internships, scientific field trips and the grand prizes, including one $75,000 and two $50,000 college scholarships.",{},4],["The International Science and Engineering Fair was founded in 1950 by Science Service (now the Society for Science) and was sponsored by the Intel Corporation from 1997 to 2019.[5][6]",{},7],["All prizes together amount to over $5,000,000.[4]",{},5],["The Regeneron International Science and Engineering Fair (ISEF) is an annual science fair in the United States.[1]",{},0],["a 501(c)(3) non-profit organization based in Washington,",{},2],["Since 2020, The Regeneron Pharmaceuticals is the title sponsor for ISEF,[7]",{},8],["Two awards ceremonies are held including: Special Awards Organization Presentation (which now includes the Government Awards Presentations) and the Grand Awards Ceremony.",{},6],["It is owned and administered by the Society for Science,[2]",{},1]],["The Regeneron International Science and Engineering Fair (ISEF) is an annual science fair in the United States.[1]","The Regeneron International Science and Engineering Fair (ISEF) is owned and administered by the Society for Science,[2]","a 501(c)(3) non-profit organization based in Washington,","D.C.[3]","Each May, more than 1500 students from roughly 70 countries and territories compete in the fair for scholarships, tuition grants, internships, scientific field trips and the grand prizes, including one $75,000 and two $50,000 college scholarships.","All prizes together amount to over $5,000,000.[4]","Two awards ceremonies are held including: Special Awards Organization Presentation (which now includes the Government Awards Presentations) and the Grand Awards Ceremony.","The International Science and Engineering Fair was founded in 1950 by Science Service (now the Society for Science) and was sponsored by the Intel Corporation from 1997 to 2019.[5][6]","Since 2020, The Regeneron Pharmaceuticals is the title sponsor for ISEF,[7]","but the event that year was cancelled and replaced with an online version due to the COVID-19 pandemic."]]
ERROR:root:orig selected_specific len8
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000567
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.520677
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.004081
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'The  _________  (ISEF) is an annual science fair in the United States.[1]', 'answer': 'Regeneron International Science and Engineering Fair', 'options': ['Intel Science and Engineering Fair', 'Intel International Science and Engineering Fair', 'Regeneron Science and Engineering Fair'], 'context': 'The Regeneron International Science and Engineering Fair (ISEF) is an annual science fair in the United States.[1]'}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['D.C.[3] Each May, more than 1500 students from roughly 70 countries and territories compete in the fair for scholarships, tuition grants, internships, scientific field trips and the grand prizes, including one $75,000 and two $50,000 college scholarships.', 'Two awards ceremonies are held including: Special Awards Organization Presentation (which now includes the Government Awards Presentations) and the Grand Awards Ceremony. The International Science and Engineering Fair was founded in 1950 by Science Service (now the Society for Science) and was sponsored by the Intel Corporation from 1997 to 2019.[5][6]', 'The Regeneron International Science and Engineering Fair (ISEF) is an annual science fair in the United States.[1]']), ('questions', ['How many students compete in the fair each May?', 'What was the original name of the Society for Science and Engineering?', 'The  _________  (ISEF) is an annual science fair in the United States.[1]']), ('answers', ['more than 1500', 'Science Service', 'Regeneron International Science and Engineering Fair']), ('options', [['about 200', 'about 1000', 'about 500'], ['Science and Engineering Society', 'Scientific and Engineering Society', 'Sciences and Ingenies'], ['Intel Science and Engineering Fair', 'Intel International Science and Engineering Fair', 'Regeneron Science and Engineering Fair']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['D.C.[3] Each May, more than 1500 students from roughly 70 countries and territories compete in the fair for scholarships, tuition grants, internships, scientific field trips and the grand prizes, including one $75,000 and two $50,000 college scholarships.', 'Two awards ceremonies are held including: Special Awards Organization Presentation (which now includes the Government Awards Presentations) and the Grand Awards Ceremony. The International Science and Engineering Fair was founded in 1950 by Science Service (now the Society for Science) and was sponsored by the Intel Corporation from 1997 to 2019.[5][6]', 'The Regeneron International Science and Engineering Fair (ISEF) is an annual science fair in the United States.[1]']), ('questions', ['How many students compete in the fair each May?', 'What was the original name of the Society for Science and Engineering?', 'The  _________  (ISEF) is an annual science fair in the United States.[1]']), ('answers', ['more than 1500', 'Science Service', 'Regeneron International Science and Engineering Fair']), ('options', [['about 200', 'about 1000', 'about 500'], ['Science and Engineering Society', 'Scientific and Engineering Society', 'Sciences and Ingenies'], ['Intel Science and Engineering Fair', 'Intel International Science and Engineering Fair', 'Regeneron Science and Engineering Fair']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:06.136823
ERROR:root:api_check 0:00:35.170769
ERROR:root:payload: 'The Academic Decathlon (also called AcDec, AcaDeca or AcaDec) is an annual high school academic competition organized by the non-profit United States Academic Decathlon (USAD). The competition consists of seven objective multiple choice tests, two subjective performance events, and an essay. Academic Decathlon was created by Robert Peterson in 1968 for local schools in Orange County, California and was expanded nationally in 1981 by Robert Peterson, William Patton, first President of the new USAD Board; and Phillip Bardos, Chairman of the new USAD Board. That year, 17 states and the District of Columbia participated, a number that has grown to include most of the United States and some international schools.'
ERROR:root:orig input: 'The Academic Decathlon (also called AcDec, AcaDeca or AcaDec) is an annual high school academic competition organized by the non-profit United States Academic Decathlon (USAD). The competition consists of seven objective multiple choice tests, two subjective performance events, and an essay. Academic Decathlon was created by Robert Peterson in 1968 for local schools in Orange County, California and was expanded nationally in 1981 by Robert Peterson, William Patton, first President of the new USAD Board; and Phillip Bardos, Chairman of the new USAD Board. That year, 17 states and the District of Columbia participated, a number that has grown to include most of the United States and some international schools.'
ERROR:root:orig selected_specific len[[["Academic Decathlon was created by Robert Peterson in 1968 for local schools in Orange County, California and was expanded nationally in 1981 by Robert Peterson, William Patton, first President of the new USAD Board; and Phillip Bardos, Chairman of the new USAD Board.",{},2],["The Academic Decathlon (also called AcDec, AcaDeca or AcaDec) is an annual high school academic competition organized by the non-profit United States Academic Decathlon (USAD).",{},0],["That year, 17 states and the District of Columbia participated, a number that has grown to include most of the United States and some international schools.",{},3],["The competition consists of seven objective multiple choice tests, two subjective performance events, and an essay.",{},1]],["The Academic Decathlon (also called AcDec, AcaDeca or AcaDec) is an annual high school academic competition organized by the non-profit United States Academic Decathlon (USAD).","The competition consists of seven objective multiple choice tests, two subjective performance events, and an essay.","Academic Decathlon was created by Robert Peterson in 1968 for local schools in Orange County, California and was expanded nationally in 1981 by Robert Peterson, William Patton, first President of the new USAD Board; and Phillip Bardos, Chairman of the new USAD Board.","That year, 17 states and the District of Columbia participated, a number that has grown to include most of the United States and some international schools."]]
ERROR:root:orig selected_specific len4
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.000597
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.016330
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.000563
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'The competition consists of  _________  objective multiple choice tests, two subjective performance events, and an essay.', 'answer': 'seven', 'options': ['four', 'five', 'three'], 'context': 'The competition consists of seven objective multiple choice tests, two subjective performance events, and an essay.'}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['The competition consists of seven objective multiple choice tests, two subjective performance events, and an essay. Academic Decathlon was created by Robert Peterson in 1968 for local schools in Orange County, California and was expanded nationally in 1981 by Robert Peterson, William Patton, first President of the new USAD Board; and Phillip Bardos, Chairman of the new USAD Board.', ' The Academic Decathlon (also called AcDec, AcaDeca or AcaDec) is an annual high school academic competition organized by the non-profit United States Academic Decathlon (USAD).', 'The competition consists of seven objective multiple choice tests, two subjective performance events, and an essay.']), ('questions', ['Who created the Academic Decathlon?', 'What are other names for the Academic Decathlon?', 'The competition consists of  _________  objective multiple choice tests, two subjective performance events, and an essay.']), ('answers', ['Robert Peterson', 'AcDec, AcaDeca or AcaDec', 'seven']), ('options', [['Stephen Hawking', 'Bill Nye', 'Jimmy Carter'], ['Testudo', 'Gymtetest', 'Quadrants'], ['four', 'five', 'three']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The competition consists of seven objective multiple choice tests, two subjective performance events, and an essay. Academic Decathlon was created by Robert Peterson in 1968 for local schools in Orange County, California and was expanded nationally in 1981 by Robert Peterson, William Patton, first President of the new USAD Board; and Phillip Bardos, Chairman of the new USAD Board.', ' The Academic Decathlon (also called AcDec, AcaDeca or AcaDec) is an annual high school academic competition organized by the non-profit United States Academic Decathlon (USAD).', 'The competition consists of seven objective multiple choice tests, two subjective performance events, and an essay.']), ('questions', ['Who created the Academic Decathlon?', 'What are other names for the Academic Decathlon?', 'The competition consists of  _________  objective multiple choice tests, two subjective performance events, and an essay.']), ('answers', ['Robert Peterson', 'AcDec, AcaDeca or AcaDec', 'seven']), ('options', [['Stephen Hawking', 'Bill Nye', 'Jimmy Carter'], ['Testudo', 'Gymtetest', 'Quadrants'], ['four', 'five', 'three']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.757367
ERROR:root:api_check 0:00:00.316722
ERROR:root:payload: 'The Academic Decathlon (also called AcDec, AcaDeca or AcaDec) is an annual high school academic competition organized by the non-profit United States Academic Decathlon (USAD). The competition consists of seven objective multiple choice tests, two subjective performance events, and an essay. Academic Decathlon was created by Robert Peterson in 1968 for local schools in Orange County, California and was expanded nationally in 1981 by Robert Peterson, William Patton, first President of the new USAD Board; and Phillip Bardos, Chairman of the new USAD Board. That year, 17 states and the District of Columbia participated, a number that has grown to include most of the United States and some international schools.'
ERROR:root:orig input: 'The Academic Decathlon (also called AcDec, AcaDeca or AcaDec) is an annual high school academic competition organized by the non-profit United States Academic Decathlon (USAD). The competition consists of seven objective multiple choice tests, two subjective performance events, and an essay. Academic Decathlon was created by Robert Peterson in 1968 for local schools in Orange County, California and was expanded nationally in 1981 by Robert Peterson, William Patton, first President of the new USAD Board; and Phillip Bardos, Chairman of the new USAD Board. That year, 17 states and the District of Columbia participated, a number that has grown to include most of the United States and some international schools.'
ERROR:root:orig selected_specific len[[["Academic Decathlon was created by Robert Peterson in 1968 for local schools in Orange County, California and was expanded nationally in 1981 by Robert Peterson, William Patton, first President of the new USAD Board; and Phillip Bardos, Chairman of the new USAD Board.",{},2],["The Academic Decathlon (also called AcDec, AcaDeca or AcaDec) is an annual high school academic competition organized by the non-profit United States Academic Decathlon (USAD).",{},0],["That year, 17 states and the District of Columbia participated, a number that has grown to include most of the United States and some international schools.",{},3],["The competition consists of seven objective multiple choice tests, two subjective performance events, and an essay.",{},1]],["The Academic Decathlon (also called AcDec, AcaDeca or AcaDec) is an annual high school academic competition organized by the non-profit United States Academic Decathlon (USAD).","The competition consists of seven objective multiple choice tests, two subjective performance events, and an essay.","Academic Decathlon was created by Robert Peterson in 1968 for local schools in Orange County, California and was expanded nationally in 1981 by Robert Peterson, William Patton, first President of the new USAD Board; and Phillip Bardos, Chairman of the new USAD Board.","That year, 17 states and the District of Columbia participated, a number that has grown to include most of the United States and some international schools."]]
ERROR:root:orig selected_specific len4
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.002242
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:00.584223
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.002000
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'The competition consists of  _________  objective multiple choice tests, two subjective performance events, and an essay.', 'answer': 'seven', 'options': ['four', 'five', 'three'], 'context': 'The competition consists of seven objective multiple choice tests, two subjective performance events, and an essay.'}]}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['The competition consists of seven objective multiple choice tests, two subjective performance events, and an essay. Academic Decathlon was created by Robert Peterson in 1968 for local schools in Orange County, California and was expanded nationally in 1981 by Robert Peterson, William Patton, first President of the new USAD Board; and Phillip Bardos, Chairman of the new USAD Board.', ' The Academic Decathlon (also called AcDec, AcaDeca or AcaDec) is an annual high school academic competition organized by the non-profit United States Academic Decathlon (USAD).', 'The competition consists of seven objective multiple choice tests, two subjective performance events, and an essay.']), ('questions', ['Who created the Academic Decathlon?', 'What are other names for the Academic Decathlon?', 'The competition consists of  _________  objective multiple choice tests, two subjective performance events, and an essay.']), ('answers', ['Robert Peterson', 'AcDec, AcaDeca or AcaDec', 'seven']), ('options', [['Stephen Hawking', 'Bill Nye', 'Jimmy Carter'], ['Testudo', 'Gymtetest', 'Quadrants'], ['four', 'five', 'three']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The competition consists of seven objective multiple choice tests, two subjective performance events, and an essay. Academic Decathlon was created by Robert Peterson in 1968 for local schools in Orange County, California and was expanded nationally in 1981 by Robert Peterson, William Patton, first President of the new USAD Board; and Phillip Bardos, Chairman of the new USAD Board.', ' The Academic Decathlon (also called AcDec, AcaDeca or AcaDec) is an annual high school academic competition organized by the non-profit United States Academic Decathlon (USAD).', 'The competition consists of seven objective multiple choice tests, two subjective performance events, and an essay.']), ('questions', ['Who created the Academic Decathlon?', 'What are other names for the Academic Decathlon?', 'The competition consists of  _________  objective multiple choice tests, two subjective performance events, and an essay.']), ('answers', ['Robert Peterson', 'AcDec, AcaDeca or AcaDec', 'seven']), ('options', [['Stephen Hawking', 'Bill Nye', 'Jimmy Carter'], ['Testudo', 'Gymtetest', 'Quadrants'], ['four', 'five', 'three']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:08.413683
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:45.386036
ERROR:root:payload: 'Great table for small spaces. Looks way nicer than pic and is comfortable to sit in. Took about 2 hrs to put it all together by myself.'
ERROR:root:orig input: 'Great table for small spaces. Looks way nicer than pic and is comfortable to sit in. Took about 2 hrs to put it all together by myself.'
ERROR:root:orig selected_specific len[[],[]]
ERROR:root:orig selected_specific len0
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:03.610564
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.402411
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len3
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents3
ERROR:root:total before 0:00:00.944724
ERROR:root:fitb timer0:00:00.000002
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.']), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'Who are some of the Greek mathematicians that we owe our ideas to?']), ('answers', ['Ancient Greeks', 'Hippocrates', 'Pythagoras, Euclid, and Archimedes']), ('options', [['Anthropologists', 'Ancient Chinese', 'Ancient Romans'], ['Plato', 'Aristotle', 'Galen'], ['Pythagoras and Euclid', 'Plato and Archimedes', 'Plato and Aristotle']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:10.000356
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.347178
ERROR:root:payload: '1821- Stephen F. Austin brought American immigrants to Mexican Texas, with the explicit approval and support of the Mexican government. The government, in order to populate the thinly settled province and build a bulwark against Indian attacks, promised the immigrants land—far more land than most of them would ever have acquired in the United States. (Smithsonian)'
ERROR:root:orig input: '1821- Stephen F. Austin brought American immigrants to Mexican Texas, with the explicit approval and support of the Mexican government. The government, in order to populate the thinly settled province and build a bulwark against Indian attacks, promised the immigrants land—far more land than most of them would ever have acquired in the United States. (Smithsonian)'
ERROR:root:orig selected_specific len[[["The government, in order to populate the thinly settled province and build a bulwark against Indian attacks, promised the immigrants land—far more land than most of them would ever have acquired in the United States.",{},1],["1821- Stephen F. Austin brought American immigrants to Mexican Texas, with the explicit approval and support of the Mexican government.",{},0]],["1821- Stephen F. Austin brought American immigrants to Mexican Texas, with the explicit approval and support of the Mexican government.","The government, in order to populate the thinly settled province and build a bulwark against Indian attacks, promised the immigrants land—far more land than most of them would ever have acquired in the United States.","(Smithsonian)"]]
ERROR:root:orig selected_specific len2
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['1821- Stephen F. Austin brought American immigrants to Mexican Texas, with the explicit approval and support of the Mexican government. The government, in order to populate the thinly settled province and build a bulwark against Indian attacks, promised the immigrants land—far more land than most of them would ever have acquired in the United States.', ' 1821- Stephen F. Austin brought American immigrants to Mexican Texas, with the explicit approval and support of the Mexican government.']), ('questions', ['Why did the Mexican government give the immigrants land?', 'Who brought American immigrants to Mexico?']), ('answers', ['to populate the thinly settled province and build a bulwark against Indian attacks', 'Stephen F. Austin']), ('options', [['to settle abandoned military posts', 'to establish large-scale agricultural operations and to build a bulwark against Indian attacks', 'to establish large-scale agricultural operations'], ['Pancho Villa', 'The Mexican Revolution', 'Benito Juarez']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:07.268636
ERROR:root:api_check 0:00:00.333494
ERROR:root:payload: 'https://natlangai.com/query/new'
ERROR:root:orig input: 'https://natlangai.com/query/new'
ERROR:root:orig selected_specific len[[["https://natlangai.com/query/new",{},0]],["https://natlangai.com/query/new"]]
ERROR:root:orig selected_specific len1
ERROR:root:offsetting TF
ERROR:root:0:00:00.000005
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:total before 0:00:00.203685
ERROR:root:fitb timer0:00:00.000002
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', [' https://natlangai.com/query/new']), ('questions', ['Where can you find the URL for the new website?']), ('answers', ['https://natlangai.com/query/new']), ('options', [['https://natlangai.com/', 'https://www.google.com/', 'https://www.natlangai.com/']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.816071
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:26.096022
ERROR:root:payload: 'This week, my experience at the Model UN ‘Crisis’ competition challenged my ability to adapt. As the Texas Director of Conference, I assumed the responsibility of managing the logistics for the event, ranging from name-card distribution to chairing the SPECPOL committee.'
ERROR:root:orig input: 'This week, my experience at the Model UN ‘Crisis’ competition challenged my ability to adapt. As the Texas Director of Conference, I assumed the responsibility of managing the logistics for the event, ranging from name-card distribution to chairing the SPECPOL committee.'
ERROR:root:orig selected_specific len[[["As the Texas Director of Conference, I assumed the responsibility of managing the logistics for the event, ranging from name-card distribution to chairing the SPECPOL committee.",{},1]],["This week, my experience at the Model UN ‘Crisis’ competition challenged my ability to adapt.","As the Texas Director of Conference, I assumed the responsibility of managing the logistics for the event, ranging from name-card distribution to chairing the SPECPOL committee."]]
ERROR:root:orig selected_specific len1
ERROR:root:total before 0:00:00.665757
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.000576
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'As the  _________ , I assumed the responsibility of managing the logistics for the event, ranging from name-card distribution to chairing the SPECPOL committee.', 'answer': 'Texas Director of Conference', 'options': ['Camp Director', 'Assistant to the Regional Director', 'Assistant to the National Director'], 'context': 'As the Texas Director of Conference, I assumed the responsibility of managing the logistics for the event, ranging from name-card distribution to chairing the SPECPOL committee.'}]}}]
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['As the Texas Director of Conference, I assumed the responsibility of managing the logistics for the event, ranging from name-card distribution to chairing the SPECPOL committee.']), ('questions', ['As the  _________ , I assumed the responsibility of managing the logistics for the event, ranging from name-card distribution to chairing the SPECPOL committee.']), ('answers', ['Texas Director of Conference']), ('options', [['Camp Director', 'Assistant to the Regional Director', 'Assistant to the National Director']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.979391
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:25.400669
ERROR:root:payload: 'Showing results for liu EWGF LAWN\nSearch instead for liuEWGFLQWN\n\nResults for "liu EWGF LAWN" are hidden by SafeSearch.\nSafeSearch is locked on\nTo see results, try a different search\nLearn more about locked SafeSearch'
ERROR:root:orig input: '\r\nShowing results for liu EWGF LAWN\r\nSearch instead for liuEWGFLQWN\r\n\r\nResults for "liu EWGF LAWN" are hidden by SafeSearch.\r\nSafeSearch is locked on\r\nTo see results, try a different search\r\nLearn more about locked SafeSearch'
ERROR:root:orig selected_specific len[[["Showing results for liu EWGF LAWN Search instead for liuEWGFLQWN  Results for \"liu EWGF LAWN\" are hidden by SafeSearch.",{},0],["SafeSearch is locked on To see results, try a different search Learn more about locked SafeSearch",{},1]],["Showing results for liu EWGF LAWN Search instead for liuEWGFLQWN  Results for \"liu EWGF LAWN\" are hidden by SafeSearch.","SafeSearch is locked on To see results, try a different search Learn more about locked SafeSearch"]]
ERROR:root:orig selected_specific len2
ERROR:root:offsetting TF
ERROR:root:0:00:00.000004
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', [' Showing results for liu EWGF LAWN Search instead for liuEWGFLQWN  Results for "liu EWGF LAWN" are hidden by SafeSearch.', 'Showing results for liu EWGF LAWN Search instead for liuEWGFLQWN  Results for "liu EWGF LAWN" are hidden by SafeSearch. SafeSearch is locked on To see results, try a different search Learn more about locked SafeSearch']), ('questions', ['What program hides results for liu EWGF LAWN?', 'What is SafeSearch locked on?']), ('answers', ['SafeSearch', 'To see results']), ('options', [['Google', 'YouTube', 'DoubleClick'], ['To touch', 'To type', 'To slide']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:06.926734
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.344143
ERROR:root:payload: 'Chemical Bonding and Intermolecular Forces\nIntroduction\nAtoms of elements cluster together in arrangements that only break apart if energy is applied. Such a "cluster" is a chemical compound, and the specific arrangement of forces between two atoms is called a chemical bond. A group of atoms held together in a constant ratio by strong covalent bonds is often called a molecule.\n  For example, carbon dioxide, with the formula CO2, is a molecule. Some strongly bonded compounds exist in the form of a network that extends over a very large number of atoms- as, for example, with silica (similar to sand), with the formula SiO2- or a very large number of ions- as in table salt, with the formula NaCl. The chemical formula for such compounds represents the ratio of atoms (or ions) that exist in the large lattice, not the total number of atoms in the lattice.\n  There are forces of attraction between most molecules and neighboring molecules. These forces are called intermolecular forces. Intermolecular forces are responsible for the physical properties of substances. For instance, strong intermolecular forces between water molecules (H2O) are the reason that water has a relatively high boiling point (100^oC) whereas relatively weak intermolecular forces between methane (CH4) molecules result in a very low boiling point for liquid methane (-162^oC).'
ERROR:root:orig input: 'Chemical Bonding and Intermolecular Forces\r\nIntroduction\r\nAtoms of elements cluster together in arrangements that only break apart if energy is applied. Such a "cluster" is a chemical compound, and the specific arrangement of forces between two atoms is called a chemical bond. A group of atoms held together in a constant ratio by strong covalent bonds is often called a molecule.\r\n  For example, carbon dioxide, with the formula CO2, is a molecule. Some strongly bonded compounds exist in the form of a network that extends over a very large number of atoms- as, for example, with silica (similar to sand), with the formula SiO2- or a very large number of ions- as in table salt, with the formula NaCl. The chemical formula for such compounds represents the ratio of atoms (or ions) that exist in the large lattice, not the total number of atoms in the lattice.\r\n  There are forces of attraction between most molecules and neighboring molecules. These forces are called intermolecular forces. Intermolecular forces are responsible for the physical properties of substances. For instance, strong intermolecular forces between water molecules (H2O) are the reason that water has a relatively high boiling point (100^oC) whereas relatively weak intermolecular forces between methane (CH4) molecules result in a very low boiling point for liquid methane (-162^oC).'
ERROR:root:orig selected_specific len[[["For instance, strong intermolecular forces between water molecules (H2O) are the reason that water has a relatively high boiling point (100^oC) whereas relatively weak intermolecular forces between methane (CH4) molecules result in a very low boiling point for liquid methane (-162^oC).",{},11],["The chemical formula for such compounds represents the ratio of atoms (or ions) that exist in the large lattice, not the total number of atoms in the lattice.",{},7],["Such a \"cluster\" is a chemical compound, and the specific arrangement of forces between two atoms is called a chemical bond.",{},1],["A group of atoms held together in a constant ratio by strong covalent bonds is often called a molecule.",{},2],["Chemical Bonding and Intermolecular Forces Introduction Atoms of elements cluster together in arrangements that only break apart if energy is applied.",{},0],["For example, carbon dioxide, with the formula CO2, is a molecule.",{},3],["as, for example, with silica (similar to sand), with the formula SiO2- or a very large number of ions-",{},5]],["Chemical Bonding and Intermolecular Forces Introduction Atoms of elements cluster together in arrangements that only break apart if energy is applied.","Such a \"cluster\" is a chemical compound, and the specific arrangement of forces between two atoms is called a chemical bond.","A group of atoms held together in a constant ratio by strong covalent bonds is often called a molecule.","For example, carbon dioxide, with the formula CO2, is a molecule.","Some strongly bonded compounds exist in the form of a network that extends over a very large number of atoms-","as, for example, with silica (similar to sand), with the formula SiO2- or a very large number of ions-","as in table salt, with the formula NaCl.","The chemical formula for such compounds represents the ratio of atoms (or ions) that exist in the large lattice, not the total number of atoms in the lattice.","There are forces of attraction between most molecules and neighboring molecules.","forces of attraction between most molecules and neighboring molecules are called intermolecular forces.","Intermolecular forces are responsible for the physical properties of substances.","For instance, strong intermolecular forces between water molecules (H2O) are the reason that water has a relatively high boiling point (100^oC) whereas relatively weak intermolecular forces between methane (CH4) molecules result in a very low boiling point for liquid methane (-162^oC)."]]
ERROR:root:orig selected_specific len7
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents7
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['as in table salt, with the formula NaCl. The chemical formula for such compounds represents the ratio of atoms (or ions) that exist in the large lattice, not the total number of atoms in the lattice.', 'Chemical Bonding and Intermolecular Forces Introduction Atoms of elements cluster together in arrangements that only break apart if energy is applied. Such a "cluster" is a chemical compound, and the specific arrangement of forces between two atoms is called a chemical bond.', 'Such a "cluster" is a chemical compound, and the specific arrangement of forces between two atoms is called a chemical bond. A group of atoms held together in a constant ratio by strong covalent bonds is often called a molecule.', ' Chemical Bonding and Intermolecular Forces Introduction Atoms of elements cluster together in arrangements that only break apart if energy is applied.', 'A group of atoms held together in a constant ratio by strong covalent bonds is often called a molecule. For example, carbon dioxide, with the formula CO2, is a molecule.', 'Some strongly bonded compounds exist in the form of a network that extends over a very large number of atoms- as, for example, with silica (similar to sand), with the formula SiO2- or a very large number of ions-']), ('questions', ['What is another term for atoms?', 'What is the specific arrangement of forces between two atoms called?', 'What is a group of atoms held together in a constant ratio by strong covalent bonds called?', 'What is the name of the process in which Atoms of elements cluster together in an arrangement that only breaks apart when energy is applied?', 'What is carbon dioxide with the formula CO2?', 'What is the formula for silica?']), ('answers', ['ions', 'chemical bond', 'molecule', 'Chemical Bonding and Intermolecular Forces', 'a molecule', 'SiO2-']), ('options', [['neutrons', 'electrons', 'proton'], ['ionic bond', 'covalent bond', 'magnetic bond'], ['ion pair', 'molecular unit', 'ion'], ['Ionic Bonding and Intermolecular Forces'], ['a color', 'a mineral', 'a gas'], ['SiO2-H2O', 'H2O+', 'H2O']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:14.948366
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.335152
ERROR:root:payload: 'In order to add interest to your presentation, you will need to provide an audiovisual aid.  It is important that this adds meaningful information to your speech.  Use bullet points rather than full text, and do not shift the focus away from the information you are presenting by using too many distracting components.  The content should be professional.  Be uniform in font styles and sizes and background selection.  Use either short phrases or complete sentences, not a combination of both.  You should NOT simply create an outline of your speech in PowerPoint or Prezi.  Use pictures and visual aids.  Think about it….do you enjoy watching a presentation that primarily includes a bunch of words projected onto a screen??'
ERROR:root:orig input: 'In order to add interest to your presentation, you will need to provide an audiovisual aid.  It is important that this adds meaningful information to your speech.  Use bullet points rather than full text, and do not shift the focus away from the information you are presenting by using too many distracting components.  The content should be professional.  Be uniform in font styles and sizes and background selection.  Use either short phrases or complete sentences, not a combination of both.  You should NOT simply create an outline of your speech in PowerPoint or Prezi.  Use pictures and visual aids.  Think about it….do you enjoy watching a presentation that primarily includes a bunch of words projected onto a screen??'
ERROR:root:orig selected_specific len[[],[]]
ERROR:root:orig selected_specific len0
ERROR:root:total before 0:00:01.367661
ERROR:root:fitb timer0:00:00.000001
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:06.101175
ERROR:root:api_check 0:00:00.361414
ERROR:root:payload: 'Despite these cultural commonalities, affiliations between city-states were loose and short-lived. The Delian and Peloponnesian Leagues, for example, were dominated by one strong city-state. Another good example is how conflict with Persia prompted several city-states to unify against a common enemy, but not all Greek city-states were involved; further, once the external threat was diminished, conflict between the city-states resumed.\nEven as Greeks colonized the Mediterranean and Black seas, new colonies, while recognizing a “mother” city-state, were largely independent. Even after Philip II of Macedon brought mainland Greece under his League of Corinth, the individual city-states still retained much of their essential independence.'
ERROR:root:orig input: 'Despite these cultural commonalities, affiliations between city-states were loose and short-lived. The Delian and Peloponnesian Leagues, for example, were dominated by one strong city-state. Another good example is how conflict with Persia prompted several city-states to unify against a common enemy, but not all Greek city-states were involved; further, once the external threat was diminished, conflict between the city-states resumed.\r\nEven as Greeks colonized the Mediterranean and Black seas, new colonies, while recognizing a “mother” city-state, were largely independent. Even after Philip II of Macedon brought mainland Greece under his League of Corinth, the individual city-states still retained much of their essential independence.'
ERROR:root:orig selected_specific len[[],[]]
ERROR:root:orig selected_specific len0
ERROR:root:total before 0:00:00.616455
ERROR:root:fitb timer0:00:00.000002
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.077456
ERROR:root:api_check 0:00:00.337413
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len6
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.273719
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001168
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 900, in new
    mcq_output = [call.result() for call in mcq_request]
  File "/datadrive/qgv1/text_prod/app.py", line 900, in <listcomp>
    mcq_output = [call.result() for call in mcq_request]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 94, in query
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:01:03.589689
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len6
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.551645
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001577
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as  _________ .', 'answer': 'Pythagoras, Euclid, and Archimedes', 'options': ['Plato, Euclid, and Archimedes', 'Pythagoras, Zeno, and Euclid', 'Plato, Zeno, and Euclid'], 'context': 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.'}, {'question_statement': 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.', 'answer': 'Hippocratic oath', 'options': ['Medical Association of America', 'Congress of Vienna', 'British Medical Association'], 'context': 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.'}]}}]
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as  _________ .', 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.']), ('answers', ['Ancient Greeks', 'Hippocrates', 'Pythagoras, Euclid, and Archimedes', 'Hippocratic oath']), ('options', [['Anthropologists', 'Ancient Chinese', 'Ancient Romans'], ['Plato', 'Galen', 'Aristotle'], ['Plato, Euclid, and Archimedes', 'Pythagoras, Zeno, and Euclid', 'Plato, Zeno, and Euclid'], ['Medical Association of America', 'Congress of Vienna', 'British Medical Association']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:06.741634
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.350058
ERROR:root:payload: 'SECTION III INTRODUCTION\nChemistry is all about reactions. Reactions occur when\natoms in chemical substances rearrange under certain\nconditions to form new substances that have different\nphysical and chemical properties. In this section of the\nresource guide, you will learn how chemists classify\ndifferent reaction types and how they keep track of the\natoms involved in the changes. You will also learn about\nthe conditions that determine whether reactions allow\nfor the complete reorganization of atoms, or only partly\nso. In addition, you will learn how certain conditions\ndetermine how fast reactions will take place and how\nchemists track energy changes. Lastly, you will learn\nabout energy changes since they enable chemists to\npredict which reactions will occur and which will not.\nTYPES OF REACTIONS\nThere are five basic types of reactions that we will\nstudy here:\n1. Synthesis\n2. Decomposition\n3. Double replacement\n4. Single replacement\n5. Combustion\nThese different types of reactions are distinguished\nby the pattern of atom rearrangement that takes place.\nLearning about these patterns will be helpful when you\nneed to predict the products in a reaction. Within these\npatterns, reactions may be further classified according\nto the properties of the substances that are reacting or\nthe products that are formed.\nBefore we look at the patterns of atom rearrangement\nthat can occur in reactions, we need to understand\nchemical equations. Chemical equations track the\natoms in chemicals and the manner in which they are\nrearranged during a reaction. In chemical equations,\nreacting substances are indicated on the left-hand side\nof an arrow. The arrow means “yields” or “to make.”\nThe products of the reaction are found on the righthand side of the arrow.\nYou might expect an equation to have an equal sign,\nand in fact, reaction equations used to have equal\nsigns, but chemists decided that it was better to use\nan arrow to indicate the direction of the reaction.\nHowever, these reactions are still referred to as\nequations because the number and type of atoms on\nthe left side must equal the number and type of atoms\non the right side. For example, the equation A + B → C\n+ D indicates that A and B are reactants and C and D\nare products, or what is made in the reaction.\nSynthesis, or combination reactions, involve combining\ntwo or more reactants and making one product. The\nequation for a synthesis reaction will have the form A +\nB → C. An example of this type of reaction is 2Na + Cl2\n→ 2NaCl. A different example is shown in Figure 58,\nwhich depicts the reaction of potassium with chlorine.'
ERROR:root:orig input: 'SECTION III INTRODUCTION\r\nChemistry is all about reactions. Reactions occur when\r\natoms in chemical substances rearrange under certain\r\nconditions to form new substances that have different\r\nphysical and chemical properties. In this section of the\r\nresource guide, you will learn how chemists classify\r\ndifferent reaction types and how they keep track of the\r\natoms involved in the changes. You will also learn about\r\nthe conditions that determine whether reactions allow\r\nfor the complete reorganization of atoms, or only partly\r\nso. In addition, you will learn how certain conditions\r\ndetermine how fast reactions will take place and how\r\nchemists track energy changes. Lastly, you will learn\r\nabout energy changes since they enable chemists to\r\npredict which reactions will occur and which will not.\r\nTYPES OF REACTIONS\r\nThere are five basic types of reactions that we will\r\nstudy here:\r\n1. Synthesis\r\n2. Decomposition\r\n3. Double replacement\r\n4. Single replacement\r\n5. Combustion\r\nThese different types of reactions are distinguished\r\nby the pattern of atom rearrangement that takes place.\r\nLearning about these patterns will be helpful when you\r\nneed to predict the products in a reaction. Within these\r\npatterns, reactions may be further classified according\r\nto the properties of the substances that are reacting or\r\nthe products that are formed.\r\nBefore we look at the patterns of atom rearrangement\r\nthat can occur in reactions, we need to understand\r\nchemical equations. Chemical equations track the\r\natoms in chemicals and the manner in which they are\r\nrearranged during a reaction. In chemical equations,\r\nreacting substances are indicated on the left-hand side\r\nof an arrow. The arrow means “yields” or “to make.”\r\nThe products of the reaction are found on the righthand side of the arrow.\r\nYou might expect an equation to have an equal sign,\r\nand in fact, reaction equations used to have equal\r\nsigns, but chemists decided that it was better to use\r\nan arrow to indicate the direction of the reaction.\r\nHowever, these reactions are still referred to as\r\nequations because the number and type of atoms on\r\nthe left side must equal the number and type of atoms\r\non the right side. For example, the equation A + B → C\r\n+ D indicates that A and B are reactants and C and D\r\nare products, or what is made in the reaction.\r\nSynthesis, or combination reactions, involve combining\r\ntwo or more reactants and making one product. The\r\nequation for a synthesis reaction will have the form A +\r\nB → C. An example of this type of reaction is 2Na + Cl2\r\n→ 2NaCl. A different example is shown in Figure 58,\r\nwhich depicts the reaction of potassium with chlorine. \r\n'
ERROR:root:orig selected_specific len[[["You might expect an equation to have an equal sign, and in fact, reaction equations used to have equal signs, but chemists decided that it was better to use an arrow to indicate the direction of the reaction.",{},22],["A different example is shown in Figure 58, which depicts the reaction of potassium with chlorine.",{},31],["Reactions occur when atoms in chemical substances rearrange under certain conditions to form new substances that have different physical and chemical properties.",{},1],["For example, the equation A + B → C + D indicates that A and B are reactants and C and D are products, or what is made in the reaction.",{},24],["Cl2 → 2NaCl.",{},30],["B → C. An example of this type of reaction is 2Na",{},28],["Before we look at the patterns of atom rearrangement that can occur in reactions, we need to understand chemical equations.",{},17],["In this section of the resource guide, you will learn how chemists classify different reaction types and how they keep track of the atoms involved in the changes.",{},2],["Synthesis, or combination reactions, involve combining two or more reactants and making one product.",{},25],["Chemical equations track the atoms in chemicals and the manner in which they are rearranged during a reaction.",{},18]],["SECTION III INTRODUCTION Chemistry is all about reactions.","Reactions occur when atoms in chemical substances rearrange under certain conditions to form new substances that have different physical and chemical properties.","In this section of the resource guide, you will learn how chemists classify different reaction types and how they keep track of the atoms involved in the changes.","You will also learn about the conditions that determine whether reactions allow for the complete reorganization of atoms, or only partly so.","In addition, you will learn how certain conditions determine how fast reactions will take place and how chemists track energy changes.","Lastly, you will learn about energy changes since they enable chemists to predict which reactions will occur and which will not.","TYPES OF REACTIONS","There are five basic types of reactions that we will study here:","1.","Synthesis 2.","Decomposition 3.","Double replacement 4.","Single replacement 5.","Combustion","These different types of reactions are distinguished by the pattern of atom rearrangement that takes place.","Learning about these patterns will be helpful when you need to predict the products in a reaction.","Within these patterns, reactions may be further classified according to the properties of the substances that are reacting or the products that are formed.","Before we look at the patterns of atom rearrangement that can occur in reactions, we need to understand chemical equations.","Chemical equations track the atoms in chemicals and the manner in which they are rearranged during a reaction.","In chemical equations, reacting substances are indicated on the left-hand side of an arrow.","The arrow means “yields” or “to make.”","The products of the reaction are found on the righthand side of the arrow.","You might expect an equation to have an equal sign, and in fact, reaction equations used to have equal signs, but chemists decided that it was better to use an arrow to indicate the direction of the reaction.","However, these reactions are still referred to as equations because the number and type of atoms on the left side must equal the number and type of atoms on the right side.","For example, the equation A + B → C + D indicates that A and B are reactants and C and D are products, or what is made in the reaction.","Synthesis, or combination reactions, involve combining two or more reactants and making one product.","The equation for a synthesis reaction will have the form","A +","B → C. An example of this type of reaction is 2Na","+","Cl2 → 2NaCl.","A different example is shown in Figure 58, which depicts the reaction of potassium with chlorine."]]
ERROR:root:orig selected_specific len10
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.084721
ERROR:root:api_check 0:00:00.340323
ERROR:root:payload: 'SECTION III INTRODUCTION\nChemistry is all about reactions. Reactions occur when\natoms in chemical substances rearrange under certain\nconditions to form new substances that have different\nphysical and chemical properties. In this section of the\nresource guide, you will learn how chemists classify\ndifferent reaction types and how they keep track of the\natoms involved in the changes. You will also learn about\nthe conditions that determine whether reactions allow\nfor the complete reorganization of atoms, or only partly\nso. In addition, you will learn how certain conditions\ndetermine how fast reactions will take place and how\nchemists track energy changes. Lastly, you will learn\nabout energy changes since they enable chemists to\npredict which reactions will occur and which will not.\nTYPES OF REACTIONS\nThere are five basic types of reactions that we will\nstudy here:\n1. Synthesis\n2. Decomposition\n3. Double replacement\n4. Single replacement\n5. Combustion\nThese different types of reactions are distinguished\nby the pattern of atom rearrangement that takes place.\nLearning about these patterns will be helpful when you\nneed to predict the products in a reaction. Within these\npatterns, reactions may be further classified according\nto the properties of the substances that are reacting or\nthe products that are formed.\nBefore we look at the patterns of atom rearrangement\nthat can occur in reactions, we need to understand\nchemical equations. Chemical equations track the\natoms in chemicals and the manner in which they are\nrearranged during a reaction. In chemical equations,\nreacting substances are indicated on the left-hand side\nof an arrow. The arrow means “yields” or “to make.”\nThe products of the reaction are found on the righthand side of the arrow.\nYou might expect an equation to have an equal sign,\nand in fact, reaction equations used to have equal\nsigns, but chemists decided that it was better to use\nan arrow to indicate the direction of the reaction.\nHowever, these reactions are still referred to as\nequations because the number and type of atoms on\nthe left side must equal the number and type of atoms\non the right side. For example, the equation A + B → C\n+ D indicates that A and B are reactants and C and D\nare products, or what is made in the reaction.\nSynthesis, or combination reactions, involve combining\ntwo or more reactants and making one product. The\nequation for a synthesis reaction will have the form A +\nB → C. An example of this type of reaction is 2Na + Cl2\n→ 2NaCl. A different example is shown in Figure 58,\nwhich depicts the reaction of potassium with chlorine.'
ERROR:root:orig input: 'SECTION III INTRODUCTION\r\nChemistry is all about reactions. Reactions occur when\r\natoms in chemical substances rearrange under certain\r\nconditions to form new substances that have different\r\nphysical and chemical properties. In this section of the\r\nresource guide, you will learn how chemists classify\r\ndifferent reaction types and how they keep track of the\r\natoms involved in the changes. You will also learn about\r\nthe conditions that determine whether reactions allow\r\nfor the complete reorganization of atoms, or only partly\r\nso. In addition, you will learn how certain conditions\r\ndetermine how fast reactions will take place and how\r\nchemists track energy changes. Lastly, you will learn\r\nabout energy changes since they enable chemists to\r\npredict which reactions will occur and which will not.\r\nTYPES OF REACTIONS\r\nThere are five basic types of reactions that we will\r\nstudy here:\r\n1. Synthesis\r\n2. Decomposition\r\n3. Double replacement\r\n4. Single replacement\r\n5. Combustion\r\nThese different types of reactions are distinguished\r\nby the pattern of atom rearrangement that takes place.\r\nLearning about these patterns will be helpful when you\r\nneed to predict the products in a reaction. Within these\r\npatterns, reactions may be further classified according\r\nto the properties of the substances that are reacting or\r\nthe products that are formed.\r\nBefore we look at the patterns of atom rearrangement\r\nthat can occur in reactions, we need to understand\r\nchemical equations. Chemical equations track the\r\natoms in chemicals and the manner in which they are\r\nrearranged during a reaction. In chemical equations,\r\nreacting substances are indicated on the left-hand side\r\nof an arrow. The arrow means “yields” or “to make.”\r\nThe products of the reaction are found on the righthand side of the arrow.\r\nYou might expect an equation to have an equal sign,\r\nand in fact, reaction equations used to have equal\r\nsigns, but chemists decided that it was better to use\r\nan arrow to indicate the direction of the reaction.\r\nHowever, these reactions are still referred to as\r\nequations because the number and type of atoms on\r\nthe left side must equal the number and type of atoms\r\non the right side. For example, the equation A + B → C\r\n+ D indicates that A and B are reactants and C and D\r\nare products, or what is made in the reaction.\r\nSynthesis, or combination reactions, involve combining\r\ntwo or more reactants and making one product. The\r\nequation for a synthesis reaction will have the form A +\r\nB → C. An example of this type of reaction is 2Na + Cl2\r\n→ 2NaCl. A different example is shown in Figure 58,\r\nwhich depicts the reaction of potassium with chlorine. \r\n'
ERROR:root:orig selected_specific len[[["You might expect an equation to have an equal sign, and in fact, reaction equations used to have equal signs, but chemists decided that it was better to use an arrow to indicate the direction of the reaction.",{},22],["A different example is shown in Figure 58, which depicts the reaction of potassium with chlorine.",{},31],["Reactions occur when atoms in chemical substances rearrange under certain conditions to form new substances that have different physical and chemical properties.",{},1],["For example, the equation A + B → C + D indicates that A and B are reactants and C and D are products, or what is made in the reaction.",{},24],["Cl2 → 2NaCl.",{},30],["B → C. An example of this type of reaction is 2Na",{},28],["Before we look at the patterns of atom rearrangement that can occur in reactions, we need to understand chemical equations.",{},17],["In this section of the resource guide, you will learn how chemists classify different reaction types and how they keep track of the atoms involved in the changes.",{},2],["Synthesis, or combination reactions, involve combining two or more reactants and making one product.",{},25],["Chemical equations track the atoms in chemicals and the manner in which they are rearranged during a reaction.",{},18]],["SECTION III INTRODUCTION Chemistry is all about reactions.","Reactions occur when atoms in chemical substances rearrange under certain conditions to form new substances that have different physical and chemical properties.","In this section of the resource guide, you will learn how chemists classify different reaction types and how they keep track of the atoms involved in the changes.","You will also learn about the conditions that determine whether reactions allow for the complete reorganization of atoms, or only partly so.","In addition, you will learn how certain conditions determine how fast reactions will take place and how chemists track energy changes.","Lastly, you will learn about energy changes since they enable chemists to predict which reactions will occur and which will not.","TYPES OF REACTIONS","There are five basic types of reactions that we will study here:","1.","Synthesis 2.","Decomposition 3.","Double replacement 4.","Single replacement 5.","Combustion","These different types of reactions are distinguished by the pattern of atom rearrangement that takes place.","Learning about these patterns will be helpful when you need to predict the products in a reaction.","Within these patterns, reactions may be further classified according to the properties of the substances that are reacting or the products that are formed.","Before we look at the patterns of atom rearrangement that can occur in reactions, we need to understand chemical equations.","Chemical equations track the atoms in chemicals and the manner in which they are rearranged during a reaction.","In chemical equations, reacting substances are indicated on the left-hand side of an arrow.","The arrow means “yields” or “to make.”","The products of the reaction are found on the righthand side of the arrow.","You might expect an equation to have an equal sign, and in fact, reaction equations used to have equal signs, but chemists decided that it was better to use an arrow to indicate the direction of the reaction.","However, these reactions are still referred to as equations because the number and type of atoms on the left side must equal the number and type of atoms on the right side.","For example, the equation A + B → C + D indicates that A and B are reactants and C and D are products, or what is made in the reaction.","Synthesis, or combination reactions, involve combining two or more reactants and making one product.","The equation for a synthesis reaction will have the form","A +","B → C. An example of this type of reaction is 2Na","+","Cl2 → 2NaCl.","A different example is shown in Figure 58, which depicts the reaction of potassium with chlorine."]]
ERROR:root:orig selected_specific len10
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:02.966656
ERROR:root:api_check 0:00:00.313283
ERROR:root:payload: 'SECTION III INTRODUCTION Chemistry is all about reactions. Reactions occur when atoms in chemical substances rearrange under certain conditions to form new substances that have different physical and chemical properties. In this section of the resource guide, you will learn how chemists classify different reaction types and how they keep track of the atoms involved in the changes. You will also learn about the conditions that determine whether reactions allow for the complete reorganization of atoms, or only partly so. In addition, you will learn how certain conditions determine how fast reactions will take place and how chemists track energy changes. Lastly, you will learn about energy changes since they enable chemists to predict which reactions will occur and which will not. TYPES OF REACTIONS There are five basic types of reactions that we will study here: 1. Synthesis 2. Decomposition 3. Double replacement 4. Single replacement 5. Combustion These different types of reactions are distinguished by the pattern of atom rearrangement that takes place. Learning about these patterns will be helpful when you need to predict the products in a reaction. Within these patterns, reactions may be further classified according to the properties of the substances that are reacting or the products that are formed. Before we look at the patterns of atom rearrangement that can occur in reactions, we need to understand chemical equations. Chemical equations track the atoms in chemicals and the manner in which they are rearranged during a reaction. In chemical equations, reacting substances are indicated on the left-hand side of an arrow. The arrow means “yields” or “to make.” The products of the reaction are found on the righthand side of the arrow. You might expect an equation to have an equal sign, and in fact, reaction equations used to have equal signs, but chemists decided that it was better to use an arrow to indicate the direction of the reaction. However, these reactions are still referred to as equations because the number and type of atoms on the left side must equal the number and type of atoms on the right side. For example, the equation A + B → C + D indicates that A and B are reactants and C and D are products, or what is made in the reaction. Synthesis, or combination reactions, involve combining two or more reactants and making one product. The equation for a synthesis reaction will have the form A + B → C. An example of this type of reaction is 2Na + Cl2 → 2NaCl. A different example is shown in Figure 58, which depicts the reaction of potassium with chlorine.'
ERROR:root:orig input: 'SECTION III INTRODUCTION Chemistry is all about reactions. Reactions occur when atoms in chemical substances rearrange under certain conditions to form new substances that have different physical and chemical properties. In this section of the resource guide, you will learn how chemists classify different reaction types and how they keep track of the atoms involved in the changes. You will also learn about the conditions that determine whether reactions allow for the complete reorganization of atoms, or only partly so. In addition, you will learn how certain conditions determine how fast reactions will take place and how chemists track energy changes. Lastly, you will learn about energy changes since they enable chemists to predict which reactions will occur and which will not. TYPES OF REACTIONS There are five basic types of reactions that we will study here: 1. Synthesis 2. Decomposition 3. Double replacement 4. Single replacement 5. Combustion These different types of reactions are distinguished by the pattern of atom rearrangement that takes place. Learning about these patterns will be helpful when you need to predict the products in a reaction. Within these patterns, reactions may be further classified according to the properties of the substances that are reacting or the products that are formed. Before we look at the patterns of atom rearrangement that can occur in reactions, we need to understand chemical equations. Chemical equations track the atoms in chemicals and the manner in which they are rearranged during a reaction. In chemical equations, reacting substances are indicated on the left-hand side of an arrow. The arrow means “yields” or “to make.” The products of the reaction are found on the righthand side of the arrow. You might expect an equation to have an equal sign, and in fact, reaction equations used to have equal signs, but chemists decided that it was better to use an arrow to indicate the direction of the reaction. However, these reactions are still referred to as equations because the number and type of atoms on the left side must equal the number and type of atoms on the right side. For example, the equation A + B → C + D indicates that A and B are reactants and C and D are products, or what is made in the reaction. Synthesis, or combination reactions, involve combining two or more reactants and making one product. The equation for a synthesis reaction will have the form A + B → C. An example of this type of reaction is 2Na + Cl2 → 2NaCl. A different example is shown in Figure 58, which depicts the reaction of potassium with chlorine.'
ERROR:root:orig selected_specific len[[["You might expect an equation to have an equal sign, and in fact, reaction equations used to have equal signs, but chemists decided that it was better to use an arrow to indicate the direction of the reaction.",{},22],["A different example is shown in Figure 58, which depicts the reaction of potassium with chlorine.",{},31],["Reactions occur when atoms in chemical substances rearrange under certain conditions to form new substances that have different physical and chemical properties.",{},1],["For example, the equation A + B → C + D indicates that A and B are reactants and C and D are products, or what is made in the reaction.",{},24],["Cl2 → 2NaCl.",{},30],["B → C. An example of this type of reaction is 2Na",{},28],["Before we look at the patterns of atom rearrangement that can occur in reactions, we need to understand chemical equations.",{},17],["In this section of the resource guide, you will learn how chemists classify different reaction types and how they keep track of the atoms involved in the changes.",{},2],["Synthesis, or combination reactions, involve combining two or more reactants and making one product.",{},25],["Chemical equations track the atoms in chemicals and the manner in which they are rearranged during a reaction.",{},18]],["SECTION III INTRODUCTION Chemistry is all about reactions.","Reactions occur when atoms in chemical substances rearrange under certain conditions to form new substances that have different physical and chemical properties.","In this section of the resource guide, you will learn how chemists classify different reaction types and how they keep track of the atoms involved in the changes.","You will also learn about the conditions that determine whether reactions allow for the complete reorganization of atoms, or only partly so.","In addition, you will learn how certain conditions determine how fast reactions will take place and how chemists track energy changes.","Lastly, you will learn about energy changes since they enable chemists to predict which reactions will occur and which will not.","TYPES OF REACTIONS","There are five basic types of reactions that we will study here:","1.","Synthesis 2.","Decomposition 3.","Double replacement 4.","Single replacement 5.","Combustion","These different types of reactions are distinguished by the pattern of atom rearrangement that takes place.","Learning about these patterns will be helpful when you need to predict the products in a reaction.","Within these patterns, reactions may be further classified according to the properties of the substances that are reacting or the products that are formed.","Before we look at the patterns of atom rearrangement that can occur in reactions, we need to understand chemical equations.","Chemical equations track the atoms in chemicals and the manner in which they are rearranged during a reaction.","In chemical equations, reacting substances are indicated on the left-hand side of an arrow.","The arrow means “yields” or “to make.”","The products of the reaction are found on the righthand side of the arrow.","You might expect an equation to have an equal sign, and in fact, reaction equations used to have equal signs, but chemists decided that it was better to use an arrow to indicate the direction of the reaction.","However, these reactions are still referred to as equations because the number and type of atoms on the left side must equal the number and type of atoms on the right side.","For example, the equation A + B → C + D indicates that A and B are reactants and C and D are products, or what is made in the reaction.","Synthesis, or combination reactions, involve combining two or more reactants and making one product.","The equation for a synthesis reaction will have the form","A +","B → C. An example of this type of reaction is 2Na","+","Cl2 → 2NaCl.","A different example is shown in Figure 58, which depicts the reaction of potassium with chlorine."]]
ERROR:root:orig selected_specific len10
ERROR:root:offsetting TF
ERROR:root:0:00:00.000005
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents10
ERROR:root:total before 0:00:03.122956
ERROR:root:fitb timer0:00:00.000002
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The products of the reaction are found on the righthand side of the arrow. You might expect an equation to have an equal sign, and in fact, reaction equations used to have equal signs, but chemists decided that it was better to use an arrow to indicate the direction of the reaction.', 'Cl2 → 2NaCl. A different example is shown in Figure 58, which depicts the reaction of potassium with chlorine.', 'SECTION III INTRODUCTION Chemistry is all about reactions. Reactions occur when atoms in chemical substances rearrange under certain conditions to form new substances that have different physical and chemical properties.', 'However, these reactions are still referred to as equations because the number and type of atoms on the left side must equal the number and type of atoms on the right side. For example, the equation A + B → C + D indicates that A and B are reactants and C and D are products, or what is made in the reaction.', 'Within these patterns, reactions may be further classified according to the properties of the substances that are reacting or the products that are formed. Before we look at the patterns of atom rearrangement that can occur in reactions, we need to understand chemical equations.', 'Reactions occur when atoms in chemical substances rearrange under certain conditions to form new substances that have different physical and chemical properties. In this section of the resource guide, you will learn how chemists classify different reaction types and how they keep track of the atoms involved in the changes.', 'For example, the equation A + B → C + D indicates that A and B are reactants and C and D are products, or what is made in the reaction. Synthesis, or combination reactions, involve combining two or more reactants and making one product.', 'Before we look at the patterns of atom rearrangement that can occur in reactions, we need to understand chemical equations. Chemical equations track the atoms in chemicals and the manner in which they are rearranged during a reaction.']), ('questions', ['Who decided it was better to use an arrow to indicate the direction of the reaction?', 'In which figure is the reaction of potassium with chlorine shown?', 'What occurs when atoms in chemical substances rearrange under certain conditions to form new substances?', 'What does the equation A + B - C + D indicate that A and B are?', 'What do we need to understand before we can look at the patterns of atom rearrangement?', 'Who classifies reaction types?', 'What is the term for a reaction where two or more reactants are combined to create one product?', 'What is used to track the atoms in chemicals and the manner in which they are rearranged during a reaction?']), ('answers', ['chemists', '58', 'Reactions', 'reactants', 'chemical equations', 'chemists', 'Synthesis', 'Chemical equations']), ('options', [['biologists', 'physicists', 'mathematicians'], ['59', '61', '60'], ['Competition', 'Decomposition', 'Metabolism'], ['concentrations', 'amounts', 'products'], ['the Periodic Table', 'molecular structures', 'atomic structures'], ['physicists', 'reaction kinetics', 'material scientists'], ['Enthalpy', 'Depletion', 'Isolation'], ['Nuclear magnetic resonance', 'Electron micrographs', 'Nuclear equations']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:10.591570
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.330599
ERROR:root:payload: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture. One of the key points of Ancient Greek philosophy was the role of reason and inquiry. It emphasized logic and championed the idea of impartial, rational observation of the natural world.\r\nThe Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},5],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},6],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},4],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},8],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.",{},0],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},7]],["Building on the discoveries and knowledge of civilizations in Egypt and Mesopotamia, among others, the Ancient Greeks developed a sophisticated philosophical and scientific culture.","One of the key points of Ancient Greek philosophy was the role of reason and inquiry.","It emphasized logic and championed the idea of impartial, rational observation of the natural world.","The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len6
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.001636
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents3
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.']), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'Who are some of the Greek mathematicians that we owe our ideas to?']), ('answers', ['Ancient Greeks', 'Hippocrates', 'Pythagoras, Euclid, and Archimedes']), ('options', [['Anthropologists', 'Ancient Romans', 'Ancient Chinese'], ['Plato', 'Galen', 'Aristotle'], ['Plato and Archimedes', 'Plato and Aristotle', 'Pythagoras and Euclid']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.']), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'Who are some of the Greek mathematicians that we owe our ideas to?']), ('answers', ['Ancient Greeks', 'Hippocrates', 'Pythagoras, Euclid, and Archimedes']), ('options', [['Anthropologists', 'Ancient Romans', 'Ancient Chinese'], ['Plato', 'Galen', 'Aristotle'], ['Plato and Archimedes', 'Plato and Aristotle', 'Pythagoras and Euclid']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.397964
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.645903
ERROR:root:payload: 'The broadest definition of music is “sound organized in time.” Many kinds of sounds—including noises and tones produced by any means, not only by musical instruments—can be used to create music, particularly in the modern era. All that is required is a time frame, sound waves, and a cognizant mind to perceive and interpret those sounds. Common but not required factors include a person (often called a composer) who first imagines the music, human or mechanical performers to generate the sounds, and a mechanical means of recording and reproducing them. Sometimes the composition and performance happen simultaneously (often as improvisation, but sometimes via electronic composition). Some degree of human intention and perception are necessary for music to exist, but defining this exactly continues to puzzle scientists and philosophers, who debate questions like whether birdsong can qualify as music, whether accidental sound can be music, or whether a phonograph playing in the forest is music if no one hears it.\nIt should be noted that many cultures have markedly different views of music; indeed in some cultures, music is so interconnected with ritual, language, dance, and other aspects of life that in some languages there is no separate word for “music.” At certain times in history, Western traditions have encountered and incorporated the music of non-Western cultures. The reverse process is also sometimes true. And, in recent decades, globalization has made the boundaries between Western and non-Western culture increasingly permeable.'
ERROR:root:orig input: 'The broadest definition of music is “sound organized in time.” Many kinds of sounds—including noises and tones produced by any means, not only by musical instruments—can be used to create music, particularly in the modern era. All that is required is a time frame, sound waves, and a cognizant mind to perceive and interpret those sounds. Common but not required factors include a person (often called a composer) who first imagines the music, human or mechanical performers to generate the sounds, and a mechanical means of recording and reproducing them. Sometimes the composition and performance happen simultaneously (often as improvisation, but sometimes via electronic composition). Some degree of human intention and perception are necessary for music to exist, but defining this exactly continues to puzzle scientists and philosophers, who debate questions like whether birdsong can qualify as music, whether accidental sound can be music, or whether a phonograph playing in the forest is music if no one hears it.\r\nIt should be noted that many cultures have markedly different views of music; indeed in some cultures, music is so interconnected with ritual, language, dance, and other aspects of life that in some languages there is no separate word for “music.” At certain times in history, Western traditions have encountered and incorporated the music of non-Western cultures. The reverse process is also sometimes true. And, in recent decades, globalization has made the boundaries between Western and non-Western culture increasingly permeable.'
ERROR:root:orig selected_specific len[[["Some degree of human intention and perception are necessary for music to exist, but defining this exactly continues to puzzle scientists and philosophers, who debate questions like whether birdsong can qualify as music, whether accidental sound can be music, or whether a phonograph playing in the forest is music if no one hears it.",{},5],["Common but not required factors include a person (often called a composer) who first imagines the music, human or mechanical performers to generate the sounds, and a mechanical means of recording and reproducing them.",{},3]],["The broadest definition of music is “sound organized in time.”","Many kinds of sounds—including noises and tones produced by any means, not only by musical instruments—can be used to create music, particularly in the modern era.","All that is required is a time frame, sound waves, and a cognizant mind to perceive and interpret those sounds.","Common but not required factors include a person (often called a composer) who first imagines the music, human or mechanical performers to generate the sounds, and a mechanical means of recording and reproducing them.","Sometimes the composition and performance happen simultaneously (often as improvisation, but sometimes via electronic composition).","Some degree of human intention and perception are necessary for music to exist, but defining this exactly continues to puzzle scientists and philosophers, who debate questions like whether birdsong can qualify as music, whether accidental sound can be music, or whether a phonograph playing in the forest is music if no one hears it.","It should be noted that many cultures have markedly different views of music; indeed in some cultures, music is so interconnected with ritual, language, dance, and other aspects of life that in some languages there is no separate word for “music.”","At certain times in history, Western traditions have encountered and incorporated the music of non-Western cultures.","The reverse process is also sometimes true.","And, in recent decades, globalization has made the boundaries between Western and non-Western culture increasingly permeable."]]
ERROR:root:orig selected_specific len2
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Sometimes the composition and performance happen simultaneously (often as improvisation, but sometimes via electronic composition). Some degree of human intention and perception are necessary for music to exist, but defining this exactly continues to puzzle scientists and philosophers, who debate questions like whether birdsong can qualify as music, whether accidental sound can be music, or whether a phonograph playing in the forest is music if no one hears it.', 'All that is required is a time frame, sound waves, and a cognizant mind to perceive and interpret those sounds. Common but not required factors include a person (often called a composer) who first imagines the music, human or mechanical performers to generate the sounds, and a mechanical means of recording and reproducing them.']), ('questions', ["What can be considered music if it isn't a phonograph playing in the forest?", 'What is the person who first imagines the sounds of music called?']), ('answers', ['birdsong', 'composer']), ('options', [['drums', 'guitars', 'piano'], ['pianist', 'orchestrator', 'performer']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:06.373552
ERROR:root:api_check 0:00:00.349605
ERROR:root:payload: 'There were no “Top 40” sales charts in the era of the American Revolution, so one method that historians use to measure an item’s popularity is to trace how often it was reprinted. Many of those reprintings were pirated— meaning the item was republished without permission and certainly without paying royalties to the creator. In the case of “Sherburne,” seventy-eight subsequent versions have been located between 1785 and 1810.73 Part of the problem—as Daniel Read and others were discovering—was that the 1710 English copyright law known as the Statute of Anne, giving authors exclusive rights for fourteen years, applied to British subjects. Now that the colonists had declared their independence from Britain, English laws no longer protected them. Composers began trying to take action. One of the other Yankee tunesmiths, Andrew Law, had already sent a petition for copyright protection to the Connecticut General Assembly in 1781, even before the British General Lord Cornwallis (1738–1805) had surrendered to George Washington (1732–99) at Yorktown.74 Understandably, the General Assembly had its hands full as the new nation was devising its own governance—but they hastily drafted a bill to give Andrew Law the rights he had requested.75 Nevertheless, it was not until 1790 that the first Federal Copyright Law was passed.76 In the meantime, Daniel Read told a colleague that because he was “irritated beyond measure at the unprovoked robbery committed upon the American Singing Book by the Editor of the Worcester Collection [a rival tunebook],” he had resorted to pirating several compositions from The Worcester Collection in return.77 We don’t know which pieces by Read had been pirated, but it is easy to suspect that the popular “Sherburne” was among them. A Joyful SoundPart of the appeal of “Sherburne” is its holiday subject matter. Read used poetry from a Christmas hymn by Nahum Tate (1652–1715), a notable English poet. Tate, in turn, had based his hymn text on the Bible’s nativity story, as related in the Gospel of Luke, chapter 2, verses 8−14. Nevertheless, as seen in Figure 2-2, Read wrote “Words by an unknown Author” at the top of his score.78 Apparently Read did not know Tate’s identity but did not want to take credit for poetry he had not written himself. You will also see a “C.M.” at the top of Read’s score: many hymns used the same metrical patterns found in the older rhyming psalms. Tate used “Common Meter” for “Sherburne”: the same 8.6.8.6. syllable pattern that had been employed in the Bay Psalm Book’s translation of Psalm 23 (Figure 2-1b). The birth of the baby Jesus is a central celebration in the Christian faith, and the energetic spirit of a fuging tune is very well suited to that joyful occasion. As shown in Figure 2-2, Read set the piece in the key of D major, although his placement of the key signature’s two sharps is a bit different than the practice nowadays. You also may find the clefs hard to read. The highest and third staves are using an ancestor of the treble clef, which—as you will recall from Section I—identifies the second line from the bottom as the pitch “G.” If you look closely at Read’s symbol, you will see that it consists of two letters (“g s”) written in cursive handwriting—thereby literally showing the singers that all notes on that line are to be sung as Gs. The second staff from the top uses an older version of the C-clef, while the lowest staff is a slightly distorted version of our modern F-clef, or bass clef. Following the clefs and key signature is an odd-looking metric symbol: a backward C [ C ]. For Read, the symbol had a two-fold meaning, as he explained in the “Concise Rules” that prefaced The American Singing Book: first, it was the equivalent of cut-time, or a 2 2  time signature (two beats per measure, with a half note receiving the beat), and it also indicated that the tempo should be “Allegro.”79'
ERROR:root:orig input: 'There were no “Top 40” sales charts in the era of the American Revolution, so one method that historians use to measure an item’s popularity is to trace how often it was reprinted. Many of those reprintings were pirated— meaning the item was republished without permission and certainly without paying royalties to the creator. In the case of “Sherburne,” seventy-eight subsequent versions have been located between 1785 and 1810.73 Part of the problem—as Daniel Read and others were discovering—was that the 1710 English copyright law known as the Statute of Anne, giving authors exclusive rights for fourteen years, applied to British subjects. Now that the colonists had declared their independence from Britain, English laws no longer protected them. Composers began trying to take action. One of the other Yankee tunesmiths, Andrew Law, had already sent a petition for copyright protection to the Connecticut General Assembly in 1781, even before the British General Lord Cornwallis (1738–1805) had surrendered to George Washington (1732–99) at Yorktown.74 Understandably, the General Assembly had its hands full as the new nation was devising its own governance—but they hastily drafted a bill to give Andrew Law the rights he had requested.75 Nevertheless, it was not until 1790 that the first Federal Copyright Law was passed.76 In the meantime, Daniel Read told a colleague that because he was “irritated beyond measure at the unprovoked robbery committed upon the American Singing Book by the Editor of the Worcester Collection [a rival tunebook],” he had resorted to pirating several compositions from The Worcester Collection in return.77 We don’t know which pieces by Read had been pirated, but it is easy to suspect that the popular “Sherburne” was among them. A Joyful SoundPart of the appeal of “Sherburne” is its holiday subject matter. Read used poetry from a Christmas hymn by Nahum Tate (1652–1715), a notable English poet. Tate, in turn, had based his hymn text on the Bible’s nativity story, as related in the Gospel of Luke, chapter 2, verses 8−14. Nevertheless, as seen in Figure 2-2, Read wrote “Words by an unknown Author” at the top of his score.78 Apparently Read did not know Tate’s identity but did not want to take credit for poetry he had not written himself. You will also see a “C.M.” at the top of Read’s score: many hymns used the same metrical patterns found in the older rhyming psalms. Tate used “Common Meter” for “Sherburne”: the same 8.6.8.6. syllable pattern that had been employed in the Bay Psalm Book’s translation of Psalm 23 (Figure 2-1b). The birth of the baby Jesus is a central celebration in the Christian faith, and the energetic spirit of a fuging tune is very well suited to that joyful occasion. As shown in Figure 2-2, Read set the piece in the key of D major, although his placement of the key signature’s two sharps is a bit different than the practice nowadays. You also may find the clefs hard to read. The highest and third staves are using an ancestor of the treble clef, which—as you will recall from Section I—identifies the second line from the bottom as the pitch “G.” If you look closely at Read’s symbol, you will see that it consists of two letters (“g s”) written in cursive handwriting—thereby literally showing the singers that all notes on that line are to be sung as Gs. The second staff from the top uses an older version of the C-clef, while the lowest staff is a slightly distorted version of our modern F-clef, or bass clef. Following the clefs and key signature is an odd-looking metric symbol: a backward C [ C ]. For Read, the symbol had a two-fold meaning, as he explained in the “Concise Rules” that prefaced The American Singing Book: first, it was the equivalent of cut-time, or a 2 2  time signature (two beats per measure, with a half note receiving the beat), and it also indicated that the tempo should be “Allegro.”79'
ERROR:root:orig selected_specific len[[["For Read, the symbol had a two-fold meaning, as he explained in the “Concise Rules” that prefaced The American Singing Book: first, it was the equivalent of cut-time, or a 2 2  time signature (two beats per measure, with a half note receiving the beat), and it also indicated that the tempo should be “Allegro.”79",{},28],["Tate used “Common Meter” for “Sherburne”: the same 8.6.8.6. syllable pattern that had been employed in the Bay Psalm Book’s translation of Psalm 23",{},19],["One of the other Yankee tunesmiths, Andrew Law, had already sent a petition for copyright protection to the Connecticut General Assembly in 1781, even before the British General Lord Cornwallis (1738–1805) had surrendered to George Washington (1732–99) at Yorktown.74",{},5],["Tate, in turn, had based his hymn text on the Bible’s nativity story, as related in the Gospel of Luke, chapter 2, verses 8−14.",{},12],["In the meantime, Daniel Read told a colleague that because he was “irritated beyond measure at the unprovoked robbery committed upon the American Singing Book by the Editor of the Worcester Collection [a rival tunebook],” he had resorted to pirating several compositions from The Worcester Collection in return.77",{},8],["Read used poetry from a Christmas hymn by Nahum Tate (1652–1715), a notable English poet.",{},11],["The birth of the baby Jesus is a central celebration in the Christian faith, and the energetic spirit of a fuging tune is very well suited to that joyful occasion.",{},21],["The second staff from the top uses an older version of the C-clef, while the lowest staff is a slightly distorted version of our modern F-clef, or bass clef.",{},26],["In the case of “Sherburne,” seventy-eight subsequent versions have been located between 1785 and 1810.73 Part of the problem—as Daniel Read and others were discovering—was that the 1710 English copyright law known as the Statute of Anne, giving authors exclusive rights for fourteen years, applied to British subjects.",{},2],["The highest and third staves are using an ancestor of the treble clef, which—as you will recall from Section I—identifies the second line from the bottom as the pitch “G.”",{},24],["As shown in Figure 2-2, Read set the piece in the key of D major, although his placement of the key signature’s two sharps is a bit different than the practice nowadays.",{},22],["If you look closely at Read’s symbol, you will see that it consists of two letters (“g s”) written in cursive handwriting—thereby literally showing the singers that all notes on that line are to be sung as Gs.",{},25],["Apparently Read did not know Tate’s identity but did not want to take credit for poetry",{},14],["A Joyful SoundPart of the appeal of “Sherburne” is its holiday subject matter.",{},10],["Understandably, the General Assembly had its hands full as the new nation was devising its own governance—but they hastily drafted a bill to give Andrew Law the rights he had requested.75",{},6],["We don’t know which pieces by Read had been pirated, but it is easy to suspect that the popular “Sherburne” was among them.",{},9],["Nevertheless, as seen in Figure 2-2, Read wrote “Words by an unknown Author” at the top of his score.78",{},13],["There were no “Top 40” sales charts in the era of the American Revolution, so one method that historians use to measure an item’s popularity is to trace how often it was reprinted.",{},0],["Following the clefs and key signature is an odd-looking metric symbol: a backward C [ C ].",{},27]],["There were no “Top 40” sales charts in the era of the American Revolution, so one method that historians use to measure an item’s popularity is to trace how often it was reprinted.","Many of those reprintings were pirated— meaning the item was republished without permission and certainly without paying royalties to the creator.","In the case of “Sherburne,” seventy-eight subsequent versions have been located between 1785 and 1810.73 Part of the problem—as Daniel Read and others were discovering—was that the 1710 English copyright law known as the Statute of Anne, giving authors exclusive rights for fourteen years, applied to British subjects.","Now that the colonists had declared their independence from Britain, English laws no longer protected them.","Composers began trying to take action.","One of the other Yankee tunesmiths, Andrew Law, had already sent a petition for copyright protection to the Connecticut General Assembly in 1781, even before the British General Lord Cornwallis (1738–1805) had surrendered to George Washington (1732–99) at Yorktown.74","Understandably, the General Assembly had the Connecticut General Assembly's hands full as the new nation was devising its own governance—but they hastily drafted a bill to give Andrew Law the rights he had requested.75","Nevertheless, it was not until 1790 that the first Federal Copyright Law was passed.76","In the meantime, Daniel Read told a colleague that because he was “irritated beyond measure at the unprovoked robbery committed upon the American Singing Book by the Editor of the Worcester Collection [a rival tunebook],” he had resorted to pirating several compositions from The Worcester Collection in return.77","We don’t know which pieces by Read had been pirated, but it is easy to suspect that the popular “Sherburne” was among he was “irritated beyond measure at the unprovoked robbery committed upon the American Singing Book by the Editor of the Worcester Collection [a rival tunebook],” he had resorted to pirating several compositions from The Worcester Collection in return.77.","A Joyful SoundPart of the appeal of “Sherburne” is its holiday subject matter.","Read used poetry from a Christmas hymn by Nahum Tate (1652–1715), a notable English poet.","Tate, in turn, had based Nahum Tate's hymn text on the Bible’s nativity story, as related in the Gospel of Luke, chapter 2, verses 8−14.","Nevertheless, as seen in Figure 2-2, Read wrote “Words by an unknown Author” at the top of his score.78","Apparently Read did not know Tate’s identity but did not want to take credit for poetry","Nahum Tate had not written Nahum Tate.","You will also see a “C.M.” at the top of","Read’s","score: many hymns used the same metrical patterns found in the older rhyming psalms.","Tate used “Common Meter” for “Sherburne”: the same 8.6.8.6. syllable pattern that had been employed in the Bay Psalm Book’s translation of Psalm 23","(Figure 2-1b).","The birth of the baby Jesus is a central celebration in the Christian faith, and the energetic spirit of a fuging tune is very well suited to that joyful occasion.","As shown in Figure 2-2, Read set the piece in the key of D major, although Nahum Tate's placement of the key signature’s two sharps is a bit different than the practice nowadays.","You also may find the clefs hard to read.","The highest and third staves are using an ancestor of the treble clef, which—as you will recall from Section I—identifies the second line from the bottom as the pitch “G.”","If you look closely at Read’s symbol, you will see that it consists of two letters (“g s”) written in cursive handwriting—thereby literally showing the singers that all notes on that line are to be sung as Gs.","The second staff from the top uses an older version of the C-clef, while the lowest staff is a slightly distorted version of our modern F-clef, or bass clef.","Following the clefs and key signature is an odd-looking metric symbol: a backward C [ C ].","For Read, the symbol had a two-fold meaning, as he explained in the “Concise Rules” that prefaced The American Singing Book: first, it was the equivalent of cut-time, or a 2 2  time signature (two beats per measure, with a half note receiving the beat), and it also indicated that the tempo should be “Allegro.”79"]]
ERROR:root:orig selected_specific len19
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents5
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Following the clefs and key signature is an odd-looking metric symbol: a backward C [ C ]. For Read, the symbol had a two-fold meaning, as he explained in the “Concise Rules” that prefaced The American Singing Book: first, it was the equivalent of cut-time, or a 2 2  time signature (two beats per measure, with a half note receiving the beat), and it also indicated that the tempo should be “Allegro.”79', 'score: many hymns used the same metrical patterns found in the older rhyming psalms. Tate used “Common Meter” for “Sherburne”: the same 8.6.8.6. syllable pattern that had been employed in the Bay Psalm Book’s translation of Psalm 23', 'Composers began trying to take action. One of the other Yankee tunesmiths, Andrew Law, had already sent a petition for copyright protection to the Connecticut General Assembly in 1781, even before the British General Lord Cornwallis (1738–1805) had surrendered to George Washington (1732–99) at Yorktown.74', 'Read used poetry from a Christmas hymn by Nahum Tate (1652–1715), a notable English poet. Tate, in turn, had based his hymn text on the Bible’s nativity story, as related in the Gospel of Luke, chapter 2, verses 8−14.', 'Nevertheless, it was not until 1790 that the first Federal Copyright Law was passed.76 In the meantime, Daniel Read told a colleague that because he was “irritated beyond measure at the unprovoked robbery committed upon the American Singing Book by the Editor of the Worcester Collection [a rival tunebook],” he had resorted to pirating several compositions from The Worcester Collection in return.77']), ('questions', ['What is the meaning of a 2 2 time signature?', 'What metrical pattern was used in the Bay Psalm Book translation of Psalm 23?', 'Who sent a petition for copyright protection to the Connecticut General Assembly?', 'Who based his hymn text on the nativity story?', 'Who was upset by the robbery of the American Singing Book?']), ('answers', ['two beats per measure', '8.6.8.6. syllable pattern', 'Andrew Law', 'Tate', 'Daniel Read']), ('options', [['two beats per bar', 'two different beats per bar', 'two different beats per measure'], ['7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.6.6.6.6.6.6.6.6.6.6.6.6.6.6.6.6.6.6.6.6.6.6.6.6.6.6.6.6.6.6.6.6.6.6.'], ['Ben Franklin', 'James Madison', 'Thomas Jefferson'], ['Newton', 'Walt Disney', 'Beethovan'], ['Andrew Carnegie', 'Henry Ford', 'John D. Rockefeller']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:08.316082
ERROR:root:api_check 0:00:05.340803
ERROR:root:payload: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig input: 'The Greeks made major contributions to math and science. We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity. He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine. The Hippocratic oath, a medical standard for doctors, is named after him.'
ERROR:root:orig selected_specific len[[["Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.",{},2],["Hippocrates, another ancient Greek, is the most famous physician in antiquity.",{},3],["We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.",{},1],["The Hippocratic oath, a medical standard for doctors, is named after him.",{},5],["He established a medical school, wrote many medical treatises, and is— because of his systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.",{},4]],["The Greeks made major contributions to math and science.","We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.","Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.","Hippocrates, another ancient Greek, is the most famous physician in antiquity.","the most famous physician in antiquity established a medical school, wrote many medical treatises, and is— because of the most famous physician in antiquity's systematic and empirical investigation of diseases and remedies—credited with being the founder of modern medicine.","The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity."]]
ERROR:root:orig selected_specific len5
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:total before 0:00:01.168609
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001041
ERROR:root:output sents fb [{'Multiple Choice': {'questions': [{'question_statement': 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as  _________ .', 'answer': 'Pythagoras, Euclid, and Archimedes', 'options': ['Plato, Zeno, and Euclid', 'Pythagoras, Zeno, and Euclid', 'Plato, Euclid, and Archimedes'], 'context': 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.'}, {'question_statement': 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.', 'answer': 'Hippocratic oath', 'options': ['British Medical Association', 'Congress of Vienna', 'Medical Association of America'], 'context': 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.'}]}}]
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes. Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system.', 'Some of the first astronomical models were developed by Ancient Greeks trying to describe planetary movement, the Earth’s axis, and the heliocentric system—a model that places the Sun at the center of the solar system. Hippocrates, another ancient Greek, is the most famous physician in antiquity.', 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as Pythagoras, Euclid, and Archimedes.', 'The Hippocratic oath, a medical standard for doctors, is named after the most famous physician in antiquity.']), ('questions', ['Who developed some of the first astronomical models?', 'Who is the most famous physician in antiquity?', 'We owe our basic ideas about geometry and the concept of mathematical proofs to ancient Greek mathematicians such as  _________ .', 'The  _________ , a medical standard for doctors, is named after the most famous physician in antiquity.']), ('answers', ['Ancient Greeks', 'Hippocrates', 'Pythagoras, Euclid, and Archimedes', 'Hippocratic oath']), ('options', [['Ancient Romans', 'Anthropologists', 'Ancient Chinese'], ['Galen', 'Aristotle', 'Plato'], ['Plato, Zeno, and Euclid', 'Pythagoras, Zeno, and Euclid', 'Plato, Euclid, and Archimedes'], ['British Medical Association', 'Congress of Vienna', 'Medical Association of America']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:10.448969
ERROR:root:api_check 0:00:00.346554
ERROR:root:payload: 'Cristiano Ronaldo facts.'
ERROR:root:orig input: 'Cristiano Ronaldo facts.'
ERROR:root:orig selected_specific len[[["Cristiano Ronaldo facts.",{},0]],["Cristiano Ronaldo facts."]]
ERROR:root:orig selected_specific len1
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents1
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', [' Cristiano Ronaldo facts.']), ('questions', ['What is the name of the footballer?']), ('answers', ['Cristiano Ronaldo']), ('options', [['Neymar', 'Lionel Messi', 'Kaka']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:04.139769
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.356203
ERROR:root:payload: 'Popular memory of the American founding frequently portrays the American Revolution as inevitable— the logical conclusion of European quests for social freedom, individual liberties, and economic prosperity on North America’s shores. However, historians agree the primary causes of the American Revolution can be traced to just two to three decades earlier, largely generated by the tensions created by the Seven Years’ War. Native American Society before European ColonizationBefore the arrival of European explorers and colonizers, a diversity of Native populations inhabited every region of the North American continent. Because of that diversity, there was no sense of a unified Native identity in colonial or precolonial America. Native American identity centered on the immediate social group. Social groups included clan, tribe, village, chiefdom, and confederacy. Native groups spoke diverse languages, held different religious beliefs, and practiced varied customs and traditions. Some tribes practiced agriculture, while others relied on hunting and gathering for subsistence. Conflicts between groups occurred for many reasons, including territory, hunting or agricultural practices, differing customs, and more. In the early years of European colonization, Native American societies were severely weakened by disease. With no natural immunity to European diseases, Native populations were devastated by smallpox and other diseases carried to the New World by colonizers. Some estimates place the population loss of Native American tribes at 90 percent—a catastrophic loss of human life that had long-reaching effects on Native society. While there is not space to discuss the astonishing diversity of Native life in North America, a closer look at two Native American groups provides a sense of the diversity present in pre-contact America and evidence that they played a vital role in the struggles of the Revolutionary era. The Algonquian Peoples In Jamestown, Virginia, and Plymouth, Massachusetts, the earliest British colonists encountered members of the Algonquian peoples, one of North America’s most populous and widespread Native language groups. Members of the group, who spoke the Algonquian language or a related dialect, included the Powhatan tribe near Jamestown and the Pequots and Narragansetts, who occupied the area settled by the Pilgrims. Before European arrival, Algonquian peoples living in settlements along the Atlantic Coast and into the interior, along the St. Lawrence River and Great Lakes, practiced hunting and fishing. A few\n\n\ntribes supplemented their food stores by cultivating corn, beans, and squash—these crops were known as the Three Sisters. As the first to encounter European settlers, members of the Algonquian group also experienced the earliest conflicts with the newcomers. The Powhatan organized a confederacy and fiercely resisted Virginia’s westward expansion. In New England, Wampanoags, under the leadership of Metacomet, opposed the Puritans’ encroachment into Native lands in King Phillip’s War. These efforts checked the growth of European settlement but were ultimately unsuccessful in stopping further expansion. As a result, both sides viewed the other with mistrust and fear. The Iroquois Confederacy The Iroquois Confederacy (called the Five Nations by Europeans) consisted of an alliance between five independent nations that shared a related language. Archeological evidence of related material culture shared by the five nations suggests this alliance took shape in the late fifteenth-century. The five nations that composed the alliance were the Mohawk, Oneida, Onondaga, Cayuga, and Seneca. They supported each other in conflicts with neighboring Huron and Algonquian groups. In 1722, the Iroquoian-speaking Tuscarora people joined the Confederacy. From this point forward, the alliance became known as the Six Nations.'
ERROR:root:orig input: 'Popular memory of the American founding frequently portrays the American Revolution as inevitable— the logical conclusion of European quests for social freedom, individual liberties, and economic prosperity on North America’s shores. However, historians agree the primary causes of the American Revolution can be traced to just two to three decades earlier, largely generated by the tensions created by the Seven Years’ War. Native American Society before European ColonizationBefore the arrival of European explorers and colonizers, a diversity of Native populations inhabited every region of the North American continent. Because of that diversity, there was no sense of a unified Native identity in colonial or precolonial America. Native American identity centered on the immediate social group. Social groups included clan, tribe, village, chiefdom, and confederacy. Native groups spoke diverse languages, held different religious beliefs, and practiced varied customs and traditions. Some tribes practiced agriculture, while others relied on hunting and gathering for subsistence. Conflicts between groups occurred for many reasons, including territory, hunting or agricultural practices, differing customs, and more. In the early years of European colonization, Native American societies were severely weakened by disease. With no natural immunity to European diseases, Native populations were devastated by smallpox and other diseases carried to the New World by colonizers. Some estimates place the population loss of Native American tribes at 90 percent—a catastrophic loss of human life that had long-reaching effects on Native society. While there is not space to discuss the astonishing diversity of Native life in North America, a closer look at two Native American groups provides a sense of the diversity present in pre-contact America and evidence that they played a vital role in the struggles of the Revolutionary era. The Algonquian Peoples In Jamestown, Virginia, and Plymouth, Massachusetts, the earliest British colonists encountered members of the Algonquian peoples, one of North America’s most populous and widespread Native language groups. Members of the group, who spoke the Algonquian language or a related dialect, included the Powhatan tribe near Jamestown and the Pequots and Narragansetts, who occupied the area settled by the Pilgrims. Before European arrival, Algonquian peoples living in settlements along the Atlantic Coast and into the interior, along the St. Lawrence River and Great Lakes, practiced hunting and fishing. A few\r\n\r\n\r\ntribes supplemented their food stores by cultivating corn, beans, and squash—these crops were known as the Three Sisters. As the first to encounter European settlers, members of the Algonquian group also experienced the earliest conflicts with the newcomers. The Powhatan organized a confederacy and fiercely resisted Virginia’s westward expansion. In New England, Wampanoags, under the leadership of Metacomet, opposed the Puritans’ encroachment into Native lands in King Phillip’s War. These efforts checked the growth of European settlement but were ultimately unsuccessful in stopping further expansion. As a result, both sides viewed the other with mistrust and fear. The Iroquois Confederacy The Iroquois Confederacy (called the Five Nations by Europeans) consisted of an alliance between five independent nations that shared a related language. Archeological evidence of related material culture shared by the five nations suggests this alliance took shape in the late fifteenth-century. The five nations that composed the alliance were the Mohawk, Oneida, Onondaga, Cayuga, and Seneca. They supported each other in conflicts with neighboring Huron and Algonquian groups. In 1722, the Iroquoian-speaking Tuscarora people joined the Confederacy. From this point forward, the alliance became known as the Six Nations.\r\n\r\n'
ERROR:root:orig selected_specific len[[["Some estimates place the population loss of Native American tribes at 90 percent—a catastrophic loss of human life that had long-reaching effects on Native society.",{},11],["Members of the group, who spoke the Algonquian language or a related dialect, included the Powhatan tribe near Jamestown and the Pequots and Narragansetts, who occupied the area settled by the Pilgrims.",{},14],["Native American Society before European ColonizationBefore the arrival of European explorers and colonizers, a diversity of Native populations inhabited every region of the North American continent.",{},2],["Before European arrival, Algonquian peoples living in settlements along the Atlantic Coast and into the interior, along the St. Lawrence River and Great Lakes, practiced hunting and fishing.",{},15],["The Algonquian Peoples In Jamestown, Virginia, and Plymouth, Massachusetts, the earliest British colonists encountered members of the Algonquian peoples, one of North America’s most populous and widespread Native language groups.",{},13],["A few   tribes supplemented their food stores by cultivating corn, beans, and squash—these crops were known as the Three Sisters.",{},16],["In 1722, the Iroquoian-speaking Tuscarora people joined the Confederacy.",{},27],["The Iroquois Confederacy (called the Five Nations by Europeans) consisted of an alliance between five independent nations that shared a related language.",{},23],["In New England, Wampanoags, under the leadership of Metacomet, opposed the Puritans’ encroachment into Native lands in King Phillip’s War.",{},19],["With no natural immunity to European diseases, Native populations were devastated by smallpox and other diseases carried to the New World by colonizers.",{},10],["The five nations that composed the alliance were the Mohawk, Oneida, Onondaga, Cayuga, and Seneca.",{},25],["While there is not space to discuss the astonishing diversity of Native life in North America, a closer look at two Native American groups provides a sense of the diversity present in pre-contact America and evidence that they played a vital role in the struggles of the Revolutionary era.",{},12],["The Iroquois Confederacy",{},22],["Archeological evidence of related material culture shared by the five nations suggests this alliance took shape in the late fifteenth-century.",{},24],["Popular memory of the American founding frequently portrays the American Revolution as inevitable— the logical conclusion of European quests for social freedom, individual liberties, and economic prosperity on North America’s shores.",{},0]],["Popular memory of the American founding frequently portrays the American Revolution as inevitable— the logical conclusion of European quests for social freedom, individual liberties, and economic prosperity on North America’s shores.","However, historians agree the primary causes of the American Revolution can be traced to just two to three decades earlier, largely generated by the tensions created by the Seven Years’ War.","Native American Society before European ColonizationBefore the arrival of European explorers and colonizers, a diversity of Native populations inhabited every region of the North American continent.","Because of that diversity, there was no sense of a unified Native identity in colonial or precolonial America.","Native American identity centered on the immediate social group.","Social groups included clan, tribe, village, chiefdom, and confederacy.","Native groups spoke diverse languages, held different religious beliefs, and practiced varied customs and traditions.","Some tribes practiced agriculture, while others relied on hunting and gathering for subsistence.","Conflicts between groups occurred for many reasons, including territory, hunting or agricultural practices, differing customs, and more.","In the early years of European colonization, Native American societies were severely weakened by disease.","With no natural immunity to European diseases, Native populations were devastated by smallpox and other diseases carried to the New World by colonizers.","Some estimates place the population loss of Native American tribes at 90 percent—a catastrophic loss of human life that had long-reaching effects on Native society.","While there is not space to discuss the astonishing diversity of Native life in North America, a closer look at two Native American groups provides a sense of the diversity present in pre-contact America and evidence that they played a vital role in the struggles of the Revolutionary era.","The Algonquian Peoples In Jamestown, Virginia, and Plymouth, Massachusetts, the earliest British colonists encountered members of the Algonquian peoples, one of North America’s most populous and widespread Native language groups.","Members of the group, who spoke the Algonquian language or a related dialect, included the Powhatan tribe near Jamestown and the Pequots and Narragansetts, who occupied the area settled by the Pilgrims.","Before European arrival, Algonquian peoples living in settlements along the Atlantic Coast and into the interior, along the St. Lawrence River and Great Lakes, practiced hunting and fishing.","A few   tribes supplemented their food stores by cultivating corn, beans, and squash—these crops were known as the Three Sisters.","As the first to encounter European settlers, members of the Algonquian group also experienced the earliest conflicts with the newcomers.","The Powhatan organized a confederacy and fiercely resisted Virginia’s westward expansion.","In New England, Wampanoags, under the leadership of Metacomet, opposed the Puritans’ encroachment into Native lands in King Phillip’s War.","These efforts checked the growth of European settlement but were ultimately unsuccessful in stopping further expansion.","As a result, both sides viewed the other with mistrust and fear.","The Iroquois Confederacy","The Iroquois Confederacy (called the Five Nations by Europeans) consisted of an alliance between five independent nations that shared a related language.","Archeological evidence of related material culture shared by the five nations suggests an alliance between five independent nations that shared a related language took shape in the late fifteenth-century.","The five nations that composed the alliance were the Mohawk, Oneida, Onondaga, Cayuga, and Seneca.","the Five Nations supported each other in conflicts with neighboring Huron and Algonquian groups.","In 1722, the Iroquoian-speaking Tuscarora people joined the Confederacy.","From this point forward, the alliance became known as the Six Nations."]]
ERROR:root:orig selected_specific len15
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents10
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 900, in new
    mcq_output = [call.result() for call in mcq_request]
  File "/datadrive/qgv1/text_prod/app.py", line 900, in <listcomp>
    mcq_output = [call.result() for call in mcq_request]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 94, in query
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.331439
ERROR:root:payload: 'Popular memory of the American founding frequently portrays the American Revolution as inevitable— the logical conclusion of European quests for social freedom, individual liberties, and economic prosperity on North America’s shores. However, historians agree the primary causes of the American Revolution can be traced to just two to three decades earlier, largely generated by the tensions created by the Seven Years’ War. Native American Society before European ColonizationBefore the arrival of European explorers and colonizers, a diversity of Native populations inhabited every region of the North American continent. Because of that diversity, there was no sense of a unified Native identity in colonial or precolonial America. Native American identity centered on the immediate social group. Social groups included clan, tribe, village, chiefdom, and confederacy. Native groups spoke diverse languages, held different religious beliefs, and practiced varied customs and traditions. Some tribes practiced agriculture, while others relied on hunting and gathering for subsistence. Conflicts between groups occurred for many reasons, including territory, hunting or agricultural practices, differing customs, and more. In the early years of European colonization, Native American societies were severely weakened by disease. With no natural immunity to European diseases, Native populations were devastated by smallpox and other diseases carried to the New World by colonizers. Some estimates place the population loss of Native American tribes at 90 percent—a catastrophic loss of human life that had long-reaching effects on Native society. While there is not space to discuss the astonishing diversity of Native life in North America, a closer look at two Native American groups provides a sense of the diversity present in pre-contact America and evidence that they played a vital role in the struggles of the Revolutionary era. The Algonquian Peoples In Jamestown, Virginia, and Plymouth, Massachusetts, the earliest British colonists encountered members of the Algonquian peoples, one of North America’s most populous and widespread Native language groups. Members of the group, who spoke the Algonquian language or a related dialect, included the Powhatan tribe near Jamestown and the Pequots and Narragansetts, who occupied the area settled by the Pilgrims. Before European arrival, Algonquian peoples living in settlements along the Atlantic Coast and into the interior, along the St. Lawrence River and Great Lakes, practiced hunting and fishing. A few\n\n\ntribes supplemented their food stores by cultivating corn, beans, and squash—these crops were known as the Three Sisters. As the first to encounter European settlers, members of the Algonquian group also experienced the earliest conflicts with the newcomers. The Powhatan organized a confederacy and fiercely resisted Virginia’s westward expansion. In New England, Wampanoags, under the leadership of Metacomet, opposed the Puritans’ encroachment into Native lands in King Phillip’s War. These efforts checked the growth of European settlement but were ultimately unsuccessful in stopping further expansion. As a result, both sides viewed the other with mistrust and fear. The Iroquois Confederacy The Iroquois Confederacy (called the Five Nations by Europeans) consisted of an alliance between five independent nations that shared a related language. Archeological evidence of related material culture shared by the five nations suggests this alliance took shape in the late fifteenth-century. The five nations that composed the alliance were the Mohawk, Oneida, Onondaga, Cayuga, and Seneca. They supported each other in conflicts with neighboring Huron and Algonquian groups. In 1722, the Iroquoian-speaking Tuscarora people joined the Confederacy. From this point forward, the alliance became known as the Six Nations.'
ERROR:root:orig input: 'Popular memory of the American founding frequently portrays the American Revolution as inevitable— the logical conclusion of European quests for social freedom, individual liberties, and economic prosperity on North America’s shores. However, historians agree the primary causes of the American Revolution can be traced to just two to three decades earlier, largely generated by the tensions created by the Seven Years’ War. Native American Society before European ColonizationBefore the arrival of European explorers and colonizers, a diversity of Native populations inhabited every region of the North American continent. Because of that diversity, there was no sense of a unified Native identity in colonial or precolonial America. Native American identity centered on the immediate social group. Social groups included clan, tribe, village, chiefdom, and confederacy. Native groups spoke diverse languages, held different religious beliefs, and practiced varied customs and traditions. Some tribes practiced agriculture, while others relied on hunting and gathering for subsistence. Conflicts between groups occurred for many reasons, including territory, hunting or agricultural practices, differing customs, and more. In the early years of European colonization, Native American societies were severely weakened by disease. With no natural immunity to European diseases, Native populations were devastated by smallpox and other diseases carried to the New World by colonizers. Some estimates place the population loss of Native American tribes at 90 percent—a catastrophic loss of human life that had long-reaching effects on Native society. While there is not space to discuss the astonishing diversity of Native life in North America, a closer look at two Native American groups provides a sense of the diversity present in pre-contact America and evidence that they played a vital role in the struggles of the Revolutionary era. The Algonquian Peoples In Jamestown, Virginia, and Plymouth, Massachusetts, the earliest British colonists encountered members of the Algonquian peoples, one of North America’s most populous and widespread Native language groups. Members of the group, who spoke the Algonquian language or a related dialect, included the Powhatan tribe near Jamestown and the Pequots and Narragansetts, who occupied the area settled by the Pilgrims. Before European arrival, Algonquian peoples living in settlements along the Atlantic Coast and into the interior, along the St. Lawrence River and Great Lakes, practiced hunting and fishing. A few\r\n\r\n\r\ntribes supplemented their food stores by cultivating corn, beans, and squash—these crops were known as the Three Sisters. As the first to encounter European settlers, members of the Algonquian group also experienced the earliest conflicts with the newcomers. The Powhatan organized a confederacy and fiercely resisted Virginia’s westward expansion. In New England, Wampanoags, under the leadership of Metacomet, opposed the Puritans’ encroachment into Native lands in King Phillip’s War. These efforts checked the growth of European settlement but were ultimately unsuccessful in stopping further expansion. As a result, both sides viewed the other with mistrust and fear. The Iroquois Confederacy The Iroquois Confederacy (called the Five Nations by Europeans) consisted of an alliance between five independent nations that shared a related language. Archeological evidence of related material culture shared by the five nations suggests this alliance took shape in the late fifteenth-century. The five nations that composed the alliance were the Mohawk, Oneida, Onondaga, Cayuga, and Seneca. They supported each other in conflicts with neighboring Huron and Algonquian groups. In 1722, the Iroquoian-speaking Tuscarora people joined the Confederacy. From this point forward, the alliance became known as the Six Nations.\r\n\r\n'
ERROR:root:orig selected_specific len[[["Some estimates place the population loss of Native American tribes at 90 percent—a catastrophic loss of human life that had long-reaching effects on Native society.",{},11],["Members of the group, who spoke the Algonquian language or a related dialect, included the Powhatan tribe near Jamestown and the Pequots and Narragansetts, who occupied the area settled by the Pilgrims.",{},14],["Native American Society before European ColonizationBefore the arrival of European explorers and colonizers, a diversity of Native populations inhabited every region of the North American continent.",{},2],["Before European arrival, Algonquian peoples living in settlements along the Atlantic Coast and into the interior, along the St. Lawrence River and Great Lakes, practiced hunting and fishing.",{},15],["The Algonquian Peoples In Jamestown, Virginia, and Plymouth, Massachusetts, the earliest British colonists encountered members of the Algonquian peoples, one of North America’s most populous and widespread Native language groups.",{},13],["A few   tribes supplemented their food stores by cultivating corn, beans, and squash—these crops were known as the Three Sisters.",{},16],["In 1722, the Iroquoian-speaking Tuscarora people joined the Confederacy.",{},27],["The Iroquois Confederacy (called the Five Nations by Europeans) consisted of an alliance between five independent nations that shared a related language.",{},23],["In New England, Wampanoags, under the leadership of Metacomet, opposed the Puritans’ encroachment into Native lands in King Phillip’s War.",{},19],["With no natural immunity to European diseases, Native populations were devastated by smallpox and other diseases carried to the New World by colonizers.",{},10],["The five nations that composed the alliance were the Mohawk, Oneida, Onondaga, Cayuga, and Seneca.",{},25],["While there is not space to discuss the astonishing diversity of Native life in North America, a closer look at two Native American groups provides a sense of the diversity present in pre-contact America and evidence that they played a vital role in the struggles of the Revolutionary era.",{},12],["The Iroquois Confederacy",{},22],["Archeological evidence of related material culture shared by the five nations suggests this alliance took shape in the late fifteenth-century.",{},24],["Popular memory of the American founding frequently portrays the American Revolution as inevitable— the logical conclusion of European quests for social freedom, individual liberties, and economic prosperity on North America’s shores.",{},0]],["Popular memory of the American founding frequently portrays the American Revolution as inevitable— the logical conclusion of European quests for social freedom, individual liberties, and economic prosperity on North America’s shores.","However, historians agree the primary causes of the American Revolution can be traced to just two to three decades earlier, largely generated by the tensions created by the Seven Years’ War.","Native American Society before European ColonizationBefore the arrival of European explorers and colonizers, a diversity of Native populations inhabited every region of the North American continent.","Because of that diversity, there was no sense of a unified Native identity in colonial or precolonial America.","Native American identity centered on the immediate social group.","Social groups included clan, tribe, village, chiefdom, and confederacy.","Native groups spoke diverse languages, held different religious beliefs, and practiced varied customs and traditions.","Some tribes practiced agriculture, while others relied on hunting and gathering for subsistence.","Conflicts between groups occurred for many reasons, including territory, hunting or agricultural practices, differing customs, and more.","In the early years of European colonization, Native American societies were severely weakened by disease.","With no natural immunity to European diseases, Native populations were devastated by smallpox and other diseases carried to the New World by colonizers.","Some estimates place the population loss of Native American tribes at 90 percent—a catastrophic loss of human life that had long-reaching effects on Native society.","While there is not space to discuss the astonishing diversity of Native life in North America, a closer look at two Native American groups provides a sense of the diversity present in pre-contact America and evidence that they played a vital role in the struggles of the Revolutionary era.","The Algonquian Peoples In Jamestown, Virginia, and Plymouth, Massachusetts, the earliest British colonists encountered members of the Algonquian peoples, one of North America’s most populous and widespread Native language groups.","Members of the group, who spoke the Algonquian language or a related dialect, included the Powhatan tribe near Jamestown and the Pequots and Narragansetts, who occupied the area settled by the Pilgrims.","Before European arrival, Algonquian peoples living in settlements along the Atlantic Coast and into the interior, along the St. Lawrence River and Great Lakes, practiced hunting and fishing.","A few   tribes supplemented their food stores by cultivating corn, beans, and squash—these crops were known as the Three Sisters.","As the first to encounter European settlers, members of the Algonquian group also experienced the earliest conflicts with the newcomers.","The Powhatan organized a confederacy and fiercely resisted Virginia’s westward expansion.","In New England, Wampanoags, under the leadership of Metacomet, opposed the Puritans’ encroachment into Native lands in King Phillip’s War.","These efforts checked the growth of European settlement but were ultimately unsuccessful in stopping further expansion.","As a result, both sides viewed the other with mistrust and fear.","The Iroquois Confederacy","The Iroquois Confederacy (called the Five Nations by Europeans) consisted of an alliance between five independent nations that shared a related language.","Archeological evidence of related material culture shared by the five nations suggests an alliance between five independent nations that shared a related language took shape in the late fifteenth-century.","The five nations that composed the alliance were the Mohawk, Oneida, Onondaga, Cayuga, and Seneca.","the Five Nations supported each other in conflicts with neighboring Huron and Algonquian groups.","In 1722, the Iroquoian-speaking Tuscarora people joined the Confederacy.","From this point forward, the alliance became known as the Six Nations."]]
ERROR:root:orig selected_specific len15
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents10
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['With no natural immunity to European diseases, Native populations were devastated by smallpox and other diseases carried to the New World by colonizers. Some estimates place the population loss of Native American tribes at 90 percent—a catastrophic loss of human life that had long-reaching effects on Native society.', 'The Algonquian Peoples In Jamestown, Virginia, and Plymouth, Massachusetts, the earliest British colonists encountered members of the Algonquian peoples, one of North America’s most populous and widespread Native language groups. Members of the group, who spoke the Algonquian language or a related dialect, included the Powhatan tribe near Jamestown and the Pequots and Narragansetts, who occupied the area settled by the Pilgrims.', 'However, historians agree the primary causes of the American Revolution can be traced to just two to three decades earlier, largely generated by the tensions created by the Seven Years’ War. Native American Society before European ColonizationBefore the arrival of European explorers and colonizers, a diversity of Native populations inhabited every region of the North American continent.', 'Members of the group, who spoke the Algonquian language or a related dialect, included the Powhatan tribe near Jamestown and the Pequots and Narragansetts, who occupied the area settled by the Pilgrims. Before European arrival, Algonquian peoples living in settlements along the Atlantic Coast and into the interior, along the St. Lawrence River and Great Lakes, practiced hunting and fishing.', 'While there is not space to discuss the astonishing diversity of Native life in North America, a closer look at two Native American groups provides a sense of the diversity present in pre-contact America and evidence that they played a vital role in the struggles of the Revolutionary era. The Algonquian Peoples In Jamestown, Virginia, and Plymouth, Massachusetts, the earliest British colonists encountered members of the Algonquian peoples, one of North America’s most populous and widespread Native language groups.', 'the Five Nations supported each other in conflicts with neighboring Huron and Algonquian groups. In 1722, the Iroquoian-speaking Tuscarora people joined the Confederacy.', 'The Iroquois Confederacy The Iroquois Confederacy (called the Five Nations by Europeans) consisted of an alliance between five independent nations that shared a related language.', 'The Powhatan organized a confederacy and fiercely resisted Virginia’s westward expansion. In New England, Wampanoags, under the leadership of Metacomet, opposed the Puritans’ encroachment into Native lands in King Phillip’s War.', 'In the early years of European colonization, Native American societies were severely weakened by disease. With no natural immunity to European diseases, Native populations were devastated by smallpox and other diseases carried to the New World by colonizers.']), ('questions', ['What is the estimate of the population loss of Native American tribes?', 'What tribe was near Jamestown?', 'When did the Native American Society exist?', 'What did the Algonquian people practice before European arrival?', 'What Native American group was a prominent colonist in Virginia?', 'When did the Tuscarora join the Confederacy?', 'How many nations did the Iroquois Confederacy consist of?', 'What tribe was in New England?', 'What diseases devastated Native populations?']), ('answers', ['90 percent', 'Powhatan', 'before European Colonization', 'hunting and fishing', 'The Algonquian Peoples', '1722', 'five', 'Wampanoags', 'smallpox and other diseases']), ('options', [['10 percent', '50 percent', '20 percent'], ['Mattaponi', 'Susquehannock', 'Tsenacommacah'], ['after the American Revolution', 'during the Civil War', 'during the colonial period'], ['farming', 'worshiping the spirits', 'building large villages'], ['The Huron', 'The Iroquois', 'The Shawnee'], ['1812', '1776', '1942'], ['four', 'two', 'six'], ['Pocumtucks', 'Narragansett', 'Massachusett'], ['lung disease from smoking tobacco', 'tuberculosis and other diseases', 'diabetes and other diseases']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:12.142683
ERROR:root:api_check 0:00:00.332028
ERROR:root:payload: 'Music Is Sound Organized in Time The broadest definition of music is “sound organized in time.” Many kinds of sounds—including noises and tones produced by any means, not only by musical instruments—can be used to create music, particularly in the modern era. All that is required is a time frame, sound waves, and a cognizant mind to perceive and interpret those sounds. Common but not required factors include a person (often called a composer) who first imagines the music, human or mechanical performers to generate the sounds, and a mechanical means of recording and reproducing them. Sometimes the composition and performance happen simultaneously (often as improvisation, but sometimes via electronic composition). Some degree of human intention and perception are necessary for music to exist, but defining this exactly continues to puzzle scientists and philosophers, who debate questions like whether birdsong can qualify as music, whether accidental sound can be music, or whether a phonograph playing in the forest is music if no one hears it. Music of the Western World It should be noted that many cultures have markedly different views of music; indeed in some cultures, music is so interconnected with ritual, language, dance, and other aspects of life that in some languages there is no separate word for “music.” At certain times in history, Western traditions have encountered and incorporated the music of non-Western cultures. The reverse process is also sometimes true. And, in recent decades, globalization has made the boundaries between Western and non-Western culture increasingly permeable. Nonetheless, the material in this guide will pertain to what is called the “music of the Western World”—the musical traditions that developed in Europe in the past two millennia and their cultural extensions in the Americas. The Physics of Musical Sound Sound Waves In the abstract, sound is described as a wave of energy. As a wave, it has both amplitude and frequency. The amplitude affects the decibel level, or how loud or soft the tone is. The higher the amplitude of a sound wave, the louder it is. The frequency affects the pitch, which is the highness or lowness of the sound. The greater the frequency of a sound wave, the higher its pitch. When the frequency of a wave is between 20 and 20,000 cycles per second, the normal human ear hears it as a single, sustained tone. A pure sine wave at 440 Hz (cycles per second) sounds like an A above middle C. Orchestral musicians in the United States usually tune their instruments to “A-440,” meaning 440 Hz. Of course, not every sound has a regular frequency. When you drop a book on the floor, the sound quickly dies down and has no discernable pitch because the wave pattern is so irregular and short. Thus, there are two kinds of musical sounds: pitched and nonpitched. Percussion instruments provide most of the non-pitched sounds in music. Instruments as Sound Sources How is a musical sound wave produced? In the late nineteenth century, two ethnomusicologists (the modern term for scholars who study the music of other cultures, or who study multiple cultures comparatively), Curt Sachs and Erich von Hornbostel, categorized instruments into four groups. Chordophones, such as violins, harps, and guitars, have one or more strings, which are plucked, bowed, or struck; the vibrating string creates the sound wave. Aerophones (brass and wind instruments such as the many varieties of horns and flutes) feature a vibrating column of air. Membranophones have a skin or other membrane stretched across some kind of frame. The membrane, but not the frame, vibrates when struck. With\n\n\n\n\nidiophones, the body of the instrument itself vibrates when struck. Some examples of idiophones are bells, woodblocks, and xylophones. Betsy Buck includes a water-drum membranophone and “shaken” idiophones (rattles) in “Ho Way Hey Yo” (Listening Example 6), while fifes (flute-like aerophones) and drums perform “Lady Hope’s Reel” (Listening Example 4). A fifth category was added later: electrophones, which create sound waves using a mechanical device known as an oscillator and are dependent upon electricity. Centuries before Sachs and Hornbostel, Western orchestral instruments were grouped into “families.” These categories are still used for Western instruments today. Strings or stringed instruments are usually bowed or plucked. Brass instruments, which are aerophones made of metal, are sounded by the performer’s buzzing lips, which make the column of air vibrate. Woodwind instruments are also aerophones in which the column of air is moved by breath alone—as in the case of flutes, recorders, and related instruments—or by one or two vibrating reeds usually made from wood. Percussion instruments include membranophones as well as idiophones, plus some chordophones that are struck rather than bowed or plucked, such as the piano.'
ERROR:root:orig input: 'Music Is Sound Organized in Time The broadest definition of music is “sound organized in time.” Many kinds of sounds—including noises and tones produced by any means, not only by musical instruments—can be used to create music, particularly in the modern era. All that is required is a time frame, sound waves, and a cognizant mind to perceive and interpret those sounds. Common but not required factors include a person (often called a composer) who first imagines the music, human or mechanical performers to generate the sounds, and a mechanical means of recording and reproducing them. Sometimes the composition and performance happen simultaneously (often as improvisation, but sometimes via electronic composition). Some degree of human intention and perception are necessary for music to exist, but defining this exactly continues to puzzle scientists and philosophers, who debate questions like whether birdsong can qualify as music, whether accidental sound can be music, or whether a phonograph playing in the forest is music if no one hears it. Music of the Western World It should be noted that many cultures have markedly different views of music; indeed in some cultures, music is so interconnected with ritual, language, dance, and other aspects of life that in some languages there is no separate word for “music.” At certain times in history, Western traditions have encountered and incorporated the music of non-Western cultures. The reverse process is also sometimes true. And, in recent decades, globalization has made the boundaries between Western and non-Western culture increasingly permeable. Nonetheless, the material in this guide will pertain to what is called the “music of the Western World”—the musical traditions that developed in Europe in the past two millennia and their cultural extensions in the Americas. The Physics of Musical Sound Sound Waves In the abstract, sound is described as a wave of energy. As a wave, it has both amplitude and frequency. The amplitude affects the decibel level, or how loud or soft the tone is. The higher the amplitude of a sound wave, the louder it is. The frequency affects the pitch, which is the highness or lowness of the sound. The greater the frequency of a sound wave, the higher its pitch. When the frequency of a wave is between 20 and 20,000 cycles per second, the normal human ear hears it as a single, sustained tone. A pure sine wave at 440 Hz (cycles per second) sounds like an A above middle C. Orchestral musicians in the United States usually tune their instruments to “A-440,” meaning 440 Hz. Of course, not every sound has a regular frequency. When you drop a book on the floor, the sound quickly dies down and has no discernable pitch because the wave pattern is so irregular and short. Thus, there are two kinds of musical sounds: pitched and nonpitched. Percussion instruments provide most of the non-pitched sounds in music. Instruments as Sound Sources How is a musical sound wave produced? In the late nineteenth century, two ethnomusicologists (the modern term for scholars who study the music of other cultures, or who study multiple cultures comparatively), Curt Sachs and Erich von Hornbostel, categorized instruments into four groups. Chordophones, such as violins, harps, and guitars, have one or more strings, which are plucked, bowed, or struck; the vibrating string creates the sound wave. Aerophones (brass and wind instruments such as the many varieties of horns and flutes) feature a vibrating column of air. Membranophones have a skin or other membrane stretched across some kind of frame. The membrane, but not the frame, vibrates when struck. With\r\n\r\n\r\n\r\n\r\nidiophones, the body of the instrument itself vibrates when struck. Some examples of idiophones are bells, woodblocks, and xylophones. Betsy Buck includes a water-drum membranophone and “shaken” idiophones (rattles) in “Ho Way Hey Yo” (Listening Example 6), while fifes (flute-like aerophones) and drums perform “Lady Hope’s Reel” (Listening Example 4). A fifth category was added later: electrophones, which create sound waves using a mechanical device known as an oscillator and are dependent upon electricity. Centuries before Sachs and Hornbostel, Western orchestral instruments were grouped into “families.” These categories are still used for Western instruments today. Strings or stringed instruments are usually bowed or plucked. Brass instruments, which are aerophones made of metal, are sounded by the performer’s buzzing lips, which make the column of air vibrate. Woodwind instruments are also aerophones in which the column of air is moved by breath alone—as in the case of flutes, recorders, and related instruments—or by one or two vibrating reeds usually made from wood. Percussion instruments include membranophones as well as idiophones, plus some chordophones that are struck rather than bowed or plucked, such as the piano.'
ERROR:root:orig selected_specific len[[["When the frequency of a wave is between 20 and 20,000 cycles per second, the normal human ear hears it as a single, sustained tone.",{},20],["A pure sine wave at 440 Hz (cycles per second) sounds like an A above middle C. Orchestral musicians in the United States usually tune their instruments to “A-440,” meaning 440 Hz.",{},21],["Some degree of human intention and perception are necessary for music to exist, but defining this exactly continues to puzzle scientists and philosophers, who debate questions like whether birdsong can qualify as music, whether accidental sound can be music, or whether a phonograph playing in the forest is music if no one hears it.",{},6],["Betsy Buck includes a water-drum membranophone and “shaken” idiophones (rattles) in “",{},35],["In the late nineteenth century, two ethnomusicologists (the modern term for scholars who study the music of other cultures, or who study multiple cultures comparatively), Curt Sachs and Erich von Hornbostel, categorized instruments into four groups.",{},28],["Chordophones, such as violins, harps, and guitars, have one or more strings, which are plucked, bowed, or struck; the vibrating string creates the sound wave.",{},29],["(Listening Example 6), while fifes (flute-like aerophones) and drums perform “Lady Hope’s Reel”",{},38],["Percussion instruments include membranophones as well as idiophones, plus some chordophones that are struck rather than bowed or plucked, such as the piano.",{},46],["Aerophones (brass and wind instruments such as the many varieties of horns and flutes) feature a vibrating column of air.",{},30],["Woodwind instruments are also aerophones in which the column of air is moved by breath alone—as in the case of flutes, recorders, and related instruments—or by one or two vibrating reeds usually made from wood.",{},45],["Brass instruments, which are aerophones made of metal, are sounded by the performer’s buzzing lips, which make the column of air vibrate.",{},44],["A fifth category was added later: electrophones, which create sound waves using a mechanical device known as an oscillator and are dependent upon electricity.",{},40],["When you drop a book on the floor, the sound quickly dies down and has no discernable pitch because the wave pattern is so irregular and short.",{},23],["Common but not required factors include a person (often called a composer) who first imagines the music, human or mechanical performers to generate the sounds, and a mechanical means of recording and reproducing them.",{},4],["Membranophones have a skin or other membrane stretched across some kind of frame.",{},31],["Some examples of idiophones are bells, woodblocks, and xylophones.",{},34]],["Music Is Sound Organized in Time","The broadest definition of music is “sound organized in time.”","Many kinds of sounds—including noises and tones produced by any means, not only by musical instruments—can be used to create music, particularly in the modern era.","All that is required is a time frame, sound waves, and a cognizant mind to perceive and interpret those sounds.","Common but not required factors include a person (often called a composer) who first imagines the music, human or mechanical performers to generate the sounds, and a mechanical means of recording and reproducing them.","Sometimes the composition and performance happen simultaneously (often as improvisation, but sometimes via electronic composition).","Some degree of human intention and perception are necessary for music to exist, but defining this exactly continues to puzzle scientists and philosophers, who debate questions like whether birdsong can qualify as music, whether accidental sound can be music, or whether a phonograph playing in the forest is music if no one hears it.","Music of the Western World","It should be noted that many cultures have markedly different views of music; indeed in some cultures, music is so interconnected with ritual, language, dance, and other aspects of life that in some languages there is no separate word for “music.”","At certain times in history, Western traditions have encountered and incorporated the music of non-Western cultures.","The reverse process is also sometimes true.","And, in recent decades, globalization has made the boundaries between Western and non-Western culture increasingly permeable.","Nonetheless, the material in this guide will pertain to what is called the “music of the Western World”—the musical traditions that developed in Europe in the past two millennia and their cultural extensions in the Americas.","The Physics of Musical Sound Sound Waves","In the abstract, sound is described as a wave of energy.","As a wave, it has both amplitude and frequency.","The amplitude affects the decibel level, or how loud or soft the tone is.","The higher the amplitude of a sound wave, the louder it is.","The frequency affects the pitch, which is the highness or lowness of the sound.","The greater the frequency of a sound wave, the higher its pitch.","When the frequency of a wave is between 20 and 20,000 cycles per second, the normal human ear hears it as a single, sustained tone.","A pure sine wave at 440 Hz (cycles per second) sounds like an A above middle C. Orchestral musicians in the United States usually tune their instruments to “A-440,” meaning 440 Hz.","Of course, not every sound has a regular frequency.","When you drop a book on the floor, the sound quickly dies down and has no discernable pitch because the wave pattern is so irregular and short.","Thus, there are two kinds of musical sounds: pitched and nonpitched.","Percussion instruments provide most of the non-pitched sounds in music.","Instruments as Sound Sources","How is a musical sound wave produced?","In the late nineteenth century, two ethnomusicologists (the modern term for scholars who study the music of other cultures, or who study multiple cultures comparatively), Curt Sachs and Erich von Hornbostel, categorized instruments into four groups.","Chordophones, such as violins, harps, and guitars, have one or more strings, which are plucked, bowed, or struck; the vibrating string creates the sound wave.","Aerophones (brass and wind instruments such as the many varieties of horns and flutes) feature a vibrating column of air.","Membranophones have a skin or other membrane stretched across some kind of frame.","The membrane, but not the frame, vibrates when struck.","With     idiophones, the body of the instrument itself vibrates when struck.","Some examples of idiophones are bells, woodblocks, and xylophones.","Betsy Buck includes a water-drum membranophone and “shaken” idiophones (rattles) in “","Ho Way","Hey Yo”","(Listening Example 6), while fifes (flute-like aerophones) and drums perform “Lady Hope’s Reel”","(Listening Example 4).","A fifth category was added later: electrophones, which create sound waves using a mechanical device known as an oscillator and are dependent upon electricity.","Centuries before Sachs and Hornbostel, Western orchestral instruments were grouped into “families.”","These categories are still used for Western instruments today.","Strings or stringed instruments are usually bowed or plucked.","Brass instruments, which are aerophones made of metal, are sounded by the performer’s buzzing lips, which make the column of air vibrate.","Woodwind instruments are also aerophones in which the column of air is moved by breath alone—as in the case of flutes, recorders, and related instruments—or by one or two vibrating reeds usually made from wood.","Percussion instruments include membranophones as well as idiophones, plus some chordophones that are struck rather than bowed or plucked, such as the piano."]]
ERROR:root:orig selected_specific len16
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents10
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The greater the frequency of a sound wave, the higher its pitch. When the frequency of a wave is between 20 and 20,000 cycles per second, the normal human ear hears it as a single, sustained tone.', 'When the frequency of a wave is between 20 and 20,000 cycles per second, the normal human ear hears it as a single, sustained tone. A pure sine wave at 440 Hz (cycles per second) sounds like an A above middle C. Orchestral musicians in the United States usually tune their instruments to “A-440,” meaning 440 Hz.', 'Sometimes the composition and performance happen simultaneously (often as improvisation, but sometimes via electronic composition). Some degree of human intention and perception are necessary for music to exist, but defining this exactly continues to puzzle scientists and philosophers, who debate questions like whether birdsong can qualify as music, whether accidental sound can be music, or whether a phonograph playing in the forest is music if no one hears it.', 'Some examples of idiophones are bells, woodblocks, and xylophones. Betsy Buck includes a water-drum membranophone and “shaken” idiophones (rattles) in “', 'How is a musical sound wave produced? In the late nineteenth century, two ethnomusicologists (the modern term for scholars who study the music of other cultures, or who study multiple cultures comparatively), Curt Sachs and Erich von Hornbostel, categorized instruments into four groups.', 'In the late nineteenth century, two ethnomusicologists (the modern term for scholars who study the music of other cultures, or who study multiple cultures comparatively), Curt Sachs and Erich von Hornbostel, categorized instruments into four groups. Chordophones, such as violins, harps, and guitars, have one or more strings, which are plucked, bowed, or struck; the vibrating string creates the sound wave.', 'Hey Yo” (Listening Example 6), while fifes (flute-like aerophones) and drums perform “Lady Hope’s Reel”', 'Woodwind instruments are also aerophones in which the column of air is moved by breath alone—as in the case of flutes, recorders, and related instruments—or by one or two vibrating reeds usually made from wood. Percussion instruments include membranophones as well as idiophones, plus some chordophones that are struck rather than bowed or plucked, such as the piano.', 'Chordophones, such as violins, harps, and guitars, have one or more strings, which are plucked, bowed, or struck; the vibrating string creates the sound wave. Aerophones (brass and wind instruments such as the many varieties of horns and flutes) feature a vibrating column of air.', 'Brass instruments, which are aerophones made of metal, are sounded by the performer’s buzzing lips, which make the column of air vibrate. Woodwind instruments are also aerophones in which the column of air is moved by breath alone—as in the case of flutes, recorders, and related instruments—or by one or two vibrating reeds usually made from wood.']), ('questions', ['What is the frequency range of a sound wave per second?', 'What is the frequency of a pure sine wave?', "What can be considered music if it isn't a phonograph playing in the forest?", 'What type of idiophone does Betsy Buck include?', 'How many groups of instruments were categorized?', 'What creates the sound wave?', 'What are fifes?', 'What is one type of percussion instrument?', 'What do aerophones feature?', 'How is the column of air moved in woodwind instruments?']), ('answers', ['20 and 20,000 cycles', '440 Hz', 'birdsong', 'water-drum membranophone', 'four groups', 'vibrating string', 'flute-like aerophones', 'membranophones', 'vibrating column of air', 'by breath alone']), ('options', [['40,000 cycles', '20 cycles', '20 and 40,000 cycles'], ['220 Hz', '880 Hz', '3.5 Hz'], ['guitars', 'piano', 'drums'], ['clay-drum', 'reed instrument', 'reed-piano'], ['two groups', 'three groups', 'five groups'], ['a strike on a drum', 'a beep on a computer', 'air molecules'], ['saxophone-like instruments', 'trumpets', 'trombones'], ['bowed instruments', 'flutes', 'wind instruments'], ['a reed', 'a mouthpiece', 'a bell'], ["by the player's embouchure", 'by gravity', 'by air pressure']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:21.300651
ERROR:root:api_check 0:00:00.343759
ERROR:root:payload: 'Some degree of human intention and perception are necessary for music to exist, but defining this exactly continues to puzzle scientists and philosophers, who debate questions like whether birdsong can qualify as music, whether accidental sound can be music, or whether a phonograph playing in the forest is music if no one hears it. Music of the Western World It should be noted that many cultures have markedly different views of music; indeed in some cultures, music is so interconnected with ritual, language, dance, and other aspects of life that in some languages there is no separate word for “music.” At certain times in history, Western traditions have encountered and incorporated the music of non-Western cultures. The reverse process is also sometimes true. And, in recent decades, globalization has made the boundaries between Western and non-Western culture increasingly permeable. Nonetheless, the material in this guide will pertain to what is called the “music of the Western World”—the musical traditions that developed in Europe in the past two millennia and their cultural extensions in the Americas. The Physics of Musical Sound Sound Waves In the abstract, sound is described as a wave of energy. As a wave, it has both amplitude and frequency. The amplitude affects the decibel level, or how loud or soft the tone is. The higher the amplitude of a sound wave, the louder it is. The frequency affects the pitch, which is the highness or lowness of the sound. The greater the frequency of a sound wave, the higher its pitch. When the frequency of a wave is between 20 and 20,000 cycles per second, the normal human ear hears it as a single, sustained tone. A pure sine wave at 440 Hz (cycles per second) sounds like an A above middle C. Orchestral musicians in the United States usually tune their instruments to “A-440,” meaning 440 Hz. Of course, not every sound has a regular frequency. When you drop a book on the floor, the sound quickly dies down and has no discernable pitch because the wave pattern is so irregular and short. Thus, there are two kinds of musical sounds: pitched and nonpitched. Percussion instruments provide most of the non-pitched sounds in music. Instruments as Sound Sources How is a musical sound wave produced? In the late nineteenth century, two ethnomusicologists (the modern term for scholars who study the music of other cultures, or who study multiple cultures comparatively), Curt Sachs and Erich von Hornbostel, categorized instruments into four groups. Chordophones, such as violins, harps, and guitars, have one or more strings, which are plucked, bowed, or struck; the vibrating string creates the sound wave. Aerophones (brass and wind instruments such as the many varieties of horns and flutes) feature a vibrating column of air. Membranophones have a skin or other membrane stretched across some kind of frame. The membrane, but not the frame, vibrates when struck. With idiophones, the body of the instrument itself vibrates when struck. Some examples of idiophones are bells, woodblocks, and xylophones. Betsy Buck includes a water-drum membranophone and “shaken” idiophones (rattles) in “Ho Way Hey Yo” (Listening Example 6), while fifes (flute-like aerophones) and drums perform “Lady Hope’s Reel” (Listening Example 4). A fifth category was added later: electrophones, which create sound waves using a mechanical device known as an oscillator and are dependent upon electricity. Centuries before Sachs and Hornbostel, Western orchestral instruments were grouped into “families.” These categories are still used for Western instruments today. Strings or stringed instruments are usually bowed or plucked. Brass instruments, which are aerophones made of metal, are sounded by the performer’s buzzing lips, which make the column of air vibrate. Woodwind instruments are also aerophones in which the column of air is moved by breath alone—as in the case of flutes, recorders, and related instruments—or by one or two vibrating reeds usually made from wood. Percussion instruments include membranophones as well as idiophones, plus some chordophones that are struck rather than bowed or plucked, such as the piano.\n\n\n TABLE 1–1 The most common Western orchestral instruments. FAMILY NAME SACHS/HORNBOSTEL CLASSIFICATION Stringed instruments Violin, viola, cello, double bass; also guitar and lute Chordophones Woodwinds Piccolo, flute, oboe, clarinet, bassoon; also saxophone Aerophones Brass Trumpet, trombone, French horn, tuba; also flugelhorn, baritone, bugle Aerophones Percussion Timpani, bass drum, snare drum, tambourine Membranophones marimba, xylophone, vibraphone, tubular bells, gongs, cymbals, triangle, wood block Idiophones Keyboards Piano, harpsichord, organ, celesta Varies'
ERROR:root:orig input: 'Some degree of human intention and perception are necessary for music to exist, but defining this exactly continues to puzzle scientists and philosophers, who debate questions like whether birdsong can qualify as music, whether accidental sound can be music, or whether a phonograph playing in the forest is music if no one hears it. Music of the Western World It should be noted that many cultures have markedly different views of music; indeed in some cultures, music is so interconnected with ritual, language, dance, and other aspects of life that in some languages there is no separate word for “music.” At certain times in history, Western traditions have encountered and incorporated the music of non-Western cultures. The reverse process is also sometimes true. And, in recent decades, globalization has made the boundaries between Western and non-Western culture increasingly permeable. Nonetheless, the material in this guide will pertain to what is called the “music of the Western World”—the musical traditions that developed in Europe in the past two millennia and their cultural extensions in the Americas. The Physics of Musical Sound Sound Waves In the abstract, sound is described as a wave of energy. As a wave, it has both amplitude and frequency. The amplitude affects the decibel level, or how loud or soft the tone is. The higher the amplitude of a sound wave, the louder it is. The frequency affects the pitch, which is the highness or lowness of the sound. The greater the frequency of a sound wave, the higher its pitch. When the frequency of a wave is between 20 and 20,000 cycles per second, the normal human ear hears it as a single, sustained tone. A pure sine wave at 440 Hz (cycles per second) sounds like an A above middle C. Orchestral musicians in the United States usually tune their instruments to “A-440,” meaning 440 Hz. Of course, not every sound has a regular frequency. When you drop a book on the floor, the sound quickly dies down and has no discernable pitch because the wave pattern is so irregular and short. Thus, there are two kinds of musical sounds: pitched and nonpitched. Percussion instruments provide most of the non-pitched sounds in music. Instruments as Sound Sources How is a musical sound wave produced? In the late nineteenth century, two ethnomusicologists (the modern term for scholars who study the music of other cultures, or who study multiple cultures comparatively), Curt Sachs and Erich von Hornbostel, categorized instruments into four groups. Chordophones, such as violins, harps, and guitars, have one or more strings, which are plucked, bowed, or struck; the vibrating string creates the sound wave. Aerophones (brass and wind instruments such as the many varieties of horns and flutes) feature a vibrating column of air. Membranophones have a skin or other membrane stretched across some kind of frame. The membrane, but not the frame, vibrates when struck. With idiophones, the body of the instrument itself vibrates when struck. Some examples of idiophones are bells, woodblocks, and xylophones. Betsy Buck includes a water-drum membranophone and “shaken” idiophones (rattles) in “Ho Way Hey Yo” (Listening Example 6), while fifes (flute-like aerophones) and drums perform “Lady Hope’s Reel” (Listening Example 4). A fifth category was added later: electrophones, which create sound waves using a mechanical device known as an oscillator and are dependent upon electricity. Centuries before Sachs and Hornbostel, Western orchestral instruments were grouped into “families.” These categories are still used for Western instruments today. Strings or stringed instruments are usually bowed or plucked. Brass instruments, which are aerophones made of metal, are sounded by the performer’s buzzing lips, which make the column of air vibrate. Woodwind instruments are also aerophones in which the column of air is moved by breath alone—as in the case of flutes, recorders, and related instruments—or by one or two vibrating reeds usually made from wood. Percussion instruments include membranophones as well as idiophones, plus some chordophones that are struck rather than bowed or plucked, such as the piano.\r\n\r\n\r\n TABLE 1–1 The most common Western orchestral instruments. FAMILY NAME SACHS/HORNBOSTEL CLASSIFICATION Stringed instruments Violin, viola, cello, double bass; also guitar and lute Chordophones Woodwinds Piccolo, flute, oboe, clarinet, bassoon; also saxophone Aerophones Brass Trumpet, trombone, French horn, tuba; also flugelhorn, baritone, bugle Aerophones Percussion Timpani, bass drum, snare drum, tambourine Membranophones marimba, xylophone, vibraphone, tubular bells, gongs, cymbals, triangle, wood block Idiophones Keyboards Piano, harpsichord, organ, celesta Varies\r\n\r\n'
ERROR:root:orig selected_specific len[[["When the frequency of a wave is between 20 and 20,000 cycles per second, the normal human ear hears it as a single, sustained tone.",{},14],["FAMILY NAME SACHS/HORNBOSTEL CLASSIFICATION Stringed instruments Violin, viola, cello, double bass; also guitar and lute Chordophones Woodwinds Piccolo, flute, oboe, clarinet, bassoon; also saxophone Aerophones Brass Trumpet, trombone, French horn, tuba; also flugelhorn, baritone, bugle Aerophones Percussion Timpani, bass drum, snare drum, tambourine Membranophones marimba, xylophone, vibraphone, tubular bells, gongs, cymbals, triangle, wood block",{},43],["A pure sine wave at 440 Hz (cycles per second) sounds like an A above middle C. Orchestral musicians in the United States usually tune their instruments to “A-440,” meaning 440 Hz.",{},15],["Some degree of human intention and perception are necessary for music to exist, but defining this exactly continues to puzzle scientists and philosophers, who debate questions like whether birdsong can qualify as music, whether accidental sound can be music, or whether a phonograph playing in the forest is music if no one hears it.",{},0],["Betsy Buck includes a water-drum membranophone and “shaken” idiophones (rattles) in “",{},29],["In the late nineteenth century, two ethnomusicologists (the modern term for scholars who study the music of other cultures, or who study multiple cultures comparatively), Curt Sachs and Erich von Hornbostel, categorized instruments into four groups.",{},22],["Chordophones, such as violins, harps, and guitars, have one or more strings, which are plucked, bowed, or struck; the vibrating string creates the sound wave.",{},23],["(Listening Example 6), while fifes (flute-like aerophones) and drums perform “Lady Hope’s Reel”",{},32],["Percussion instruments include membranophones as well as idiophones, plus some chordophones that are struck rather than bowed or plucked, such as the piano.",{},40],["Aerophones (brass and wind instruments such as the many varieties of horns and flutes) feature a vibrating column of air.",{},24],["Woodwind instruments are also aerophones in which the column of air is moved by breath alone—as in the case of flutes, recorders, and related instruments—or by one or two vibrating reeds usually made from wood.",{},39],["Brass instruments, which are aerophones made of metal, are sounded by the performer’s buzzing lips, which make the column of air vibrate.",{},38],["Idiophones Keyboards Piano, harpsichord, organ, celesta Varies",{},44],["A fifth category was added later: electrophones, which create sound waves using a mechanical device known as an oscillator and are dependent upon electricity.",{},34],["When you drop a book on the floor, the sound quickly dies down and has no discernable pitch because the wave pattern is so irregular and short.",{},17],["Membranophones have a skin or other membrane stretched across some kind of frame.",{},25],["Some examples of idiophones are bells, woodblocks, and xylophones.",{},28]],["Some degree of human intention and perception are necessary for music to exist, but defining this exactly continues to puzzle scientists and philosophers, who debate questions like whether birdsong can qualify as music, whether accidental sound can be music, or whether a phonograph playing in the forest is music if no one hears it.","Music of the Western World","It should be noted that many cultures have markedly different views of music; indeed in some cultures, music is so interconnected with ritual, language, dance, and other aspects of life that in some languages there is no separate word for “music.”","At certain times in history, Western traditions have encountered and incorporated the music of non-Western cultures.","The reverse process is also sometimes true.","And, in recent decades, globalization has made the boundaries between Western and non-Western culture increasingly permeable.","Nonetheless, the material in this guide will pertain to what is called the “music of the Western World”—the musical traditions that developed in Europe in the past two millennia and their cultural extensions in the Americas.","The Physics of Musical Sound Sound Waves","In the abstract, sound is described as a wave of energy.","As a wave, it has both amplitude and frequency.","The amplitude affects the decibel level, or how loud or soft the tone is.","The higher the amplitude of a sound wave, the louder it is.","The frequency affects the pitch, which is the highness or lowness of the sound.","The greater the frequency of a sound wave, the higher its pitch.","When the frequency of a wave is between 20 and 20,000 cycles per second, the normal human ear hears it as a single, sustained tone.","A pure sine wave at 440 Hz (cycles per second) sounds like an A above middle C. Orchestral musicians in the United States usually tune their instruments to “A-440,” meaning 440 Hz.","Of course, not every sound has a regular frequency.","When you drop a book on the floor, the sound quickly dies down and has no discernable pitch because the wave pattern is so irregular and short.","Thus, there are two kinds of musical sounds: pitched and nonpitched.","Percussion instruments provide most of the non-pitched sounds in music.","Instruments as Sound Sources","How is a musical sound wave produced?","In the late nineteenth century, two ethnomusicologists (the modern term for scholars who study the music of other cultures, or who study multiple cultures comparatively), Curt Sachs and Erich von Hornbostel, categorized instruments into four groups.","Chordophones, such as violins, harps, and guitars, have one or more strings, which are plucked, bowed, or struck; the vibrating string creates the sound wave.","Aerophones (brass and wind instruments such as the many varieties of horns and flutes) feature a vibrating column of air.","Membranophones have a skin or other membrane stretched across some kind of frame.","The membrane, but not the frame, vibrates when struck.","With idiophones, the body of the instrument itself vibrates when struck.","Some examples of idiophones are bells, woodblocks, and xylophones.","Betsy Buck includes a water-drum membranophone and “shaken” idiophones (rattles) in “","Ho Way","Hey Yo”","(Listening Example 6), while fifes (flute-like aerophones) and drums perform “Lady Hope’s Reel”","(Listening Example 4).","A fifth category was added later: electrophones, which create sound waves using a mechanical device known as an oscillator and are dependent upon electricity.","Centuries before Sachs and Hornbostel, Western orchestral instruments were grouped into “families.”","These categories are still used for Western instruments today.","Strings or stringed instruments are usually bowed or plucked.","Brass instruments, which are aerophones made of metal, are sounded by the performer’s buzzing lips, which make the column of air vibrate.","Woodwind instruments are also aerophones in which the column of air is moved by breath alone—as in the case of flutes, recorders, and related instruments—or by one or two vibrating reeds usually made from wood.","Percussion instruments include membranophones as well as idiophones, plus some chordophones that are struck rather than bowed or plucked, such as the piano.","TABLE 1–1","The most common Western orchestral instruments.","FAMILY NAME SACHS/HORNBOSTEL CLASSIFICATION Stringed instruments Violin, viola, cello, double bass; also guitar and lute Chordophones Woodwinds Piccolo, flute, oboe, clarinet, bassoon; also saxophone Aerophones Brass Trumpet, trombone, French horn, tuba; also flugelhorn, baritone, bugle Aerophones Percussion Timpani, bass drum, snare drum, tambourine Membranophones marimba, xylophone, vibraphone, tubular bells, gongs, cymbals, triangle, wood block","Idiophones Keyboards Piano, harpsichord, organ, celesta Varies"]]
ERROR:root:orig selected_specific len17
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents10
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The greater the frequency of a sound wave, the higher its pitch. When the frequency of a wave is between 20 and 20,000 cycles per second, the normal human ear hears it as a single, sustained tone.', 'The most common Western orchestral instruments. FAMILY NAME SACHS/HORNBOSTEL CLASSIFICATION Stringed instruments Violin, viola, cello, double bass; also guitar and lute Chordophones Woodwinds Piccolo, flute, oboe, clarinet, bassoon; also saxophone Aerophones Brass Trumpet, trombone, French horn, tuba; also flugelhorn, baritone, bugle Aerophones Percussion Timpani, bass drum, snare drum, tambourine Membranophones marimba, xylophone, vibraphone, tubular bells, gongs, cymbals, triangle, wood block', 'When the frequency of a wave is between 20 and 20,000 cycles per second, the normal human ear hears it as a single, sustained tone. A pure sine wave at 440 Hz (cycles per second) sounds like an A above middle C. Orchestral musicians in the United States usually tune their instruments to “A-440,” meaning 440 Hz.', ' Some degree of human intention and perception are necessary for music to exist, but defining this exactly continues to puzzle scientists and philosophers, who debate questions like whether birdsong can qualify as music, whether accidental sound can be music, or whether a phonograph playing in the forest is music if no one hears it.', 'Some examples of idiophones are bells, woodblocks, and xylophones. Betsy Buck includes a water-drum membranophone and “shaken” idiophones (rattles) in “', 'How is a musical sound wave produced? In the late nineteenth century, two ethnomusicologists (the modern term for scholars who study the music of other cultures, or who study multiple cultures comparatively), Curt Sachs and Erich von Hornbostel, categorized instruments into four groups.', 'In the late nineteenth century, two ethnomusicologists (the modern term for scholars who study the music of other cultures, or who study multiple cultures comparatively), Curt Sachs and Erich von Hornbostel, categorized instruments into four groups. Chordophones, such as violins, harps, and guitars, have one or more strings, which are plucked, bowed, or struck; the vibrating string creates the sound wave.', 'Hey Yo” (Listening Example 6), while fifes (flute-like aerophones) and drums perform “Lady Hope’s Reel”', 'Woodwind instruments are also aerophones in which the column of air is moved by breath alone—as in the case of flutes, recorders, and related instruments—or by one or two vibrating reeds usually made from wood. Percussion instruments include membranophones as well as idiophones, plus some chordophones that are struck rather than bowed or plucked, such as the piano.', 'Chordophones, such as violins, harps, and guitars, have one or more strings, which are plucked, bowed, or struck; the vibrating string creates the sound wave. Aerophones (brass and wind instruments such as the many varieties of horns and flutes) feature a vibrating column of air.']), ('questions', ['What is the frequency range of a sound wave per second?', 'What is the name of the Brass Trumpet?', 'What is the frequency of a pure sine wave?', "What can be considered music if it isn't already a part of the human race?", 'What type of idiophone does Betsy Buck include?', 'How many groups of instruments were categorized?', 'What creates the sound wave?', 'What are fifes?', 'What is one type of percussion instrument?', 'What do aerophones feature?']), ('answers', ['20 and 20,000 cycles', 'saxophone Aerophones', '440 Hz', 'birdsong', 'water-drum membranophone', 'four groups', 'vibrating string', 'flute-like aerophones', 'membranophones', 'vibrating column of air']), ('options', [['40,000 cycles', '20 cycles', '20 and 40,000 cycles'], ['Clarinet', 'Oboe', 'trombone'], ['220 Hz', '880 Hz', '3.5 Hz'], ['bagpipes', 'drum circles', 'pandemonium'], ['clay-drum', 'reed instrument', 'reed-piano'], ['two groups', 'three groups', 'five groups'], ['a strike on a drum', 'a beep on a computer', 'air molecules'], ['trumpets', 'saxophone-like aerophones', 'trombones'], ['bowed instruments', 'flutes', 'wind instruments'], ['a reed', 'a mouthpiece', 'a bell']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:14.198175
ERROR:root:api_check 0:00:00.343130
ERROR:root:payload: '. TABLE 1–1 The most common Western orchestral instruments. FAMILY NAME SACHS/HORNBOSTEL CLASSIFICATION Stringed instruments Violin, viola, cello, double bass; also guitar and lute Chordophones Woodwinds Piccolo, flute, oboe, clarinet, bassoon; also saxophone Aerophones Brass Trumpet, trombone, French horn, tuba; also flugelhorn, baritone, bugle Aerophones Percussion Timpani, bass drum, snare drum, tambourine Membranophones marimba, xylophone, vibraphone, tubular bells, gongs, cymbals, triangle, wood block Idiophones Keyboards Piano, harpsichord, organ, celesta Varies'
ERROR:root:orig input: '. TABLE 1–1 The most common Western orchestral instruments. FAMILY NAME SACHS/HORNBOSTEL CLASSIFICATION Stringed instruments Violin, viola, cello, double bass; also guitar and lute Chordophones Woodwinds Piccolo, flute, oboe, clarinet, bassoon; also saxophone Aerophones Brass Trumpet, trombone, French horn, tuba; also flugelhorn, baritone, bugle Aerophones Percussion Timpani, bass drum, snare drum, tambourine Membranophones marimba, xylophone, vibraphone, tubular bells, gongs, cymbals, triangle, wood block Idiophones Keyboards Piano, harpsichord, organ, celesta Varies'
ERROR:root:orig selected_specific len[[["FAMILY NAME SACHS/HORNBOSTEL CLASSIFICATION Stringed instruments Violin, viola, cello, double bass; also guitar and lute Chordophones Woodwinds Piccolo, flute, oboe, clarinet, bassoon; also saxophone Aerophones Brass Trumpet, trombone, French horn, tuba; also flugelhorn, baritone, bugle Aerophones Percussion Timpani, bass drum, snare drum, tambourine Membranophones marimba, xylophone, vibraphone, tubular bells, gongs, cymbals, triangle, wood block",{},3],["Idiophones Keyboards Piano, harpsichord, organ, celesta Varies",{},4]],[".","TABLE 1–1","The most common Western orchestral instruments.","FAMILY NAME SACHS/HORNBOSTEL CLASSIFICATION Stringed instruments Violin, viola, cello, double bass; also guitar and lute Chordophones Woodwinds Piccolo, flute, oboe, clarinet, bassoon; also saxophone Aerophones Brass Trumpet, trombone, French horn, tuba; also flugelhorn, baritone, bugle Aerophones Percussion Timpani, bass drum, snare drum, tambourine Membranophones marimba, xylophone, vibraphone, tubular bells, gongs, cymbals, triangle, wood block","Idiophones Keyboards Piano, harpsichord, organ, celesta Varies"]]
ERROR:root:orig selected_specific len2
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The most common Western orchestral instruments. FAMILY NAME SACHS/HORNBOSTEL CLASSIFICATION Stringed instruments Violin, viola, cello, double bass; also guitar and lute Chordophones Woodwinds Piccolo, flute, oboe, clarinet, bassoon; also saxophone Aerophones Brass Trumpet, trombone, French horn, tuba; also flugelhorn, baritone, bugle Aerophones Percussion Timpani, bass drum, snare drum, tambourine Membranophones marimba, xylophone, vibraphone, tubular bells, gongs, cymbals, triangle, wood block', 'FAMILY NAME SACHS/HORNBOSTEL CLASSIFICATION Stringed instruments Violin, viola, cello, double bass; also guitar and lute Chordophones Woodwinds Piccolo, flute, oboe, clarinet, bassoon; also saxophone Aerophones Brass Trumpet, trombone, French horn, tuba; also flugelhorn, baritone, bugle Aerophones Percussion Timpani, bass drum, snare drum, tambourine Membranophones marimba, xylophone, vibraphone, tubular bells, gongs, cymbals, triangle, wood block Idiophones Keyboards Piano, harpsichord, organ, celesta Varies']), ('questions', ['What is the name of the Brass Trumpet?', 'Keyboards for what instruments are used?']), ('answers', ['saxophone Aerophones', 'Piano, harpsichord, organ, celesta Varies']), ('options', [['Clarinet', 'Oboe', 'trombone'], ['Harpsichord only', 'Piano only', 'Celesta, organ, and piano']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.111175
ERROR:root:api_check 0:00:00.356511
ERROR:root:payload: '. TABLE 1–1 The most common Western orchestral instruments. FAMILY NAME SACHS/HORNBOSTEL CLASSIFICATION Stringed instruments Violin, viola, cello, double bass; also guitar and lute Chordophones Woodwinds Piccolo, flute, oboe, clarinet, bassoon; also saxophone Aerophones Brass Trumpet, trombone, French horn, tuba; also flugelhorn, baritone, bugle Aerophones Percussion Timpani, bass drum, snare drum, tambourine Membranophones marimba, xylophone, vibraphone, tubular bells, gongs, cymbals, triangle, wood block Idiophones Keyboards Piano, harpsichord, organ, celesta Varies'
ERROR:root:orig input: '. TABLE 1–1 The most common Western orchestral instruments. FAMILY NAME SACHS/HORNBOSTEL CLASSIFICATION Stringed instruments Violin, viola, cello, double bass; also guitar and lute Chordophones Woodwinds Piccolo, flute, oboe, clarinet, bassoon; also saxophone Aerophones Brass Trumpet, trombone, French horn, tuba; also flugelhorn, baritone, bugle Aerophones Percussion Timpani, bass drum, snare drum, tambourine Membranophones marimba, xylophone, vibraphone, tubular bells, gongs, cymbals, triangle, wood block Idiophones Keyboards Piano, harpsichord, organ, celesta Varies'
ERROR:root:orig selected_specific len[[["FAMILY NAME SACHS/HORNBOSTEL CLASSIFICATION Stringed instruments Violin, viola, cello, double bass; also guitar and lute Chordophones Woodwinds Piccolo, flute, oboe, clarinet, bassoon; also saxophone Aerophones Brass Trumpet, trombone, French horn, tuba; also flugelhorn, baritone, bugle Aerophones Percussion Timpani, bass drum, snare drum, tambourine Membranophones marimba, xylophone, vibraphone, tubular bells, gongs, cymbals, triangle, wood block",{},3],["Idiophones Keyboards Piano, harpsichord, organ, celesta Varies",{},4]],[".","TABLE 1–1","The most common Western orchestral instruments.","FAMILY NAME SACHS/HORNBOSTEL CLASSIFICATION Stringed instruments Violin, viola, cello, double bass; also guitar and lute Chordophones Woodwinds Piccolo, flute, oboe, clarinet, bassoon; also saxophone Aerophones Brass Trumpet, trombone, French horn, tuba; also flugelhorn, baritone, bugle Aerophones Percussion Timpani, bass drum, snare drum, tambourine Membranophones marimba, xylophone, vibraphone, tubular bells, gongs, cymbals, triangle, wood block","Idiophones Keyboards Piano, harpsichord, organ, celesta Varies"]]
ERROR:root:orig selected_specific len2
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents2
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['The most common Western orchestral instruments. FAMILY NAME SACHS/HORNBOSTEL CLASSIFICATION Stringed instruments Violin, viola, cello, double bass; also guitar and lute Chordophones Woodwinds Piccolo, flute, oboe, clarinet, bassoon; also saxophone Aerophones Brass Trumpet, trombone, French horn, tuba; also flugelhorn, baritone, bugle Aerophones Percussion Timpani, bass drum, snare drum, tambourine Membranophones marimba, xylophone, vibraphone, tubular bells, gongs, cymbals, triangle, wood block', 'FAMILY NAME SACHS/HORNBOSTEL CLASSIFICATION Stringed instruments Violin, viola, cello, double bass; also guitar and lute Chordophones Woodwinds Piccolo, flute, oboe, clarinet, bassoon; also saxophone Aerophones Brass Trumpet, trombone, French horn, tuba; also flugelhorn, baritone, bugle Aerophones Percussion Timpani, bass drum, snare drum, tambourine Membranophones marimba, xylophone, vibraphone, tubular bells, gongs, cymbals, triangle, wood block Idiophones Keyboards Piano, harpsichord, organ, celesta Varies']), ('questions', ['What is the name of the Brass Trumpet?', 'Keyboards for what instruments are used?']), ('answers', ['saxophone Aerophones', 'Piano, harpsichord, organ, celesta Varies']), ('options', [['Clarinet', 'Oboe', 'trombone'], ['Harpsichord only', 'Piano only', 'Celesta, organ, and piano']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:06.006659
ERROR:root:api_check 0:00:00.335566
ERROR:root:payload: 'Psalters from Overseas Many people who retranslated the psalms published their efforts in books known as psalters. Most often, a psalter contained only poetry, but some publications included musical notation. Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages. Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years. The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in Florida.10 Their 1562 version contained a melody (first published in the 1551 edition) that was designed to accompany Psalm 134, “Or sus serviteurs du Seigneur” (“Arise, you servants of the Lord”).11 Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title. However, the tune persisted for centuries. It is now often called the “Protestant Doxology”; its most familiar English text today is “Praise God from Whom All Blessings Flow.” English-speaking congregations wanted psalters in English, of course. One of the most influential was the Sternhold and Hopkins Psalter of 1562 (nicknamed the “Old Psalter”), which was brought to the first English settlement in the Atlantic colonies, established at Jamestown, Virginia, in 1607.12 Thomas Sternhold (1500–49), John Hopkins (d. 1570), and subsequent editors employed seventeen different meters for their 150 rhymed psalms, so only seventeen melodies were needed to accommodate all their translations.13 Notably, the editors “borrowed” the tune of Psalm 134 from the Genevan Psalter, but employed it for their translation of Psalm 100. For this reason, the Doxology tune is still sometimes nicknamed “Old Hundred.”14In the Old Psalter, Sternhold and Hopkins employed Long Meter for Psalm 100, but they used Common Meter for the Twenty-Third Psalm, similar to the meter of Figure 2-1b. Their rhyming translation of Psalm 23 was quite different, however: My shepehard is the living Lorde, nothing therefore I nead [need]; In pastors [pastures] fayre [fair], with waters calme he set me for to fead [feed]. He did convert and glad my soule, and brought my minde in frame: To walke in pathes of rightuousnes, for his most holy name. Yea though I walke in vale of death, yet will I feare non ill: Thy rod, thy staffe, doeth comfort me, and thou art with me styll [still].15 Further north, when the Pilgrims debarked from the Mayflower in 1620, they carried copies of the 1612 Ainsworth Psalter (which also borrowed the Genevan Psalter’s Psalm 134 tune for the Ainsworth setting of Psalm 100).16 Rev. Henry Ainsworth (1570–1623) used only fifteen different meters in his psalter, reducing even further the number of melodies needed.17 He offered yet another rendering of Psalm 23:'
ERROR:root:orig input: 'Psalters from Overseas Many people who retranslated the psalms published their efforts in books known as psalters. Most often, a psalter contained only poetry, but some publications included musical notation. Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages. Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years. The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in Florida.10 Their 1562 version contained a melody (first published in the 1551 edition) that was designed to accompany Psalm 134, “Or sus serviteurs du Seigneur” (“Arise, you servants of the Lord”).11 Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title. However, the tune persisted for centuries. It is now often called the “Protestant Doxology”; its most familiar English text today is “Praise God from Whom All Blessings Flow.” English-speaking congregations wanted psalters in English, of course. One of the most influential was the Sternhold and Hopkins Psalter of 1562 (nicknamed the “Old Psalter”), which was brought to the first English settlement in the Atlantic colonies, established at Jamestown, Virginia, in 1607.12 Thomas Sternhold (1500–49), John Hopkins (d. 1570), and subsequent editors employed seventeen different meters for their 150 rhymed psalms, so only seventeen melodies were needed to accommodate all their translations.13 Notably, the editors “borrowed” the tune of Psalm 134 from the Genevan Psalter, but employed it for their translation of Psalm 100. For this reason, the Doxology tune is still sometimes nicknamed “Old Hundred.”14In the Old Psalter, Sternhold and Hopkins employed Long Meter for Psalm 100, but they used Common Meter for the Twenty-Third Psalm, similar to the meter of Figure 2-1b. Their rhyming translation of Psalm 23 was quite different, however: My shepehard is the living Lorde, nothing therefore I nead [need]; In pastors [pastures] fayre [fair], with waters calme he set me for to fead [feed]. He did convert and glad my soule, and brought my minde in frame: To walke in pathes of rightuousnes, for his most holy name. Yea though I walke in vale of death, yet will I feare non ill: Thy rod, thy staffe, doeth comfort me, and thou art with me styll [still].15 Further north, when the Pilgrims debarked from the Mayflower in 1620, they carried copies of the 1612 Ainsworth Psalter (which also borrowed the Genevan Psalter’s Psalm 134 tune for the Ainsworth setting of Psalm 100).16 Rev. Henry Ainsworth (1570–1623) used only fifteen different meters in his psalter, reducing even further the number of melodies needed.17 He offered yet another rendering of Psalm 23:'
ERROR:root:orig selected_specific len[[["still].15 Further north, when the Pilgrims debarked from the Mayflower in 1620, they carried copies of the 1612 Ainsworth Psalter (which also borrowed the Genevan Psalter’s Psalm 134 tune for the Ainsworth setting of Psalm 100).16 Rev. Henry Ainsworth (1570–1623) used only fifteen different meters in his psalter, reducing even further the number of melodies needed.17",{},20],["One of the most influential was the Sternhold and Hopkins Psalter of 1562 (nicknamed the “Old Psalter”), which was brought to the first English settlement in the Atlantic colonies, established at Jamestown, Virginia, in 1607.12 Thomas Sternhold (1500–49), John Hopkins (d. 1570), and subsequent editors employed seventeen different meters for their 150 rhymed psalms, so only seventeen melodies were needed to accommodate all their translations.13",{},11],["the Old Psalter, Sternhold and Hopkins employed Long Meter for Psalm 100, but they used Common Meter for the Twenty-Third Psalm, similar to the meter of Figure 2-1b.",{},15],["My shepehard is the living Lorde, nothing therefore I nead [need]; In pastors [pastures] fayre [fair], with waters calme he set me for to fead [feed].",{},17],["Their 1562 version contained a melody (first published in the 1551 edition) that was designed to accompany Psalm 134, “Or sus serviteurs du Seigneur” (“Arise, you servants of the Lord”).11",{},6],["The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in",{},4],["Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years.",{},3],["Yea though I walke in vale of death, yet will I feare non ill: Thy rod, thy staffe, doeth comfort me, and thou art with me styll [",{},19],["He did convert and glad my soule, and brought my minde in frame: To walke in pathes of rightuousnes, for his most holy name.",{},18],["Notably, the editors “borrowed” the tune of Psalm 134 from the Genevan Psalter, but employed it for their translation of Psalm 100.",{},12],["It is now often called the “Protestant Doxology”; its most familiar English text today is “Praise God from Whom All Blessings Flow.”",{},9],["Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages.",{},2],["Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title.",{},7],["He offered yet another rendering of Psalm 23:",{},21]],["Psalters from Overseas Many people who retranslated the psalms published their efforts in books known as psalters.","Most often, a psalter contained only poetry, but some publications included musical notation.","Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages.","Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years.","The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in Florida.10","The ill-fated Huguenots's 1562 version contained a melody (first published in the 1551 edition) that was designed to accompany Psalm 134, “Or sus serviteurs du Seigneur” (“Arise, you servants of the Lord”).11","Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title.","However, the tune persisted for centuries.","the tune is now often called the “Protestant Doxology”; the tune's most familiar English text today is “Praise God from Whom All Blessings Flow.”","English-speaking congregations wanted psalters in English, of course.","One of the most influential was the Sternhold and Hopkins Psalter of 1562 (nicknamed the “Old Psalter”), which was brought to the first English settlement in the Atlantic colonies, established at Jamestown, Virginia, in 1607.12 Thomas Sternhold (1500–49), John Hopkins (d. 1570), and subsequent editors employed seventeen different meters for their 150 rhymed psalms, so only seventeen melodies were needed to accommodate all their translations.13","Notably, the editors “borrowed” the tune of Psalm 134 from the Genevan Psalter, but employed it for their translation of Psalm 100.","For this reason, the Doxology tune is still sometimes nicknamed “Old Hundred.","”14In","the Old Psalter, Sternhold and Hopkins employed Long Meter for Psalm 100, but they used Common Meter for the Twenty-Third Psalm, similar to the meter of Figure 2-1b.","the Old Psalter, Sternhold and Hopkins's rhyming translation of Psalm 23 was quite different, however: My shepehard is the living Lorde, nothing therefore I nead [need]; In pastors [pastures] fayre [fair], with waters calme he set me for to fead [feed].","waters calme did convert and glad my soule, and brought my minde in frame: To walke in pathes of rightuousnes, for waters calme's most holy name.","Yea though I walke in vale of death, yet will I feare non ill: Thy rod, thy staffe, doeth comfort me, and thou art with me styll [","still].15 Further north, when the Pilgrims debarked from the Mayflower in 1620, they carried copies of the 1612 Ainsworth Psalter (which also borrowed the Genevan Psalter’s Psalm 134 tune for the Ainsworth setting of Psalm 100).16 Rev. Henry Ainsworth (1570–1623) used only fifteen different meters in his psalter, reducing even further the number of melodies needed.17 Psalm 100).16 Rev. Henry Ainsworth ( offered yet another rendering of Psalm 23:"]]
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 844, in new
    assert item[2]<len(coref_sents)
AssertionError
ERROR:root:api_check 0:00:00.317979
ERROR:root:payload: 'Psalters from Overseas Many people who retranslated the psalms published their efforts in books known as psalters. Most often, a psalter contained only poetry, but some publications included musical notation. Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages. Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years. The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in Florida.10 Their 1562 version contained a melody (first published in the 1551 edition) that was designed to accompany Psalm 134, “Or sus serviteurs du Seigneur” (“Arise, you servants of the Lord”).11 Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title. However, the tune persisted for centuries. It is now often called the “Protestant Doxology”; its most familiar English text today is “Praise God from Whom All Blessings Flow.” English-speaking congregations wanted psalters in English, of course. One of the most influential was the Sternhold and Hopkins Psalter of 1562 (nicknamed the “Old Psalter”), which was brought to the first English settlement in the Atlantic colonies, established at Jamestown, Virginia, in 1607.12 Thomas Sternhold (1500–49), John Hopkins (d. 1570), and subsequent editors employed seventeen different meters for their 150 rhymed psalms, so only seventeen melodies were needed to accommodate all their translations.13 Notably, the editors “borrowed” the tune of Psalm 134 from the Genevan Psalter, but employed it for their translation of Psalm 100. For this reason, the Doxology tune is still sometimes nicknamed “Old Hundred.”14In the Old Psalter, Sternhold and Hopkins employed Long Meter for Psalm 100, but they used Common Meter for the Twenty-Third Psalm, similar to the meter of Figure 2-1b. Their rhyming translation of Psalm 23 was quite different, however: My shepehard is the living Lorde, nothing therefore I nead [need]; In pastors [pastures] fayre [fair], with waters calme he set me for to fead [feed]. He did convert and glad my soule, and brought my minde in frame: To walke in pathes of rightuousnes, for his most holy name. Yea though I walke in vale of death, yet will I feare non ill: Thy rod, thy staffe, doeth comfort me, and thou art with me styll [still].15 Further north, when the Pilgrims debarked from the Mayflower in 1620, they carried copies of the 1612 Ainsworth Psalter (which also borrowed the Genevan Psalter’s Psalm 134 tune for the Ainsworth setting of Psalm 100).16 Rev. Henry Ainsworth (1570–1623) used only fifteen different meters in his psalter, reducing even further the number of melodies needed.17 He offered yet another rendering of Psalm 23:'
ERROR:root:orig input: 'Psalters from Overseas Many people who retranslated the psalms published their efforts in books known as psalters. Most often, a psalter contained only poetry, but some publications included musical notation. Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages. Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years. The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in Florida.10 Their 1562 version contained a melody (first published in the 1551 edition) that was designed to accompany Psalm 134, “Or sus serviteurs du Seigneur” (“Arise, you servants of the Lord”).11 Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title. However, the tune persisted for centuries. It is now often called the “Protestant Doxology”; its most familiar English text today is “Praise God from Whom All Blessings Flow.” English-speaking congregations wanted psalters in English, of course. One of the most influential was the Sternhold and Hopkins Psalter of 1562 (nicknamed the “Old Psalter”), which was brought to the first English settlement in the Atlantic colonies, established at Jamestown, Virginia, in 1607.12 Thomas Sternhold (1500–49), John Hopkins (d. 1570), and subsequent editors employed seventeen different meters for their 150 rhymed psalms, so only seventeen melodies were needed to accommodate all their translations.13 Notably, the editors “borrowed” the tune of Psalm 134 from the Genevan Psalter, but employed it for their translation of Psalm 100. For this reason, the Doxology tune is still sometimes nicknamed “Old Hundred.”14In the Old Psalter, Sternhold and Hopkins employed Long Meter for Psalm 100, but they used Common Meter for the Twenty-Third Psalm, similar to the meter of Figure 2-1b. Their rhyming translation of Psalm 23 was quite different, however: My shepehard is the living Lorde, nothing therefore I nead [need]; In pastors [pastures] fayre [fair], with waters calme he set me for to fead [feed]. He did convert and glad my soule, and brought my minde in frame: To walke in pathes of rightuousnes, for his most holy name. Yea though I walke in vale of death, yet will I feare non ill: Thy rod, thy staffe, doeth comfort me, and thou art with me styll [still].15 Further north, when the Pilgrims debarked from the Mayflower in 1620, they carried copies of the 1612 Ainsworth Psalter (which also borrowed the Genevan Psalter’s Psalm 134 tune for the Ainsworth setting of Psalm 100).16 Rev. Henry Ainsworth (1570–1623) used only fifteen different meters in his psalter, reducing even further the number of melodies needed.17 He offered yet another rendering of Psalm 23:'
ERROR:root:orig selected_specific len[[["still].15 Further north, when the Pilgrims debarked from the Mayflower in 1620, they carried copies of the 1612 Ainsworth Psalter (which also borrowed the Genevan Psalter’s Psalm 134 tune for the Ainsworth setting of Psalm 100).16 Rev. Henry Ainsworth (1570–1623) used only fifteen different meters in his psalter, reducing even further the number of melodies needed.17",{},20],["One of the most influential was the Sternhold and Hopkins Psalter of 1562 (nicknamed the “Old Psalter”), which was brought to the first English settlement in the Atlantic colonies, established at Jamestown, Virginia, in 1607.12 Thomas Sternhold (1500–49), John Hopkins (d. 1570), and subsequent editors employed seventeen different meters for their 150 rhymed psalms, so only seventeen melodies were needed to accommodate all their translations.13",{},11],["the Old Psalter, Sternhold and Hopkins employed Long Meter for Psalm 100, but they used Common Meter for the Twenty-Third Psalm, similar to the meter of Figure 2-1b.",{},15],["My shepehard is the living Lorde, nothing therefore I nead [need]; In pastors [pastures] fayre [fair], with waters calme he set me for to fead [feed].",{},17],["Their 1562 version contained a melody (first published in the 1551 edition) that was designed to accompany Psalm 134, “Or sus serviteurs du Seigneur” (“Arise, you servants of the Lord”).11",{},6],["The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in",{},4],["Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years.",{},3],["Yea though I walke in vale of death, yet will I feare non ill: Thy rod, thy staffe, doeth comfort me, and thou art with me styll [",{},19],["He did convert and glad my soule, and brought my minde in frame: To walke in pathes of rightuousnes, for his most holy name.",{},18],["Notably, the editors “borrowed” the tune of Psalm 134 from the Genevan Psalter, but employed it for their translation of Psalm 100.",{},12],["It is now often called the “Protestant Doxology”; its most familiar English text today is “Praise God from Whom All Blessings Flow.”",{},9],["Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages.",{},2],["Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title.",{},7],["He offered yet another rendering of Psalm 23:",{},21]],["Psalters from Overseas Many people who retranslated the psalms published their efforts in books known as psalters.","Most often, a psalter contained only poetry, but some publications included musical notation.","Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages.","Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years.","The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in Florida.10","The ill-fated Huguenots's 1562 version contained a melody (first published in the 1551 edition) that was designed to accompany Psalm 134, “Or sus serviteurs du Seigneur” (“Arise, you servants of the Lord”).11","Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title.","However, the tune persisted for centuries.","the tune is now often called the “Protestant Doxology”; the tune's most familiar English text today is “Praise God from Whom All Blessings Flow.”","English-speaking congregations wanted psalters in English, of course.","One of the most influential was the Sternhold and Hopkins Psalter of 1562 (nicknamed the “Old Psalter”), which was brought to the first English settlement in the Atlantic colonies, established at Jamestown, Virginia, in 1607.12 Thomas Sternhold (1500–49), John Hopkins (d. 1570), and subsequent editors employed seventeen different meters for their 150 rhymed psalms, so only seventeen melodies were needed to accommodate all their translations.13","Notably, the editors “borrowed” the tune of Psalm 134 from the Genevan Psalter, but employed it for their translation of Psalm 100.","For this reason, the Doxology tune is still sometimes nicknamed “Old Hundred.","”14In","the Old Psalter, Sternhold and Hopkins employed Long Meter for Psalm 100, but they used Common Meter for the Twenty-Third Psalm, similar to the meter of Figure 2-1b.","the Old Psalter, Sternhold and Hopkins's rhyming translation of Psalm 23 was quite different, however: My shepehard is the living Lorde, nothing therefore I nead [need]; In pastors [pastures] fayre [fair], with waters calme he set me for to fead [feed].","waters calme did convert and glad my soule, and brought my minde in frame: To walke in pathes of rightuousnes, for waters calme's most holy name.","Yea though I walke in vale of death, yet will I feare non ill: Thy rod, thy staffe, doeth comfort me, and thou art with me styll [","still].15 Further north, when the Pilgrims debarked from the Mayflower in 1620, they carried copies of the 1612 Ainsworth Psalter (which also borrowed the Genevan Psalter’s Psalm 134 tune for the Ainsworth setting of Psalm 100).16 Rev. Henry Ainsworth (1570–1623) used only fifteen different meters in his psalter, reducing even further the number of melodies needed.17 Psalm 100).16 Rev. Henry Ainsworth ( offered yet another rendering of Psalm 23:"]]
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 844, in new
    assert item[2]<len(coref_sents)
AssertionError
ERROR:root:api_check 0:00:00.357596
ERROR:root:payload: 'Psalters from Overseas Many people who retranslated the psalms published their efforts in books known as psalters. Most often, a psalter contained only poetry, but some publications included musical notation. Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages. Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years. The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in Florida.10 Their 1562 version contained a melody (first published in the 1551 edition) that was designed to accompany Psalm 134, “Or sus serviteurs du Seigneur” (“Arise, you servants of the Lord”).11 Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title. However, the tune persisted for centuries. It is now often called the “Protestant Doxology”; its most familiar English text today is “Praise God from Whom All Blessings Flow.” English-speaking congregations wanted psalters in English, of course. One of the most influential was the Sternhold and Hopkins Psalter of 1562 (nicknamed the “Old Psalter”), which was brought to the first English settlement in the Atlantic colonies, established at Jamestown, Virginia, in 1607.12 Thomas Sternhold (1500–49), John Hopkins (d. 1570), and subsequent editors employed seventeen different meters for their 150 rhymed psalms, so only seventeen melodies were needed to accommodate all their translations.13 Notably, the editors “borrowed” the tune of Psalm 134 from the Genevan Psalter, but employed it for their translation of Psalm 100. For this reason, the Doxology tune is still sometimes nicknamed “Old Hundred.”14In the Old Psalter, Sternhold and Hopkins employed Long Meter for Psalm 100, but they used Common Meter for the Twenty-Third Psalm, similar to the meter of Figure 2-1b. Their rhyming translation of Psalm 23 was quite different, however: My shepehard is the living Lorde, nothing therefore I nead [need]; In pastors [pastures] fayre [fair], with waters calme he set me for to fead [feed]. He did convert and glad my soule, and brought my minde in frame: To walke in pathes of rightuousnes, for his most holy'
ERROR:root:orig input: 'Psalters from Overseas Many people who retranslated the psalms published their efforts in books known as psalters. Most often, a psalter contained only poetry, but some publications included musical notation. Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages. Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years. The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in Florida.10 Their 1562 version contained a melody (first published in the 1551 edition) that was designed to accompany Psalm 134, “Or sus serviteurs du Seigneur” (“Arise, you servants of the Lord”).11 Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title. However, the tune persisted for centuries. It is now often called the “Protestant Doxology”; its most familiar English text today is “Praise God from Whom All Blessings Flow.” English-speaking congregations wanted psalters in English, of course. One of the most influential was the Sternhold and Hopkins Psalter of 1562 (nicknamed the “Old Psalter”), which was brought to the first English settlement in the Atlantic colonies, established at Jamestown, Virginia, in 1607.12 Thomas Sternhold (1500–49), John Hopkins (d. 1570), and subsequent editors employed seventeen different meters for their 150 rhymed psalms, so only seventeen melodies were needed to accommodate all their translations.13 Notably, the editors “borrowed” the tune of Psalm 134 from the Genevan Psalter, but employed it for their translation of Psalm 100. For this reason, the Doxology tune is still sometimes nicknamed “Old Hundred.”14In the Old Psalter, Sternhold and Hopkins employed Long Meter for Psalm 100, but they used Common Meter for the Twenty-Third Psalm, similar to the meter of Figure 2-1b. Their rhyming translation of Psalm 23 was quite different, however: My shepehard is the living Lorde, nothing therefore I nead [need]; In pastors [pastures] fayre [fair], with waters calme he set me for to fead [feed]. He did convert and glad my soule, and brought my minde in frame: To walke in pathes of rightuousnes, for his most holy '
ERROR:root:orig selected_specific len[[["One of the most influential was the Sternhold and Hopkins Psalter of 1562 (nicknamed the “Old Psalter”), which was brought to the first English settlement in the Atlantic colonies, established at Jamestown, Virginia, in 1607.12 Thomas Sternhold (1500–49), John Hopkins (d. 1570), and subsequent editors employed seventeen different meters for their 150 rhymed psalms, so only seventeen melodies were needed to accommodate all their translations.13",{},11],["the Old Psalter, Sternhold and Hopkins employed Long Meter for Psalm 100, but they used Common Meter for the Twenty-Third Psalm, similar to the meter of Figure 2-1b.",{},15],["My shepehard is the living Lorde, nothing therefore I nead [need]; In pastors [pastures] fayre [fair], with waters calme he set me for to fead [feed].",{},17],["Their 1562 version contained a melody (first published in the 1551 edition) that was designed to accompany Psalm 134, “Or sus serviteurs du Seigneur” (“Arise, you servants of the Lord”).11",{},6],["The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in",{},4],["Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years.",{},3],["He did convert and glad my soule, and brought my minde in frame: To walke in pathes of rightuousnes, for his most holy",{},18],["Notably, the editors “borrowed” the tune of Psalm 134 from the Genevan Psalter, but employed it for their translation of Psalm 100.",{},12],["It is now often called the “Protestant Doxology”; its most familiar English text today is “Praise God from Whom All Blessings Flow.”",{},9],["Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages.",{},2],["Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title.",{},7]],["Psalters from Overseas Many people who retranslated the psalms published their efforts in books known as psalters.","Most often, a psalter contained only poetry, but some publications included musical notation.","Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages.","Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years.","The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in Florida.10","The ill-fated Huguenots's 1562 version contained a melody (first published in the 1551 edition) that was designed to accompany Psalm 134, “Or sus serviteurs du Seigneur” (“Arise, you servants of the Lord”).11","Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title.","However, the tune persisted for centuries.","the tune is now often called the “Protestant Doxology”; the tune's most familiar English text today is “Praise God from Whom All Blessings Flow.”","English-speaking congregations wanted psalters in English, of course.","One of the most influential was the Sternhold and Hopkins Psalter of 1562 (nicknamed the “Old Psalter”), which was brought to the first English settlement in the Atlantic colonies, established at Jamestown, Virginia, in 1607.12 Thomas Sternhold (1500–49), John Hopkins (d. 1570), and subsequent editors employed seventeen different meters for their 150 rhymed psalms, so only seventeen melodies were needed to accommodate all their translations.13","Notably, the editors “borrowed” the tune of Psalm 134 from the Genevan Psalter, but employed it for their translation of Psalm 100.","For this reason, the Doxology tune is still sometimes nicknamed “Old Hundred.","”14In","the Old Psalter, Sternhold and Hopkins employed Long Meter for Psalm 100, but they used Common Meter for the Twenty-Third Psalm, similar to the meter of Figure 2-1b.","the Old Psalter, Sternhold and Hopkins's rhyming translation of Psalm 23 was quite different, however: My shepehard is the living Lorde, nothing therefore I nead [need]; In pastors [pastures] fayre [fair], with waters calme he set me for to fead [feed].","waters calme did convert and glad my soule, and brought my minde in frame: To walke in pathes of rightuousnes, for waters calme's most holy"]]
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 844, in new
    assert item[2]<len(coref_sents)
AssertionError
ERROR:root:api_check 0:00:00.349386
ERROR:root:payload: 'melody that would “fit” a particular meter would also fit any other text that used that same meter. Therefore, even though there are 150 psalms in the Bible, congregations would need to learn only a handful of tunes to accommodate the various metric strategies. Those tunes would become very familiar, and thus the congregation could sing them from memory and could remain focused on the Biblical message of the words. We follow a similar process with young children: they learn to sing the alphabet to the tune of “Twinkle, Twinkle, Little Star.” The familiar melody allows them to concentrate on the letters they are learning. Psalters from Overseas Many people who retranslated the psalms published their efforts in books known as psalters. Most often, a psalter contained only poetry, but some publications included musical notation. Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages. Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years. The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in Florida.10 Their 1562 version contained a melody (first published in the 1551 edition) that was designed to accompany Psalm 134, “Or sus serviteurs du Seigneur” (“Arise, you servants of the Lord”).11 Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title. However, the tune persisted for centuries. It is now often called the “Protestant Doxology”; its most familiar English text today is “Praise God from Whom All Blessings Flow.” English-speaking congregations wanted psalters in English, of course. One of the most influential was the Sternhold and Hopkins Psalter of 1562 (nicknamed the “Old Psalter”), which was brought to the first English settlement in the Atlantic colonies, established at Jamestown, Virginia, in 1607.12 Thomas Sternhold (1500–49), John Hopkins (d. 1570), and subsequent editors employed seventeen different meters for their 150 rhymed psalms, so only seventeen melodies were needed to accommodate all their translations.13 Notably, the editors “borrowed” the tune of Psalm 134 from the Genevan Psalter, but employed it for their translation of Psalm 100. For this reason, the Doxology tune is still sometimes nicknamed “Old Hundred.”1'
ERROR:root:orig input: 'melody that would “fit” a particular meter would also fit any other text that used that same meter. Therefore, even though there are 150 psalms in the Bible, congregations would need to learn only a handful of tunes to accommodate the various metric strategies. Those tunes would become very familiar, and thus the congregation could sing them from memory and could remain focused on the Biblical message of the words. We follow a similar process with young children: they learn to sing the alphabet to the tune of “Twinkle, Twinkle, Little Star.” The familiar melody allows them to concentrate on the letters they are learning. Psalters from Overseas Many people who retranslated the psalms published their efforts in books known as psalters. Most often, a psalter contained only poetry, but some publications included musical notation. Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages. Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years. The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in Florida.10 Their 1562 version contained a melody (first published in the 1551 edition) that was designed to accompany Psalm 134, “Or sus serviteurs du Seigneur” (“Arise, you servants of the Lord”).11 Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title. However, the tune persisted for centuries. It is now often called the “Protestant Doxology”; its most familiar English text today is “Praise God from Whom All Blessings Flow.” English-speaking congregations wanted psalters in English, of course. One of the most influential was the Sternhold and Hopkins Psalter of 1562 (nicknamed the “Old Psalter”), which was brought to the first English settlement in the Atlantic colonies, established at Jamestown, Virginia, in 1607.12 Thomas Sternhold (1500–49), John Hopkins (d. 1570), and subsequent editors employed seventeen different meters for their 150 rhymed psalms, so only seventeen melodies were needed to accommodate all their translations.13 Notably, the editors “borrowed” the tune of Psalm 134 from the Genevan Psalter, but employed it for their translation of Psalm 100. For this reason, the Doxology tune is still sometimes nicknamed “Old Hundred.”1'
ERROR:root:orig selected_specific len[[["One of the most influential was the Sternhold and Hopkins Psalter of 1562 (nicknamed the “Old Psalter”), which was brought to the first English settlement in the Atlantic colonies, established at Jamestown, Virginia, in 1607.12 Thomas Sternhold (1500–49), John Hopkins (d. 1570), and subsequent editors employed seventeen different meters for their 150 rhymed psalms, so only seventeen melodies were needed to accommodate all their translations.13",{},16],["Their 1562 version contained a melody (first published in the 1551 edition) that was designed to accompany Psalm 134, “Or sus serviteurs du Seigneur” (“Arise, you servants of the Lord”).11",{},11],["The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in",{},9],["We follow a similar process with young children: they learn to sing the alphabet to the tune of “Twinkle, Twinkle, Little Star.”",{},3],["Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years.",{},8],["Notably, the editors “borrowed” the tune of Psalm 134 from the Genevan Psalter, but employed it for their translation of Psalm 100.",{},17],["It is now often called the “Protestant Doxology”; its most familiar English text today is “Praise God from Whom All Blessings Flow.”",{},14],["Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages.",{},7],["Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title.",{},12]],["melody that would “fit” a particular meter would also fit any other text that used that same meter.","Therefore, even though there are 150 psalms in the Bible, congregations would need to learn only a handful of tunes to accommodate the various metric strategies.","Those tunes would become very familiar, and thus the congregation could sing them from memory and could remain focused on the Biblical message of the words.","We follow a similar process with young children: they learn to sing the alphabet to the tune of “Twinkle, Twinkle, Little Star.”","The familiar melody allows young children to concentrate on the letters young children are learning.","Psalters from Overseas Many people who retranslated the psalms published their efforts in books known as psalters.","Most often, a psalter contained only poetry, but some publications included musical notation.","Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages.","Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years.","The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in Florida.10","The ill-fated Huguenots's 1562 version contained a melody (first published in the 1551 edition) that was designed to accompany Psalm 134, “Or sus serviteurs du Seigneur” (“Arise, you servants of the Lord”).11","Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title.","However, the tune persisted for centuries.","the tune is now often called the “Protestant Doxology”; the tune's most familiar English text today is “Praise God from Whom All Blessings Flow.”","English-speaking congregations wanted psalters in English, of course.","One of the most influential was the Sternhold and Hopkins Psalter of 1562 (nicknamed the “Old Psalter”), which was brought to the first English settlement in the Atlantic colonies, established at Jamestown, Virginia, in 1607.12 Thomas Sternhold (1500–49), John Hopkins (d. 1570), and subsequent editors employed seventeen different meters for their 150 rhymed psalms, so only seventeen melodies were needed to accommodate all their translations.13","Notably, the editors “borrowed” the tune of Psalm 134 from the Genevan Psalter, but employed subsequent editors for their translation of Psalm 100.","For this reason, the Doxology tune is still sometimes nicknamed “Old Hundred.”1"]]
ERROR:root:orig selected_specific len9
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents9
ERROR:app:Exception on /query/new [POST]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 900, in new
    mcq_output = [call.result() for call in mcq_request]
  File "/datadrive/qgv1/text_prod/app.py", line 900, in <listcomp>
    mcq_output = [call.result() for call in mcq_request]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 94, in query
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.325194
ERROR:root:payload: 'melody that would “fit” a particular meter would also fit any other text that used that same meter. Therefore, even though there are 150 psalms in the Bible, congregations would need to learn only a handful of tunes to accommodate the various metric strategies. Those tunes would become very familiar, and thus the congregation could sing them from memory and could remain focused on the Biblical message of the words. We follow a similar process with young children: they learn to sing the alphabet to the tune of “Twinkle, Twinkle, Little Star.” The familiar melody allows them to concentrate on the letters they are learning. Psalters from Overseas Many people who retranslated the psalms published their efforts in books known as psalters. Most often, a psalter contained only poetry, but some publications included musical notation. Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages. Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years. The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in Florida.10 Their 1562 version contained a melody (first published in the 1551 edition) that was designed to accompany Psalm 134, “Or sus serviteurs du Seigneur” (“Arise, you servants of the Lord”).11 Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title. However, the tune persisted for centuries. It is now often called the “Protestant Doxology”; its most familiar English text today is “Praise God from Whom All Blessings Flow.” English-speaking congregations wanted psalters in English, of course. One of the most influential was the Sternhold and Hopkins Psalter of 1562 (nicknamed the “Old Psalter”), which was brought to the first English settlement in the Atlantic colonies, established at Jamestown, Virginia, in 1607.12 Thomas Sternhold (1500–49), John Hopkins (d. 1570), and subsequent editors employed seventeen different meters for their 150 rhymed psalms, so only seventeen melodies were needed to accommodate all their translations.13 Notably, the editors “borrowed” the tune of Psalm 134 from the Genevan Psalter, but employed it for their translation of Psalm 100. For this reason, the Doxology tune is still sometimes nicknamed “Old Hundred.”1'
ERROR:root:orig input: 'melody that would “fit” a particular meter would also fit any other text that used that same meter. Therefore, even though there are 150 psalms in the Bible, congregations would need to learn only a handful of tunes to accommodate the various metric strategies. Those tunes would become very familiar, and thus the congregation could sing them from memory and could remain focused on the Biblical message of the words. We follow a similar process with young children: they learn to sing the alphabet to the tune of “Twinkle, Twinkle, Little Star.” The familiar melody allows them to concentrate on the letters they are learning. Psalters from Overseas Many people who retranslated the psalms published their efforts in books known as psalters. Most often, a psalter contained only poetry, but some publications included musical notation. Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages. Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years. The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in Florida.10 Their 1562 version contained a melody (first published in the 1551 edition) that was designed to accompany Psalm 134, “Or sus serviteurs du Seigneur” (“Arise, you servants of the Lord”).11 Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title. However, the tune persisted for centuries. It is now often called the “Protestant Doxology”; its most familiar English text today is “Praise God from Whom All Blessings Flow.” English-speaking congregations wanted psalters in English, of course. One of the most influential was the Sternhold and Hopkins Psalter of 1562 (nicknamed the “Old Psalter”), which was brought to the first English settlement in the Atlantic colonies, established at Jamestown, Virginia, in 1607.12 Thomas Sternhold (1500–49), John Hopkins (d. 1570), and subsequent editors employed seventeen different meters for their 150 rhymed psalms, so only seventeen melodies were needed to accommodate all their translations.13 Notably, the editors “borrowed” the tune of Psalm 134 from the Genevan Psalter, but employed it for their translation of Psalm 100. For this reason, the Doxology tune is still sometimes nicknamed “Old Hundred.”1'
ERROR:root:orig selected_specific len[[["One of the most influential was the Sternhold and Hopkins Psalter of 1562 (nicknamed the “Old Psalter”), which was brought to the first English settlement in the Atlantic colonies, established at Jamestown, Virginia, in 1607.12 Thomas Sternhold (1500–49), John Hopkins (d. 1570), and subsequent editors employed seventeen different meters for their 150 rhymed psalms, so only seventeen melodies were needed to accommodate all their translations.13",{},16],["Their 1562 version contained a melody (first published in the 1551 edition) that was designed to accompany Psalm 134, “Or sus serviteurs du Seigneur” (“Arise, you servants of the Lord”).11",{},11],["The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in",{},9],["We follow a similar process with young children: they learn to sing the alphabet to the tune of “Twinkle, Twinkle, Little Star.”",{},3],["Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years.",{},8],["Notably, the editors “borrowed” the tune of Psalm 134 from the Genevan Psalter, but employed it for their translation of Psalm 100.",{},17],["It is now often called the “Protestant Doxology”; its most familiar English text today is “Praise God from Whom All Blessings Flow.”",{},14],["Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages.",{},7],["Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title.",{},12]],["melody that would “fit” a particular meter would also fit any other text that used that same meter.","Therefore, even though there are 150 psalms in the Bible, congregations would need to learn only a handful of tunes to accommodate the various metric strategies.","Those tunes would become very familiar, and thus the congregation could sing them from memory and could remain focused on the Biblical message of the words.","We follow a similar process with young children: they learn to sing the alphabet to the tune of “Twinkle, Twinkle, Little Star.”","The familiar melody allows young children to concentrate on the letters young children are learning.","Psalters from Overseas Many people who retranslated the psalms published their efforts in books known as psalters.","Most often, a psalter contained only poetry, but some publications included musical notation.","Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages.","Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years.","The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in Florida.10","The ill-fated Huguenots's 1562 version contained a melody (first published in the 1551 edition) that was designed to accompany Psalm 134, “Or sus serviteurs du Seigneur” (“Arise, you servants of the Lord”).11","Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title.","However, the tune persisted for centuries.","the tune is now often called the “Protestant Doxology”; the tune's most familiar English text today is “Praise God from Whom All Blessings Flow.”","English-speaking congregations wanted psalters in English, of course.","One of the most influential was the Sternhold and Hopkins Psalter of 1562 (nicknamed the “Old Psalter”), which was brought to the first English settlement in the Atlantic colonies, established at Jamestown, Virginia, in 1607.12 Thomas Sternhold (1500–49), John Hopkins (d. 1570), and subsequent editors employed seventeen different meters for their 150 rhymed psalms, so only seventeen melodies were needed to accommodate all their translations.13","Notably, the editors “borrowed” the tune of Psalm 134 from the Genevan Psalter, but employed subsequent editors for their translation of Psalm 100.","For this reason, the Doxology tune is still sometimes nicknamed “Old Hundred.”1"]]
ERROR:root:orig selected_specific len9
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents9
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years. The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in', 'Those tunes would become very familiar, and thus the congregation could sing them from memory and could remain focused on the Biblical message of the words. We follow a similar process with young children: they learn to sing the alphabet to the tune of “Twinkle, Twinkle, Little Star.”', 'Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages. Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years.', "the tune is now often called the “Protestant Doxology”; the tune's most familiar English text today is “Praise God from Whom All Blessings Flow.” It is now often called the “Protestant Doxology”; its most familiar English text today is “Praise God from Whom All Blessings Flow.”", 'Most often, a psalter contained only poetry, but some publications included musical notation. Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages.', 'Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title. Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title.']), ('questions', ['Who brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in Switzerland?', 'What is the alphabet to the tune of?', 'When was the Genevan Psalter created?', "What is the song's English version called?", 'What appeared in many languages?', 'What is the only other denomination you can probably not recognize the title of a Calvinist?']), ('answers', ['Huguenots', 'Twinkle, Twinkle, Little Star', '1539', 'Protestant Doxology', 'psalters', 'a member of a French-speaking Calvinist denomination']), ('options', [['Anabaptists', 'Cathars', 'Waldensians'], ['The ABC Song', 'Little Miss Muffet', 'Mary Had a Little Lamb'], ['1642', '1453', '1592'], ['Catholic Hymn', 'Amish Psalm', 'Praise Doxology'], ['magazines', 'newspapers', 'dictionaries'], ['a member of a Dutch-speaking Calvinist denomination', 'a member of a Swiss-speaking Calvinist denomination', 'a member of a German-speaking Calvinist denomination']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:09.767758
ERROR:root:api_check 0:00:00.339290
ERROR:root:payload: 'melody that would “fit” a particular meter would also fit any other text that used that same meter. Therefore, even though there are 150 psalms in the Bible, congregations would need to learn only a handful of tunes to accommodate the various metric strategies. Those tunes would become very familiar, and thus the congregation could sing them from memory and could remain focused on the Biblical message of the words. We follow a similar process with young children: they learn to sing the alphabet to the tune of “Twinkle, Twinkle, Little Star.” The familiar melody allows them to concentrate on the letters they are learning. Psalters from Overseas Many people who retranslated the psalms published their efforts in books known as psalters. Most often, a psalter contained only poetry, but some publications included musical notation. Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages. Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years. The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in Florida.10 Their 1562 version contained a melody (first published in the 1551 edition) that was designed to accompany Psalm 134, “Or sus serviteurs du Seigneur” (“Arise, you servants of the Lord”).11 Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title. However, the tune persisted for centuries. It is now often called the “Protestant Doxology”; its most familiar English text today is “Praise God from Whom All Blessings Flow.” English-speaking congregations wanted psalters in English, of course. One of the most influential was the Sternhold and Hopkins Psalter of 1562 (nicknamed the “Old Psalter”), which was brought to the first English settlement in the Atlantic colonies, established at Jamestown, Virginia, in 1607.12 Thomas Sternhold (1500–49), John Hopkins (d. 1570), and subsequent editors employed seventeen different meters for their 150 rhymed psalms, so only seventeen melodies were needed to accommodate all their translations.13 Notably, the editors “borrowed” the tune of Psalm 134 from the Genevan Psalter, but employed it for their translation of Psalm 100. For this reason, the Doxology tune is still sometimes nicknamed “Old Hundred.”1'
ERROR:root:orig input: 'melody that would “fit” a particular meter would also fit any other text that used that same meter. Therefore, even though there are 150 psalms in the Bible, congregations would need to learn only a handful of tunes to accommodate the various metric strategies. Those tunes would become very familiar, and thus the congregation could sing them from memory and could remain focused on the Biblical message of the words. We follow a similar process with young children: they learn to sing the alphabet to the tune of “Twinkle, Twinkle, Little Star.” The familiar melody allows them to concentrate on the letters they are learning. Psalters from Overseas Many people who retranslated the psalms published their efforts in books known as psalters. Most often, a psalter contained only poetry, but some publications included musical notation. Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages. Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years. The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in Florida.10 Their 1562 version contained a melody (first published in the 1551 edition) that was designed to accompany Psalm 134, “Or sus serviteurs du Seigneur” (“Arise, you servants of the Lord”).11 Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title. However, the tune persisted for centuries. It is now often called the “Protestant Doxology”; its most familiar English text today is “Praise God from Whom All Blessings Flow.” English-speaking congregations wanted psalters in English, of course. One of the most influential was the Sternhold and Hopkins Psalter of 1562 (nicknamed the “Old Psalter”), which was brought to the first English settlement in the Atlantic colonies, established at Jamestown, Virginia, in 1607.12 Thomas Sternhold (1500–49), John Hopkins (d. 1570), and subsequent editors employed seventeen different meters for their 150 rhymed psalms, so only seventeen melodies were needed to accommodate all their translations.13 Notably, the editors “borrowed” the tune of Psalm 134 from the Genevan Psalter, but employed it for their translation of Psalm 100. For this reason, the Doxology tune is still sometimes nicknamed “Old Hundred.”1'
ERROR:root:orig selected_specific len[[["One of the most influential was the Sternhold and Hopkins Psalter of 1562 (nicknamed the “Old Psalter”), which was brought to the first English settlement in the Atlantic colonies, established at Jamestown, Virginia, in 1607.12 Thomas Sternhold (1500–49), John Hopkins (d. 1570), and subsequent editors employed seventeen different meters for their 150 rhymed psalms, so only seventeen melodies were needed to accommodate all their translations.13",{},16],["Their 1562 version contained a melody (first published in the 1551 edition) that was designed to accompany Psalm 134, “Or sus serviteurs du Seigneur” (“Arise, you servants of the Lord”).11",{},11],["The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in",{},9],["We follow a similar process with young children: they learn to sing the alphabet to the tune of “Twinkle, Twinkle, Little Star.”",{},3],["Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years.",{},8],["Notably, the editors “borrowed” the tune of Psalm 134 from the Genevan Psalter, but employed it for their translation of Psalm 100.",{},17],["It is now often called the “Protestant Doxology”; its most familiar English text today is “Praise God from Whom All Blessings Flow.”",{},14],["Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages.",{},7],["Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title.",{},12]],["melody that would “fit” a particular meter would also fit any other text that used that same meter.","Therefore, even though there are 150 psalms in the Bible, congregations would need to learn only a handful of tunes to accommodate the various metric strategies.","Those tunes would become very familiar, and thus the congregation could sing them from memory and could remain focused on the Biblical message of the words.","We follow a similar process with young children: they learn to sing the alphabet to the tune of “Twinkle, Twinkle, Little Star.”","The familiar melody allows young children to concentrate on the letters young children are learning.","Psalters from Overseas Many people who retranslated the psalms published their efforts in books known as psalters.","Most often, a psalter contained only poetry, but some publications included musical notation.","Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages.","Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years.","The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in Florida.10","The ill-fated Huguenots's 1562 version contained a melody (first published in the 1551 edition) that was designed to accompany Psalm 134, “Or sus serviteurs du Seigneur” (“Arise, you servants of the Lord”).11","Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title.","However, the tune persisted for centuries.","the tune is now often called the “Protestant Doxology”; the tune's most familiar English text today is “Praise God from Whom All Blessings Flow.”","English-speaking congregations wanted psalters in English, of course.","One of the most influential was the Sternhold and Hopkins Psalter of 1562 (nicknamed the “Old Psalter”), which was brought to the first English settlement in the Atlantic colonies, established at Jamestown, Virginia, in 1607.12 Thomas Sternhold (1500–49), John Hopkins (d. 1570), and subsequent editors employed seventeen different meters for their 150 rhymed psalms, so only seventeen melodies were needed to accommodate all their translations.13","Notably, the editors “borrowed” the tune of Psalm 134 from the Genevan Psalter, but employed subsequent editors for their translation of Psalm 100.","For this reason, the Doxology tune is still sometimes nicknamed “Old Hundred.”1"]]
ERROR:root:orig selected_specific len9
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents9
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years. The ill-fated Huguenots brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in', 'Those tunes would become very familiar, and thus the congregation could sing them from memory and could remain focused on the Biblical message of the words. We follow a similar process with young children: they learn to sing the alphabet to the tune of “Twinkle, Twinkle, Little Star.”', 'Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages. Calvin himself oversaw the creation of the “Genevan Psalter” in 1539, a French version published in Switzerland that underwent numerous revisions in the following years.', "the tune is now often called the “Protestant Doxology”; the tune's most familiar English text today is “Praise God from Whom All Blessings Flow.” It is now often called the “Protestant Doxology”; its most familiar English text today is “Praise God from Whom All Blessings Flow.”", 'Most often, a psalter contained only poetry, but some publications included musical notation. Since Jean Calvin wanted congregations to sing in their native tongue, psalters appeared in many languages.', 'Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title. Unless you are a member of a French-speaking Calvinist denomination, you probably don’t recognize that title.']), ('questions', ['Who brought the 1562 edition of the Genevan Psalter with them when they attempted to settle in Switzerland?', 'What is the alphabet to the tune of?', 'When was the Genevan Psalter created?', "What is the song's English version called?", 'What appeared in many languages?', 'What is the only other denomination you can probably not recognize the title of a Calvinist?']), ('answers', ['Huguenots', 'Twinkle, Twinkle, Little Star', '1539', 'Protestant Doxology', 'psalters', 'a member of a French-speaking Calvinist denomination']), ('options', [['Anabaptists', 'Cathars', 'Waldensians'], ['The ABC Song', 'Little Miss Muffet', 'Mary Had a Little Lamb'], ['1642', '1453', '1592'], ['Catholic Hymn', 'Amish Psalm', 'Praise Doxology'], ['magazines', 'newspapers', 'dictionaries'], ['a member of a Dutch-speaking Calvinist denomination', 'a member of a Swiss-speaking Calvinist denomination', 'a member of a German-speaking Calvinist denomination']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:11.582837
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.358975
ERROR:root:payload: 'ssdadadajgchgchthhfxhxhxfhxxhxhh'
ERROR:root:orig input: 'ssdadadajgchgchthhfxhxhxfhxxhxhh'
ERROR:root:orig selected_specific len[[["ssdadadajgchgchthhfxhxhxfhxxhxhh",{},0]],["ssdadadajgchgchthhfxhxhxfhxxhxhh"]]
ERROR:root:orig selected_specific len1
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:05.246912
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.347299
ERROR:root:payload: 'The dog (Canis familiaris or Canis lupus familiaris) is a domesticated descendant of the wolf. Also called the domestic dog, it is derived from the extinct Pleistocene wolf, and the modern wolf is the dog\'s nearest living relative. The dog was the first species to be domesticated, by hunter-gatherers over 15,000 years ago, before the development of agriculture. Due to their long association with humans, dogs have expanded to a large number of domestic individuals and gained the ability to thrive on a starch-rich diet that would be inadequate for other canids.\n\nThe dog has been selectively bred over millennia for various behaviors, sensory capabilities, and physical attributes. Dog breeds vary widely in shape, size, and color. They perform many roles for humans, such as hunting, herding, pulling loads, protection, assisting police and the military, companionship, therapy, and aiding disabled people. Over the millennia, dogs became uniquely adapted to human behavior, and the human-canine bond has been a topic of frequent study. This influence on human society has given them the sobriquet of "man\'s best friend".'
ERROR:root:orig input: 'The dog (Canis familiaris or Canis lupus familiaris) is a domesticated descendant of the wolf. Also called the domestic dog, it is derived from the extinct Pleistocene wolf, and the modern wolf is the dog\'s nearest living relative. The dog was the first species to be domesticated, by hunter-gatherers over 15,000 years ago, before the development of agriculture. Due to their long association with humans, dogs have expanded to a large number of domestic individuals and gained the ability to thrive on a starch-rich diet that would be inadequate for other canids.\r\n\r\nThe dog has been selectively bred over millennia for various behaviors, sensory capabilities, and physical attributes. Dog breeds vary widely in shape, size, and color. They perform many roles for humans, such as hunting, herding, pulling loads, protection, assisting police and the military, companionship, therapy, and aiding disabled people. Over the millennia, dogs became uniquely adapted to human behavior, and the human-canine bond has been a topic of frequent study. This influence on human society has given them the sobriquet of "man\'s best friend".'
ERROR:root:orig selected_specific len[[["The dog was the first species to be domesticated, by hunter-gatherers over 15,000 years ago, before the development of agriculture.",{},2],["Also called the domestic dog, it is derived from the extinct Pleistocene wolf, and the modern wolf is the dog's nearest living relative.",{},1],["The dog (Canis familiaris or Canis lupus familiaris) is a domesticated descendant of the wolf.",{},0],["Due to their long association with humans, dogs have expanded to a large number of domestic individuals and gained the ability to thrive on a starch-rich diet that would be inadequate for other canids.",{},3],["They perform many roles for humans, such as hunting, herding, pulling loads, protection, assisting police and the military, companionship, therapy, and aiding disabled people.",{},6],["The dog has been selectively bred over millennia for various behaviors, sensory capabilities, and physical attributes.",{},4],["Over the millennia, dogs became uniquely adapted to human behavior, and the human-canine bond has been a topic of frequent study.",{},7]],["The dog (Canis familiaris or Canis lupus familiaris) is a domesticated descendant of the wolf.","Also called the domestic dog, The dog (Canis familiaris or Canis lupus familiaris) is derived from the extinct Pleistocene wolf, and the modern wolf is the dog's nearest living relative.","The dog was the first species to be domesticated, by hunter-gatherers over 15,000 years ago, before the development of agriculture.","Due to the first species to be domesticated, by hunter-gatherers over 15,000 years ago's long association with humans, dogs have expanded to a large number of domestic individuals and gained the ability to thrive on a starch-rich diet that would be inadequate for other canids.","The dog has been selectively bred over millennia for various behaviors, sensory capabilities, and physical attributes.","Dog breeds vary widely in shape, size, and color.","Dog breeds perform many roles for humans, such as hunting, herding, pulling loads, protection, assisting police and the military, companionship, therapy, and aiding disabled people.","Over the millennia, dogs became uniquely adapted to human behavior, and the human-canine bond has been a topic of frequent study.","This influence on human society has given them the sobriquet of \"man's best friend\"."]]
ERROR:root:orig selected_specific len7
ERROR:root:offsetting TF
ERROR:root:doing tfOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:0:00:00.001547
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents4
ERROR:root:total before 0:00:01.559246
ERROR:root:doing fbOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:fitb timer0:00:00.001741
ERROR:root:output sents fb [{'Multiple Choice': {'questions': []}}]
ERROR:root:doing tf2OrderedDict([('Multiple Choice', OrderedDict([('context', ["Also called the domestic dog, The dog (Canis familiaris or Canis lupus familiaris) is derived from the extinct Pleistocene wolf, and the modern wolf is the dog's nearest living relative. The dog was the first species to be domesticated, by hunter-gatherers over 15,000 years ago, before the development of agriculture.", "The dog (Canis familiaris or Canis lupus familiaris) is a domesticated descendant of the wolf. Also called the domestic dog, it is derived from the extinct Pleistocene wolf, and the modern wolf is the dog's nearest living relative.", ' The dog (Canis familiaris or Canis lupus familiaris) is a domesticated descendant of the wolf.', 'The dog was the first species to be domesticated, by hunter-gatherers over 15,000 years ago, before the development of agriculture. Due to their long association with humans, dogs have expanded to a large number of domestic individuals and gained the ability to thrive on a starch-rich diet that would be inadequate for other canids.']), ('questions', ['Who was the first species to be domesticated?', 'What is the domestic dog derived from?', 'What is the canine?', 'What is the diet that dogs can thrive on?']), ('answers', ['hunter-gatherers', 'Pleistocene wolf', 'domesticated descendant of the wolf', 'starch-rich diet']), ('options', [['pigs', 'sheep', 'cattle'], ['Neanderthal', 'African hunting dog', 'Canis lupus'], ['feral dog', 'domesticated descendant of the dog', 'wild dog'], ['vegetarian diet', 'protein-rich diet', 'meat-based diet']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ["Also called the domestic dog, The dog (Canis familiaris or Canis lupus familiaris) is derived from the extinct Pleistocene wolf, and the modern wolf is the dog's nearest living relative. The dog was the first species to be domesticated, by hunter-gatherers over 15,000 years ago, before the development of agriculture.", "The dog (Canis familiaris or Canis lupus familiaris) is a domesticated descendant of the wolf. Also called the domestic dog, it is derived from the extinct Pleistocene wolf, and the modern wolf is the dog's nearest living relative.", ' The dog (Canis familiaris or Canis lupus familiaris) is a domesticated descendant of the wolf.', 'The dog was the first species to be domesticated, by hunter-gatherers over 15,000 years ago, before the development of agriculture. Due to their long association with humans, dogs have expanded to a large number of domestic individuals and gained the ability to thrive on a starch-rich diet that would be inadequate for other canids.']), ('questions', ['Who was the first species to be domesticated?', 'What is the domestic dog derived from?', 'What is the canine?', 'What is the diet that dogs can thrive on?']), ('answers', ['hunter-gatherers', 'Pleistocene wolf', 'domesticated descendant of the wolf', 'starch-rich diet']), ('options', [['pigs', 'sheep', 'cattle'], ['Neanderthal', 'African hunting dog', 'Canis lupus'], ['feral dog', 'domesticated descendant of the dog', 'wild dog'], ['vegetarian diet', 'protein-rich diet', 'meat-based diet']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:07.989409
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
ERROR:root:api_check 0:00:00.336274
ERROR:root:payload: 'From around 4000 bce, the Sumerians in Mesopotamia created impressive sculptures and buildings. Religion was a central aspect of Sumerian life, and the Sumerians built massive temples at the centers of their cities. Less complex platform structures evolved over time into the stepped pyramids called ziggurats. Around 2334 bce, the cities of Sumer came under the rule of Sargon of Akkad. Although the Akkadians spoke a different language from the Sumerians, they assimilated Sumerian culture. With the Akkadian dynasty, loyalty to the city-state was supplanted by loyalty to the king, and consequently the art of this period tends to reflect an emphasis on the monarchy, with Akkadian rulers depicted in freestanding and relief sculptures. Around 2150 bce, Akkadian rule came to an end as the Guti, barbarous mountaineers, invaded and took control. About fifty years later, however, the cities of Sumer were able to reassert control, and a Neo-Sumerian ruler was established as the King of Ur. Perhaps the greatest known works of this era were the ziggurats that were built at the city centers. The ziggurats functioned primarily as temples but also served as administrative and economic centers. The next important civilization in Mesopotamia was that of the Babylonians. For centuries Mesopotamia had witnessed the coexistence of several independent citystates, but around 1792 bce, Hammurabi, king of the city-state of Babylonia, was able to centralize power. Hammurabi left an enduring legacy in that he codified Babylonian law—the Code of Hammurabi is the oldest legal code known in its entirety. The best- known artwork from this period, preserved in the Louvre Museum, is related to this code of law; it is a stone stele onto which Hammurabi’s code is carved with a sculpture in high relief at the top that depicts Hammurabi receiving inspiration for his code of la'
ERROR:root:orig input: 'From around 4000 bce, the Sumerians in Mesopotamia created impressive sculptures and buildings. Religion was a central aspect of Sumerian life, and the Sumerians built massive temples at the centers of their cities. Less complex platform structures evolved over time into the stepped pyramids called ziggurats. Around 2334 bce, the cities of Sumer came under the rule of Sargon of Akkad. Although the Akkadians spoke a different language from the Sumerians, they assimilated Sumerian culture. With the Akkadian dynasty, loyalty to the city-state was supplanted by loyalty to the king, and consequently the art of this period tends to reflect an emphasis on the monarchy, with Akkadian rulers depicted in freestanding and relief sculptures. Around 2150 bce, Akkadian rule came to an end as the Guti, barbarous mountaineers, invaded and took control. About fifty years later, however, the cities of Sumer were able to reassert control, and a Neo-Sumerian ruler was established as the King of Ur. Perhaps the greatest known works of this era were the ziggurats that were built at the city centers. The ziggurats functioned primarily as temples but also served as administrative and economic centers. The next important civilization in Mesopotamia was that of the Babylonians. For centuries Mesopotamia had witnessed the coexistence of several independent citystates, but around 1792 bce, Hammurabi, king of the city-state of Babylonia, was able to centralize power. Hammurabi left an enduring legacy in that he codified Babylonian law—the Code of Hammurabi is the oldest legal code known in its entirety. The best- known artwork from this period, preserved in the Louvre Museum, is related to this code of law; it is a stone stele onto which Hammurabi’s code is carved with a sculpture in high relief at the top that depicts Hammurabi receiving inspiration for his code of la'
ERROR:root:orig selected_specific len[[["The best- known artwork from this period, preserved in the Louvre Museum, is related to this code of law; it is a stone stele onto which Hammurabi’s code is carved with a sculpture in high relief at the top that depicts Hammurabi receiving inspiration for his code of la",{},13],["Around 2150 bce, Akkadian rule came to an end as the Guti, barbarous mountaineers, invaded and took control.",{},6],["Around 2334 bce, the cities of Sumer came under the rule of Sargon of Akkad.",{},3],["For centuries Mesopotamia had witnessed the coexistence of several independent citystates, but around 1792 bce, Hammurabi, king of the city-state of Babylonia, was able to centralize power.",{},11],["From around 4000 bce, the Sumerians in Mesopotamia created impressive sculptures and buildings.",{},0],["About fifty years later, however, the cities of Sumer were able to reassert control, and a Neo-Sumerian ruler was established as the King of Ur.",{},7],["With the Akkadian dynasty, loyalty to the city-state was supplanted by loyalty to the king, and consequently the art of this period tends to reflect an emphasis on the monarchy, with Akkadian rulers depicted in freestanding and relief sculptures.",{},5],["Religion was a central aspect of Sumerian life, and the Sumerians built massive temples at the centers of their cities.",{},1],["Hammurabi left an enduring legacy in that he codified Babylonian law—the Code of Hammurabi is the oldest legal code known in its entirety.",{},12],["Although the Akkadians spoke a different language from the Sumerians, they assimilated Sumerian culture.",{},4]],["From around 4000 bce, the Sumerians in Mesopotamia created impressive sculptures and buildings.","Religion was a central aspect of Sumerian life, and the Sumerians built massive temples at the centers of their cities.","Less complex platform structures evolved over time into the stepped pyramids called ziggurats.","Around 2334 bce, the cities of Sumer came under the rule of Sargon of Akkad.","Although the Akkadians spoke a different language from the Sumerians, they assimilated Sumerian culture.","With the Akkadian dynasty, loyalty to the city-state was supplanted by loyalty to the king, and consequently the art of this period tends to reflect an emphasis on the monarchy, with Akkadian rulers depicted in freestanding and relief sculptures.","Around 2150 bce, Akkadian rule came to an end as the Guti, barbarous mountaineers, invaded and took control.","About fifty years later, however, the cities of Sumer were able to reassert control, and a Neo-Sumerian ruler was established as the King of Ur.","Perhaps the greatest known works of this era were the ziggurats that were built at the city centers.","The ziggurats functioned primarily as temples but also served as administrative and economic centers.","The next important civilization in Mesopotamia was that of the Babylonians.","For centuries Mesopotamia had witnessed the coexistence of several independent citystates, but around 1792 bce, Hammurabi, king of the city-state of Babylonia, was able to centralize power.","Hammurabi left an enduring legacy in that he codified Babylonian law—the Code of Hammurabi is the oldest legal code known in its entirety.","The best- known artwork from this period, preserved in the Louvre Museum, is related to the Code of Hammurabi; the Code of Hammurabi is a stone stele onto which Hammurabi’s code is carved with a sculpture in high relief at the top that depicts Hammurabi receiving inspiration for his code of la"]]
ERROR:root:orig selected_specific len10
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents10
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['Hammurabi left an enduring legacy in that he codified Babylonian law—the Code of Hammurabi is the oldest legal code known in its entirety. The best- known artwork from this period, preserved in the Louvre Museum, is related to this code of law; it is a stone stele onto which Hammurabi’s code is carved with a sculpture in high relief at the top that depicts Hammurabi receiving inspiration for his code of la', 'With the Akkadian dynasty, loyalty to the city-state was supplanted by loyalty to the king, and consequently the art of this period tends to reflect an emphasis on the monarchy, with Akkadian rulers depicted in freestanding and relief sculptures. Around 2150 bce, Akkadian rule came to an end as the Guti, barbarous mountaineers, invaded and took control.', 'Less complex platform structures evolved over time into the stepped pyramids called ziggurats. Around 2334 bce, the cities of Sumer came under the rule of Sargon of Akkad.', 'The next important civilization in Mesopotamia was that of the Babylonians. For centuries Mesopotamia had witnessed the coexistence of several independent citystates, but around 1792 bce, Hammurabi, king of the city-state of Babylonia, was able to centralize power.', ' From around 4000 bce, the Sumerians in Mesopotamia created impressive sculptures and buildings.', 'Around 2150 bce, Akkadian rule came to an end as the Guti, barbarous mountaineers, invaded and took control. About fifty years later, however, the cities of Sumer were able to reassert control, and a Neo-Sumerian ruler was established as the King of Ur.', 'Although the Akkadians spoke a different language from the Sumerians, they assimilated Sumerian culture. With the Akkadian dynasty, loyalty to the city-state was supplanted by loyalty to the king, and consequently the art of this period tends to reflect an emphasis on the monarchy, with Akkadian rulers depicted in freestanding and relief sculptures.', 'For centuries Mesopotamia had witnessed the coexistence of several independent citystates, but around 1792 bce, Hammurabi, king of the city-state of Babylonia, was able to centralize power. Hammurabi left an enduring legacy in that he codified Babylonian law—the Code of Hammurabi is the oldest legal code known in its entirety.', 'Around 2334 bce, the cities of Sumer came under the rule of Sargon of Akkad. Although the Akkadians spoke a different language from the Sumerians, they assimilated Sumerian culture.']), ('questions', ["Where is the best-known artwork from Hammurabi's time preserved?", 'When did Akkadian rule come to an end?', "In what year did the cities of Sumer come under Sargon's rule?", 'Who was the king of Babylonia in 1792 bce?', 'Around what time did the Sumerians begin creating impressive sculptures and buildings?', 'How long after Akkadian rule did Sumer gain control?', 'Who were depicted in freestanding and relief sculptures?', 'What did Hammurabi codify?', 'Who spoke a different language from the Sumerians?']), ('answers', ['Louvre Museum', 'Around 2150 bce', '2334', 'Hammurabi', '4000 bce', 'fifty years', 'Akkadian rulers', 'Babylonian law', 'Akkadians']), ('options', [['Metropolitan Museum of Art', 'British Museum', 'New York Public Library'], ['With the death of Sargon II', 'Circa 2200 bce', 'With the fall of the Third Dynasty in Egypt'], ['2341', '2346', '2322'], ['Samsuilim', 'Nebuchadnezzar'], ['3000 BCE', '4000 BCE', '3000 bce'], ['one year', 'five hundred years', 'two thousand years'], ['Persians', 'Greeks', 'Egyptian pharaohs'], ['Roman law', 'Egyptian law', 'Greece law'], ['Persians', 'Greeks', 'Egyptians']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:18.163680
ERROR:root:api_check 0:00:00.346815
ERROR:root:payload: 'The first electronic instruments began to appear in the first decades of the twentieth century. The theremin is one of the best known early electronic instruments and is still occasionally used today. When playing this instrument, the performer regulates frequency with one hand and amplitude with the other by disturbing the electrical fields that surround the protruding bars. The next important step in electronic instruments came at the end of World War II. Enormous advances in electronics and radio technology had been made for wartime purposes, but after the war, many state-of-the-art studios were no longer needed for military purposes. Within a few years, scientists and composers began collaborating to make art with the new equipment. Electronically generated sounds and sounds produced by live instruments were recorded on tape, where they could be edited, manipulated, and mechanically recombined to form collages of sound that were “performed” via loudspeaker. This type of composition was first known as musique concrète; the term used is French due to the fact that the first practitioners were based in Paris. The basic techniques of tape music (later followed by more purely electronic music produced on computers) are looping and splicing, both of which permit compositions that cannot be reproduced by a human performer. Rome, Paris, Cologne, and New York City all had famous postwar centers for electronic music. PITCH, RHYTHM, AND HARMONY A single, isolated musical sound has four properties: pitch, duration, volume, and timbre. Pitch Pitch, Frequency, and Octaves Pitch is the highness or lowness of a sound. A Chihuahua has a higher-pitched bark than a St. Bernard; a kitten’s meow is higher-pitched than a tomcat’s yowl. A tuba is pitched lower than a piccolo. When musicians speak of “a pitch,” they are referring to a single tone whose highness or lowness does not change—that is, a sound that consists of a steadily oscillating sound wave, like A-440. If you pluck the A string on a guitar (A-110), find the exact midpoint and press it firmly to the fret board, and then pluck the now-half-as-long string (either side), you will hear the next-higher A. This is because when you halve the length of the string, it naturally vibrates twice as fast (220 Hz), producing a pitch twice as high. The musical term for the distance (or interval) between A and the next higher or next lower A is called an octave. Pitch on a Keyboard A piano keyboard provides an excellent visual aid for understanding pitch and harmony. High-sounding pitches are to the right; low-sounding pitches are'
ERROR:root:orig input: 'The first electronic instruments began to appear in the first decades of the twentieth century. The theremin is one of the best known early electronic instruments and is still occasionally used today. When playing this instrument, the performer regulates frequency with one hand and amplitude with the other by disturbing the electrical fields that surround the protruding bars. The next important step in electronic instruments came at the end of World War II. Enormous advances in electronics and radio technology had been made for wartime purposes, but after the war, many state-of-the-art studios were no longer needed for military purposes. Within a few years, scientists and composers began collaborating to make art with the new equipment. Electronically generated sounds and sounds produced by live instruments were recorded on tape, where they could be edited, manipulated, and mechanically recombined to form collages of sound that were “performed” via loudspeaker. This type of composition was first known as musique concrète; the term used is French due to the fact that the first practitioners were based in Paris. The basic techniques of tape music (later followed by more purely electronic music produced on computers) are looping and splicing, both of which permit compositions that cannot be reproduced by a human performer. Rome, Paris, Cologne, and New York City all had famous postwar centers for electronic music. PITCH, RHYTHM, AND HARMONY A single, isolated musical sound has four properties: pitch, duration, volume, and timbre. Pitch Pitch, Frequency, and Octaves Pitch is the highness or lowness of a sound. A Chihuahua has a higher-pitched bark than a St. Bernard; a kitten’s meow is higher-pitched than a tomcat’s yowl. A tuba is pitched lower than a piccolo. When musicians speak of “a pitch,” they are referring to a single tone whose highness or lowness does not change—that is, a sound that consists of a steadily oscillating sound wave, like A-440. If you pluck the A string on a guitar (A-110), find the exact midpoint and press it firmly to the fret board, and then pluck the now-half-as-long string (either side), you will hear the next-higher A. This is because when you halve the length of the string, it naturally vibrates twice as fast (220 Hz), producing a pitch twice as high. The musical term for the distance (or interval) between A and the next higher or next lower A is called an octave. Pitch on a Keyboard A piano keyboard provides an excellent visual aid for understanding pitch and harmony. High-sounding pitches are to the right; low-sounding pitches are'
ERROR:root:orig selected_specific len[[["If you pluck the A string on a guitar (A-110), find the exact midpoint and press it firmly to the fret board, and then pluck the now-half-as-long string (either side), you will hear the next-higher A.",{},18],["This is because when you halve the length of the string, it naturally vibrates twice as fast (220 Hz), producing a pitch twice as high.",{},19],["When musicians speak of “a pitch,” they are referring to a single tone whose highness or lowness does not change—that is, a sound that consists of a steadily oscillating sound wave, like A-440.",{},17],["A Chihuahua has a higher-pitched bark than a St. Bernard",{},13],["Electronically generated sounds and sounds produced by live instruments were recorded on tape, where they could be edited, manipulated, and mechanically recombined to form collages of sound that were “performed” via loudspeaker.",{},6],["Pitch on a Keyboard A piano keyboard provides an excellent visual aid for understanding pitch and harmony.",{},21],["The basic techniques of tape music (later followed by more purely electronic music produced on computers) are looping and splicing, both of which permit compositions that cannot be reproduced by a human performer.",{},8],["A tuba is pitched lower than a piccolo.",{},16],["When playing this instrument, the performer regulates frequency with one hand and amplitude with the other by disturbing the electrical fields that surround the protruding bars.",{},2],["The musical term for the distance (or interval) between A and the next higher or next lower A is called an octave.",{},20],["This type of composition was first known as musique concrète; the term used is French due to the fact that the first practitioners were based in Paris.",{},7]],["The first electronic instruments began to appear in the first decades of the twentieth century.","The theremin is one of the best known early electronic instruments and is still occasionally used today.","When playing this instrument, the performer regulates frequency with one hand and amplitude with the other by disturbing the electrical fields that surround the protruding bars.","The next important step in electronic instruments came at the end of World War II.","Enormous advances in electronics and radio technology had been made for wartime purposes, but after the war, many state-of-the-art studios were no longer needed for military purposes.","Within a few years, scientists and composers began collaborating to make art with the new equipment.","Electronically generated sounds and sounds produced by live instruments were recorded on tape, where scientists and composers could be edited, manipulated, and mechanically recombined to form collages of sound that were “performed” via loudspeaker.","This type of composition was first known as musique concrète; the term used is French due to the fact that the first practitioners were based in Paris.","The basic techniques of tape music (later followed by more purely electronic music produced on computers) are looping and splicing, both of which permit compositions that cannot be reproduced by a human performer.","Rome, Paris, Cologne, and New York City all had famous postwar centers for electronic music.","PITCH, RHYTHM, AND HARMONY","A single, isolated musical sound has four properties: pitch, duration, volume, and timbre.","Pitch Pitch, Frequency, and Octaves Pitch is the highness or lowness of a sound.","A Chihuahua has a higher-pitched bark than a St. Bernard","; a kitten’s","meow is higher-pitched than a tomcat’s yowl.","A tuba is pitched lower than a piccolo.","When musicians speak of “a pitch,” they are referring to a single tone whose highness or lowness does not change—that is, a sound that consists of a steadily oscillating sound wave, like A-440.","If you pluck the A string on a guitar (A-110), find the exact midpoint and press it firmly to the fret board, and then pluck the now-half-as-long string (either side), you will hear the next-higher A.","This is because when you halve the length of the string, it naturally vibrates twice as fast (220 Hz), producing a pitch twice as high.","The musical term for the distance (or interval) between A and the next higher or next lower A is called an octave.","Pitch on a Keyboard A piano keyboard provides an excellent visual aid for understanding pitch and harmony.","High-sounding pitches are to the right; low-sounding pitches are"]]
ERROR:root:orig selected_specific len11
ERROR:root:doing mcqOrderedDict([('Multiple Choice', OrderedDict([('context', []), ('questions', []), ('answers', []), ('options', [])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:mcq_sents10
ERROR:root:OrderedDict([('Multiple Choice', OrderedDict([('context', ['When musicians speak of “a pitch,” they are referring to a single tone whose highness or lowness does not change—that is, a sound that consists of a steadily oscillating sound wave, like A-440. If you pluck the A string on a guitar (A-110), find the exact midpoint and press it firmly to the fret board, and then pluck the now-half-as-long string (either side), you will hear the next-higher A.', 'If you pluck the A string on a guitar (A-110), find the exact midpoint and press it firmly to the fret board, and then pluck the now-half-as-long string (either side), you will hear the next-higher A. This is because when you halve the length of the string, it naturally vibrates twice as fast (220 Hz), producing a pitch twice as high.', 'A tuba is pitched lower than a piccolo. When musicians speak of “a pitch,” they are referring to a single tone whose highness or lowness does not change—that is, a sound that consists of a steadily oscillating sound wave, like A-440.', 'Pitch Pitch, Frequency, and Octaves Pitch is the highness or lowness of a sound. A Chihuahua has a higher-pitched bark than a St. Bernard', 'Within a few years, scientists and composers began collaborating to make art with the new equipment. Electronically generated sounds and sounds produced by live instruments were recorded on tape, where they could be edited, manipulated, and mechanically recombined to form collages of sound that were “performed” via loudspeaker.', 'The musical term for the distance (or interval) between A and the next higher or next lower A is called an octave. Pitch on a Keyboard A piano keyboard provides an excellent visual aid for understanding pitch and harmony.', 'This type of composition was first known as musique concrète; the term used is French due to the fact that the first practitioners were based in Paris. The basic techniques of tape music (later followed by more purely electronic music produced on computers) are looping and splicing, both of which permit compositions that cannot be reproduced by a human performer.', 'meow is higher-pitched than a tomcat’s yowl. A tuba is pitched lower than a piccolo.', 'The theremin is one of the best known early electronic instruments and is still occasionally used today. When playing this instrument, the performer regulates frequency with one hand and amplitude with the other by disturbing the electrical fields that surround the protruding bars.', 'This is because when you halve the length of the string, it naturally vibrates twice as fast (220 Hz), producing a pitch twice as high. The musical term for the distance (or interval) between A and the next higher or next lower A is called an octave.']), ('questions', ['What is the A string on a guitar called?', 'How high is the pitch when you halve the length of the A string?', 'What do musicians refer to when they speak of a single tone?', 'What does a Chihuahua have that a St. Bernard has?', 'How were live instruments recorded?', 'What is the term for the distance between A and the next higher or lower A?', 'What are the two basic techniques of tape music?', 'How is a tuba positioned?', 'What surrounds the protruding bars of the theremin?', 'What is the musical term for the distance between A and the next higher or next lower A?']), ('answers', ['A-110', 'twice as high', 'a pitch', 'higher-pitched bark', 'on tape', 'Pitch on a Keyboard', 'looping and splicing', 'pitched lower than a piccolo', 'electrical fields', 'octave']), ('options', [['A-80', 'A-90', 'A-100'], ['half as high', 'four times as high', 'it doesn’t change'], ['a key', 'a scale', 'a tone'], ['more fur', 'larger size', 'longer hair'], ['on 8-track', 'on film', 'in the studio'], ['Tone', 'Fingerprint', 'Wave'], ['sampling and looping', 'looping and sampling', 'sampling and splicing'], ['at the same height as a flute', 'pitched higher than a flute', 'lower than a piccolo'], ['mechanical fields', 'acoustic fields', 'magnetic fields'], ['interval', 'chord', 'scale']])])), ('Fill in the Blanks', OrderedDict([('questions', []), ('answers', [])])), ('True/False', OrderedDict([('correct', []), ('incorrect', [])]))])
ERROR:root:Request 0:00:13.599354
ERROR:app:Exception on /coldstart [GET]
Traceback (most recent call last):
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/datadrive/qgv1/text_prod/app.py", line 702, in coldstart
    output = [call.result() for call in executed]
  File "/datadrive/qgv1/text_prod/app.py", line 702, in <listcomp>
    output = [call.result() for call in executed]
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/datadrive/qgv1/text_prod/app.py", line 699, in cold_start
    return json.loads(response.content.decode("utf-8"))
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/nravulapalli/miniconda3/envs/qgv1_env/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
